Terminals unused in grammar

    SWITCH
    CASE
    DEFAULT
    NEW


Rules useless in parser due to conflicts

   69 return_type: data_type


State 26 conflicts: 1 shift/reduce
State 103 conflicts: 4 shift/reduce
State 104 conflicts: 4 shift/reduce
State 105 conflicts: 4 shift/reduce
State 106 conflicts: 4 shift/reduce
State 114 conflicts: 2 shift/reduce
State 115 conflicts: 2 shift/reduce


Grammar

    0 $accept: program $end

    1 program: class_list

    2 class_list: class class_list
    3           | ε

    4 class: PUBLIC CLASS CLASS_NAME LBRACE member_declaration_list RBRACE

    5 member_declaration_list: member_declaration member_declaration_list
    6                        | ε

    7 member_declaration: variable_declaration
    8                   | method_declaration

    9 variable_declaration: modifier data_type IDENTIFIER SEMICOLON

   10 method_declaration: modifier return_type IDENTIFIER LPAREN parameter_list RPAREN LBRACE method_body RBRACE

   11 parameter_list: parameter COMMA parameter_list
   12               | parameter
   13               | ε

   14 parameter: data_type IDENTIFIER

   15 method_body: variable_declaration_list instructions

   16 variable_declaration_list: variable_declaration variable_declaration_list
   17                          | ε

   18 instructions: instruction instructions
   19             | ε

   20 instruction: assignment
   21            | loop
   22            | control
   23            | print
   24            | RETURN expression SEMICOLON
   25            | BREAK SEMICOLON

   26 assignment: IDENTIFIER ASSIGN expression SEMICOLON

   27 expression: literal
   28           | IDENTIFIER
   29           | expression PLUS expression
   30           | expression MINUS expression
   31           | expression MUL expression
   32           | expression DIV expression
   33           | LPAREN expression RPAREN
   34           | IDENTIFIER LPAREN parameter_list RPAREN

   35 literal: INT_LITERAL
   36        | DOUBLE_LITERAL
   37        | CHAR_LITERAL
   38        | STRING_LITERAL
   39        | TRUE
   40        | FALSE

   41 loop: DO LBRACE instructions RBRACE WHILE LPAREN condition RPAREN SEMICOLON
   42     | FOR LPAREN expression1 SEMICOLON expression2 SEMICOLON expression3 RPAREN LBRACE instructions RBRACE

   43 expression1: data_type IDENTIFIER ASSIGN INT_LITERAL

   44 expression2: IDENTIFIER LT INT_LITERAL
   45            | IDENTIFIER GT INT_LITERAL
   46            | IDENTIFIER EQUAL INT_LITERAL
   47            | IDENTIFIER NOTEQUAL INT_LITERAL

   48 expression3: IDENTIFIER ASSIGN IDENTIFIER PLUS INT_LITERAL
   49            | IDENTIFIER ASSIGN IDENTIFIER MINUS INT_LITERAL

   50 condition: IDENTIFIER LT IDENTIFIER
   51          | IDENTIFIER GT IDENTIFIER
   52          | IDENTIFIER EQUAL IDENTIFIER
   53          | IDENTIFIER NOTEQUAL IDENTIFIER
   54          | condition AND condition
   55          | condition OR condition

   56 control: IF LPAREN condition RPAREN LBRACE instructions RBRACE else_part

   57 else_part: ELSE IF LPAREN condition RPAREN LBRACE instructions RBRACE else_part
   58          | ELSE LBRACE instructions RBRACE
   59          | ε

   60 print: PRINT LPAREN STRING_LITERAL COMMA IDENTIFIER RPAREN SEMICOLON
   61      | PRINT LPAREN STRING_LITERAL RPAREN SEMICOLON

   62 modifier: PUBLIC
   63         | PRIVATE

   64 data_type: INT
   65          | CHAR
   66          | DOUBLE
   67          | BOOLEAN
   68          | STRING_LITERAL

   69 return_type: data_type
   70            | VOID
   71            | CLASS_NAME


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    PUBLIC (258) 4 62
    PRIVATE (259) 63
    CLASS (260) 4
    INT (261) 64
    CHAR (262) 65
    DOUBLE (263) 66
    BOOLEAN (264) 67
    VOID (265) 70
    IF (266) 56 57
    ELSE (267) 57 58
    WHILE (268) 41
    DO (269) 41
    FOR (270) 42
    SWITCH (271)
    CASE (272)
    DEFAULT (273)
    BREAK (274) 25
    TRUE (275) 39
    FALSE (276) 40
    NEW (277)
    RETURN (278) 24
    PRINT (279) 60 61
    PLUS (280) 29 48
    MINUS (281) 30 49
    MUL (282) 31
    DIV (283) 32
    EQUAL (284) 46 52
    NOTEQUAL (285) 47 53
    GT (286) 45 51
    LT (287) 44 50
    AND (288) 54
    OR (289) 55
    ASSIGN (290) 26 43 48 49
    SEMICOLON (291) 9 24 25 26 41 42 60 61
    COMMA (292) 11 60
    LBRACE (293) 4 10 41 42 56 57 58
    RBRACE (294) 4 10 41 42 56 57 58
    LPAREN (295) 10 33 34 41 42 56 57 60 61
    RPAREN (296) 10 33 34 41 42 56 57 60 61
    INT_LITERAL (297) 35 43 44 45 46 47 48 49
    DOUBLE_LITERAL (298) 36
    CHAR_LITERAL (299) 37
    STRING_LITERAL (300) 38 60 61 68
    IDENTIFIER (301) 9 10 14 26 28 34 43 44 45 46 47 48 49 50 51 52 53 60
    CLASS_NAME (302) 4 71


Nonterminals, with rules where they appear

    $accept (48)
        on left: 0
    program (49)
        on left: 1
        on right: 0
    class_list (50)
        on left: 2 3
        on right: 1 2
    class (51)
        on left: 4
        on right: 2
    member_declaration_list (52)
        on left: 5 6
        on right: 4 5
    member_declaration (53)
        on left: 7 8
        on right: 5
    variable_declaration (54)
        on left: 9
        on right: 7 16
    method_declaration (55)
        on left: 10
        on right: 8
    parameter_list (56)
        on left: 11 12 13
        on right: 10 11 34
    parameter (57)
        on left: 14
        on right: 11 12
    method_body (58)
        on left: 15
        on right: 10
    variable_declaration_list (59)
        on left: 16 17
        on right: 15 16
    instructions (60)
        on left: 18 19
        on right: 15 18 41 42 56 57 58
    instruction (61)
        on left: 20 21 22 23 24 25
        on right: 18
    assignment (62)
        on left: 26
        on right: 20
    expression (63)
        on left: 27 28 29 30 31 32 33 34
        on right: 24 26 29 30 31 32 33
    literal (64)
        on left: 35 36 37 38 39 40
        on right: 27
    loop (65)
        on left: 41 42
        on right: 21
    expression1 (66)
        on left: 43
        on right: 42
    expression2 (67)
        on left: 44 45 46 47
        on right: 42
    expression3 (68)
        on left: 48 49
        on right: 42
    condition (69)
        on left: 50 51 52 53 54 55
        on right: 41 54 55 56 57
    control (70)
        on left: 56
        on right: 22
    else_part (71)
        on left: 57 58 59
        on right: 56 57
    print (72)
        on left: 60 61
        on right: 23
    modifier (73)
        on left: 62 63
        on right: 9 10
    data_type (74)
        on left: 64 65 66 67 68
        on right: 9 14 43 69
    return_type (75)
        on left: 69 70 71
        on right: 10


State 0

    0 $accept: • program $end

    PUBLIC  shift, and go to state 1

    $default  reduce using rule 3 (class_list)

    program     go to state 2
    class_list  go to state 3
    class       go to state 4


State 1

    4 class: PUBLIC • CLASS CLASS_NAME LBRACE member_declaration_list RBRACE

    CLASS  shift, and go to state 5


State 2

    0 $accept: program • $end

    $end  shift, and go to state 6


State 3

    1 program: class_list •

    $default  reduce using rule 1 (program)


State 4

    2 class_list: class • class_list

    PUBLIC  shift, and go to state 1

    $default  reduce using rule 3 (class_list)

    class_list  go to state 7
    class       go to state 4


State 5

    4 class: PUBLIC CLASS • CLASS_NAME LBRACE member_declaration_list RBRACE

    CLASS_NAME  shift, and go to state 8


State 6

    0 $accept: program $end •

    $default  accept


State 7

    2 class_list: class class_list •

    $default  reduce using rule 2 (class_list)


State 8

    4 class: PUBLIC CLASS CLASS_NAME • LBRACE member_declaration_list RBRACE

    LBRACE  shift, and go to state 9


State 9

    4 class: PUBLIC CLASS CLASS_NAME LBRACE • member_declaration_list RBRACE

    PUBLIC   shift, and go to state 10
    PRIVATE  shift, and go to state 11

    $default  reduce using rule 6 (member_declaration_list)

    member_declaration_list  go to state 12
    member_declaration       go to state 13
    variable_declaration     go to state 14
    method_declaration       go to state 15
    modifier                 go to state 16


State 10

   62 modifier: PUBLIC •

    $default  reduce using rule 62 (modifier)


State 11

   63 modifier: PRIVATE •

    $default  reduce using rule 63 (modifier)


State 12

    4 class: PUBLIC CLASS CLASS_NAME LBRACE member_declaration_list • RBRACE

    RBRACE  shift, and go to state 17


State 13

    5 member_declaration_list: member_declaration • member_declaration_list

    PUBLIC   shift, and go to state 10
    PRIVATE  shift, and go to state 11

    $default  reduce using rule 6 (member_declaration_list)

    member_declaration_list  go to state 18
    member_declaration       go to state 13
    variable_declaration     go to state 14
    method_declaration       go to state 15
    modifier                 go to state 16


State 14

    7 member_declaration: variable_declaration •

    $default  reduce using rule 7 (member_declaration)


State 15

    8 member_declaration: method_declaration •

    $default  reduce using rule 8 (member_declaration)


State 16

    9 variable_declaration: modifier • data_type IDENTIFIER SEMICOLON
   10 method_declaration: modifier • return_type IDENTIFIER LPAREN parameter_list RPAREN LBRACE method_body RBRACE

    INT             shift, and go to state 19
    CHAR            shift, and go to state 20
    DOUBLE          shift, and go to state 21
    BOOLEAN         shift, and go to state 22
    VOID            shift, and go to state 23
    STRING_LITERAL  shift, and go to state 24
    CLASS_NAME      shift, and go to state 25

    data_type    go to state 26
    return_type  go to state 27


State 17

    4 class: PUBLIC CLASS CLASS_NAME LBRACE member_declaration_list RBRACE •

    $default  reduce using rule 4 (class)


State 18

    5 member_declaration_list: member_declaration member_declaration_list •

    $default  reduce using rule 5 (member_declaration_list)


State 19

   64 data_type: INT •

    $default  reduce using rule 64 (data_type)


State 20

   65 data_type: CHAR •

    $default  reduce using rule 65 (data_type)


State 21

   66 data_type: DOUBLE •

    $default  reduce using rule 66 (data_type)


State 22

   67 data_type: BOOLEAN •

    $default  reduce using rule 67 (data_type)


State 23

   70 return_type: VOID •

    $default  reduce using rule 70 (return_type)


State 24

   68 data_type: STRING_LITERAL •

    $default  reduce using rule 68 (data_type)


State 25

   71 return_type: CLASS_NAME •

    $default  reduce using rule 71 (return_type)


State 26

    9 variable_declaration: modifier data_type • IDENTIFIER SEMICOLON
   69 return_type: data_type •

    IDENTIFIER  shift, and go to state 28

    IDENTIFIER  [reduce using rule 69 (return_type)]


State 27

   10 method_declaration: modifier return_type • IDENTIFIER LPAREN parameter_list RPAREN LBRACE method_body RBRACE

    IDENTIFIER  shift, and go to state 29


State 28

    9 variable_declaration: modifier data_type IDENTIFIER • SEMICOLON

    SEMICOLON  shift, and go to state 30


State 29

   10 method_declaration: modifier return_type IDENTIFIER • LPAREN parameter_list RPAREN LBRACE method_body RBRACE

    LPAREN  shift, and go to state 31


State 30

    9 variable_declaration: modifier data_type IDENTIFIER SEMICOLON •

    $default  reduce using rule 9 (variable_declaration)


State 31

   10 method_declaration: modifier return_type IDENTIFIER LPAREN • parameter_list RPAREN LBRACE method_body RBRACE

    INT             shift, and go to state 19
    CHAR            shift, and go to state 20
    DOUBLE          shift, and go to state 21
    BOOLEAN         shift, and go to state 22
    STRING_LITERAL  shift, and go to state 24

    $default  reduce using rule 13 (parameter_list)

    parameter_list  go to state 32
    parameter       go to state 33
    data_type       go to state 34


State 32

   10 method_declaration: modifier return_type IDENTIFIER LPAREN parameter_list • RPAREN LBRACE method_body RBRACE

    RPAREN  shift, and go to state 35


State 33

   11 parameter_list: parameter • COMMA parameter_list
   12               | parameter •

    COMMA  shift, and go to state 36

    $default  reduce using rule 12 (parameter_list)


State 34

   14 parameter: data_type • IDENTIFIER

    IDENTIFIER  shift, and go to state 37


State 35

   10 method_declaration: modifier return_type IDENTIFIER LPAREN parameter_list RPAREN • LBRACE method_body RBRACE

    LBRACE  shift, and go to state 38


State 36

   11 parameter_list: parameter COMMA • parameter_list

    INT             shift, and go to state 19
    CHAR            shift, and go to state 20
    DOUBLE          shift, and go to state 21
    BOOLEAN         shift, and go to state 22
    STRING_LITERAL  shift, and go to state 24

    $default  reduce using rule 13 (parameter_list)

    parameter_list  go to state 39
    parameter       go to state 33
    data_type       go to state 34


State 37

   14 parameter: data_type IDENTIFIER •

    $default  reduce using rule 14 (parameter)


State 38

   10 method_declaration: modifier return_type IDENTIFIER LPAREN parameter_list RPAREN LBRACE • method_body RBRACE

    PUBLIC   shift, and go to state 10
    PRIVATE  shift, and go to state 11

    $default  reduce using rule 17 (variable_declaration_list)

    variable_declaration       go to state 40
    method_body                go to state 41
    variable_declaration_list  go to state 42
    modifier                   go to state 43


State 39

   11 parameter_list: parameter COMMA parameter_list •

    $default  reduce using rule 11 (parameter_list)


State 40

   16 variable_declaration_list: variable_declaration • variable_declaration_list

    PUBLIC   shift, and go to state 10
    PRIVATE  shift, and go to state 11

    $default  reduce using rule 17 (variable_declaration_list)

    variable_declaration       go to state 40
    variable_declaration_list  go to state 44
    modifier                   go to state 43


State 41

   10 method_declaration: modifier return_type IDENTIFIER LPAREN parameter_list RPAREN LBRACE method_body • RBRACE

    RBRACE  shift, and go to state 45


State 42

   15 method_body: variable_declaration_list • instructions

    IF          shift, and go to state 46
    DO          shift, and go to state 47
    FOR         shift, and go to state 48
    BREAK       shift, and go to state 49
    RETURN      shift, and go to state 50
    PRINT       shift, and go to state 51
    IDENTIFIER  shift, and go to state 52

    $default  reduce using rule 19 (instructions)

    instructions  go to state 53
    instruction   go to state 54
    assignment    go to state 55
    loop          go to state 56
    control       go to state 57
    print         go to state 58


State 43

    9 variable_declaration: modifier • data_type IDENTIFIER SEMICOLON

    INT             shift, and go to state 19
    CHAR            shift, and go to state 20
    DOUBLE          shift, and go to state 21
    BOOLEAN         shift, and go to state 22
    STRING_LITERAL  shift, and go to state 24

    data_type  go to state 59


State 44

   16 variable_declaration_list: variable_declaration variable_declaration_list •

    $default  reduce using rule 16 (variable_declaration_list)


State 45

   10 method_declaration: modifier return_type IDENTIFIER LPAREN parameter_list RPAREN LBRACE method_body RBRACE •

    $default  reduce using rule 10 (method_declaration)


State 46

   56 control: IF • LPAREN condition RPAREN LBRACE instructions RBRACE else_part

    LPAREN  shift, and go to state 60


State 47

   41 loop: DO • LBRACE instructions RBRACE WHILE LPAREN condition RPAREN SEMICOLON

    LBRACE  shift, and go to state 61


State 48

   42 loop: FOR • LPAREN expression1 SEMICOLON expression2 SEMICOLON expression3 RPAREN LBRACE instructions RBRACE

    LPAREN  shift, and go to state 62


State 49

   25 instruction: BREAK • SEMICOLON

    SEMICOLON  shift, and go to state 63


State 50

   24 instruction: RETURN • expression SEMICOLON

    TRUE            shift, and go to state 64
    FALSE           shift, and go to state 65
    LPAREN          shift, and go to state 66
    INT_LITERAL     shift, and go to state 67
    DOUBLE_LITERAL  shift, and go to state 68
    CHAR_LITERAL    shift, and go to state 69
    STRING_LITERAL  shift, and go to state 70
    IDENTIFIER      shift, and go to state 71

    expression  go to state 72
    literal     go to state 73


State 51

   60 print: PRINT • LPAREN STRING_LITERAL COMMA IDENTIFIER RPAREN SEMICOLON
   61      | PRINT • LPAREN STRING_LITERAL RPAREN SEMICOLON

    LPAREN  shift, and go to state 74


State 52

   26 assignment: IDENTIFIER • ASSIGN expression SEMICOLON

    ASSIGN  shift, and go to state 75


State 53

   15 method_body: variable_declaration_list instructions •

    $default  reduce using rule 15 (method_body)


State 54

   18 instructions: instruction • instructions

    IF          shift, and go to state 46
    DO          shift, and go to state 47
    FOR         shift, and go to state 48
    BREAK       shift, and go to state 49
    RETURN      shift, and go to state 50
    PRINT       shift, and go to state 51
    IDENTIFIER  shift, and go to state 52

    $default  reduce using rule 19 (instructions)

    instructions  go to state 76
    instruction   go to state 54
    assignment    go to state 55
    loop          go to state 56
    control       go to state 57
    print         go to state 58


State 55

   20 instruction: assignment •

    $default  reduce using rule 20 (instruction)


State 56

   21 instruction: loop •

    $default  reduce using rule 21 (instruction)


State 57

   22 instruction: control •

    $default  reduce using rule 22 (instruction)


State 58

   23 instruction: print •

    $default  reduce using rule 23 (instruction)


State 59

    9 variable_declaration: modifier data_type • IDENTIFIER SEMICOLON

    IDENTIFIER  shift, and go to state 28


State 60

   56 control: IF LPAREN • condition RPAREN LBRACE instructions RBRACE else_part

    IDENTIFIER  shift, and go to state 77

    condition  go to state 78


State 61

   41 loop: DO LBRACE • instructions RBRACE WHILE LPAREN condition RPAREN SEMICOLON

    IF          shift, and go to state 46
    DO          shift, and go to state 47
    FOR         shift, and go to state 48
    BREAK       shift, and go to state 49
    RETURN      shift, and go to state 50
    PRINT       shift, and go to state 51
    IDENTIFIER  shift, and go to state 52

    $default  reduce using rule 19 (instructions)

    instructions  go to state 79
    instruction   go to state 54
    assignment    go to state 55
    loop          go to state 56
    control       go to state 57
    print         go to state 58


State 62

   42 loop: FOR LPAREN • expression1 SEMICOLON expression2 SEMICOLON expression3 RPAREN LBRACE instructions RBRACE

    INT             shift, and go to state 19
    CHAR            shift, and go to state 20
    DOUBLE          shift, and go to state 21
    BOOLEAN         shift, and go to state 22
    STRING_LITERAL  shift, and go to state 24

    expression1  go to state 80
    data_type    go to state 81


State 63

   25 instruction: BREAK SEMICOLON •

    $default  reduce using rule 25 (instruction)


State 64

   39 literal: TRUE •

    $default  reduce using rule 39 (literal)


State 65

   40 literal: FALSE •

    $default  reduce using rule 40 (literal)


State 66

   33 expression: LPAREN • expression RPAREN

    TRUE            shift, and go to state 64
    FALSE           shift, and go to state 65
    LPAREN          shift, and go to state 66
    INT_LITERAL     shift, and go to state 67
    DOUBLE_LITERAL  shift, and go to state 68
    CHAR_LITERAL    shift, and go to state 69
    STRING_LITERAL  shift, and go to state 70
    IDENTIFIER      shift, and go to state 71

    expression  go to state 82
    literal     go to state 73


State 67

   35 literal: INT_LITERAL •

    $default  reduce using rule 35 (literal)


State 68

   36 literal: DOUBLE_LITERAL •

    $default  reduce using rule 36 (literal)


State 69

   37 literal: CHAR_LITERAL •

    $default  reduce using rule 37 (literal)


State 70

   38 literal: STRING_LITERAL •

    $default  reduce using rule 38 (literal)


State 71

   28 expression: IDENTIFIER •
   34           | IDENTIFIER • LPAREN parameter_list RPAREN

    LPAREN  shift, and go to state 83

    $default  reduce using rule 28 (expression)


State 72

   24 instruction: RETURN expression • SEMICOLON
   29 expression: expression • PLUS expression
   30           | expression • MINUS expression
   31           | expression • MUL expression
   32           | expression • DIV expression

    PLUS       shift, and go to state 84
    MINUS      shift, and go to state 85
    MUL        shift, and go to state 86
    DIV        shift, and go to state 87
    SEMICOLON  shift, and go to state 88


State 73

   27 expression: literal •

    $default  reduce using rule 27 (expression)


State 74

   60 print: PRINT LPAREN • STRING_LITERAL COMMA IDENTIFIER RPAREN SEMICOLON
   61      | PRINT LPAREN • STRING_LITERAL RPAREN SEMICOLON

    STRING_LITERAL  shift, and go to state 89


State 75

   26 assignment: IDENTIFIER ASSIGN • expression SEMICOLON

    TRUE            shift, and go to state 64
    FALSE           shift, and go to state 65
    LPAREN          shift, and go to state 66
    INT_LITERAL     shift, and go to state 67
    DOUBLE_LITERAL  shift, and go to state 68
    CHAR_LITERAL    shift, and go to state 69
    STRING_LITERAL  shift, and go to state 70
    IDENTIFIER      shift, and go to state 71

    expression  go to state 90
    literal     go to state 73


State 76

   18 instructions: instruction instructions •

    $default  reduce using rule 18 (instructions)


State 77

   50 condition: IDENTIFIER • LT IDENTIFIER
   51          | IDENTIFIER • GT IDENTIFIER
   52          | IDENTIFIER • EQUAL IDENTIFIER
   53          | IDENTIFIER • NOTEQUAL IDENTIFIER

    EQUAL     shift, and go to state 91
    NOTEQUAL  shift, and go to state 92
    GT        shift, and go to state 93
    LT        shift, and go to state 94


State 78

   54 condition: condition • AND condition
   55          | condition • OR condition
   56 control: IF LPAREN condition • RPAREN LBRACE instructions RBRACE else_part

    AND     shift, and go to state 95
    OR      shift, and go to state 96
    RPAREN  shift, and go to state 97


State 79

   41 loop: DO LBRACE instructions • RBRACE WHILE LPAREN condition RPAREN SEMICOLON

    RBRACE  shift, and go to state 98


State 80

   42 loop: FOR LPAREN expression1 • SEMICOLON expression2 SEMICOLON expression3 RPAREN LBRACE instructions RBRACE

    SEMICOLON  shift, and go to state 99


State 81

   43 expression1: data_type • IDENTIFIER ASSIGN INT_LITERAL

    IDENTIFIER  shift, and go to state 100


State 82

   29 expression: expression • PLUS expression
   30           | expression • MINUS expression
   31           | expression • MUL expression
   32           | expression • DIV expression
   33           | LPAREN expression • RPAREN

    PLUS    shift, and go to state 84
    MINUS   shift, and go to state 85
    MUL     shift, and go to state 86
    DIV     shift, and go to state 87
    RPAREN  shift, and go to state 101


State 83

   34 expression: IDENTIFIER LPAREN • parameter_list RPAREN

    INT             shift, and go to state 19
    CHAR            shift, and go to state 20
    DOUBLE          shift, and go to state 21
    BOOLEAN         shift, and go to state 22
    STRING_LITERAL  shift, and go to state 24

    $default  reduce using rule 13 (parameter_list)

    parameter_list  go to state 102
    parameter       go to state 33
    data_type       go to state 34


State 84

   29 expression: expression PLUS • expression

    TRUE            shift, and go to state 64
    FALSE           shift, and go to state 65
    LPAREN          shift, and go to state 66
    INT_LITERAL     shift, and go to state 67
    DOUBLE_LITERAL  shift, and go to state 68
    CHAR_LITERAL    shift, and go to state 69
    STRING_LITERAL  shift, and go to state 70
    IDENTIFIER      shift, and go to state 71

    expression  go to state 103
    literal     go to state 73


State 85

   30 expression: expression MINUS • expression

    TRUE            shift, and go to state 64
    FALSE           shift, and go to state 65
    LPAREN          shift, and go to state 66
    INT_LITERAL     shift, and go to state 67
    DOUBLE_LITERAL  shift, and go to state 68
    CHAR_LITERAL    shift, and go to state 69
    STRING_LITERAL  shift, and go to state 70
    IDENTIFIER      shift, and go to state 71

    expression  go to state 104
    literal     go to state 73


State 86

   31 expression: expression MUL • expression

    TRUE            shift, and go to state 64
    FALSE           shift, and go to state 65
    LPAREN          shift, and go to state 66
    INT_LITERAL     shift, and go to state 67
    DOUBLE_LITERAL  shift, and go to state 68
    CHAR_LITERAL    shift, and go to state 69
    STRING_LITERAL  shift, and go to state 70
    IDENTIFIER      shift, and go to state 71

    expression  go to state 105
    literal     go to state 73


State 87

   32 expression: expression DIV • expression

    TRUE            shift, and go to state 64
    FALSE           shift, and go to state 65
    LPAREN          shift, and go to state 66
    INT_LITERAL     shift, and go to state 67
    DOUBLE_LITERAL  shift, and go to state 68
    CHAR_LITERAL    shift, and go to state 69
    STRING_LITERAL  shift, and go to state 70
    IDENTIFIER      shift, and go to state 71

    expression  go to state 106
    literal     go to state 73


State 88

   24 instruction: RETURN expression SEMICOLON •

    $default  reduce using rule 24 (instruction)


State 89

   60 print: PRINT LPAREN STRING_LITERAL • COMMA IDENTIFIER RPAREN SEMICOLON
   61      | PRINT LPAREN STRING_LITERAL • RPAREN SEMICOLON

    COMMA   shift, and go to state 107
    RPAREN  shift, and go to state 108


State 90

   26 assignment: IDENTIFIER ASSIGN expression • SEMICOLON
   29 expression: expression • PLUS expression
   30           | expression • MINUS expression
   31           | expression • MUL expression
   32           | expression • DIV expression

    PLUS       shift, and go to state 84
    MINUS      shift, and go to state 85
    MUL        shift, and go to state 86
    DIV        shift, and go to state 87
    SEMICOLON  shift, and go to state 109


State 91

   52 condition: IDENTIFIER EQUAL • IDENTIFIER

    IDENTIFIER  shift, and go to state 110


State 92

   53 condition: IDENTIFIER NOTEQUAL • IDENTIFIER

    IDENTIFIER  shift, and go to state 111


State 93

   51 condition: IDENTIFIER GT • IDENTIFIER

    IDENTIFIER  shift, and go to state 112


State 94

   50 condition: IDENTIFIER LT • IDENTIFIER

    IDENTIFIER  shift, and go to state 113


State 95

   54 condition: condition AND • condition

    IDENTIFIER  shift, and go to state 77

    condition  go to state 114


State 96

   55 condition: condition OR • condition

    IDENTIFIER  shift, and go to state 77

    condition  go to state 115


State 97

   56 control: IF LPAREN condition RPAREN • LBRACE instructions RBRACE else_part

    LBRACE  shift, and go to state 116


State 98

   41 loop: DO LBRACE instructions RBRACE • WHILE LPAREN condition RPAREN SEMICOLON

    WHILE  shift, and go to state 117


State 99

   42 loop: FOR LPAREN expression1 SEMICOLON • expression2 SEMICOLON expression3 RPAREN LBRACE instructions RBRACE

    IDENTIFIER  shift, and go to state 118

    expression2  go to state 119


State 100

   43 expression1: data_type IDENTIFIER • ASSIGN INT_LITERAL

    ASSIGN  shift, and go to state 120


State 101

   33 expression: LPAREN expression RPAREN •

    $default  reduce using rule 33 (expression)


State 102

   34 expression: IDENTIFIER LPAREN parameter_list • RPAREN

    RPAREN  shift, and go to state 121


State 103

   29 expression: expression • PLUS expression
   29           | expression PLUS expression •
   30           | expression • MINUS expression
   31           | expression • MUL expression
   32           | expression • DIV expression

    PLUS   shift, and go to state 84
    MINUS  shift, and go to state 85
    MUL    shift, and go to state 86
    DIV    shift, and go to state 87

    PLUS      [reduce using rule 29 (expression)]
    MINUS     [reduce using rule 29 (expression)]
    MUL       [reduce using rule 29 (expression)]
    DIV       [reduce using rule 29 (expression)]
    $default  reduce using rule 29 (expression)


State 104

   29 expression: expression • PLUS expression
   30           | expression • MINUS expression
   30           | expression MINUS expression •
   31           | expression • MUL expression
   32           | expression • DIV expression

    PLUS   shift, and go to state 84
    MINUS  shift, and go to state 85
    MUL    shift, and go to state 86
    DIV    shift, and go to state 87

    PLUS      [reduce using rule 30 (expression)]
    MINUS     [reduce using rule 30 (expression)]
    MUL       [reduce using rule 30 (expression)]
    DIV       [reduce using rule 30 (expression)]
    $default  reduce using rule 30 (expression)


State 105

   29 expression: expression • PLUS expression
   30           | expression • MINUS expression
   31           | expression • MUL expression
   31           | expression MUL expression •
   32           | expression • DIV expression

    PLUS   shift, and go to state 84
    MINUS  shift, and go to state 85
    MUL    shift, and go to state 86
    DIV    shift, and go to state 87

    PLUS      [reduce using rule 31 (expression)]
    MINUS     [reduce using rule 31 (expression)]
    MUL       [reduce using rule 31 (expression)]
    DIV       [reduce using rule 31 (expression)]
    $default  reduce using rule 31 (expression)


State 106

   29 expression: expression • PLUS expression
   30           | expression • MINUS expression
   31           | expression • MUL expression
   32           | expression • DIV expression
   32           | expression DIV expression •

    PLUS   shift, and go to state 84
    MINUS  shift, and go to state 85
    MUL    shift, and go to state 86
    DIV    shift, and go to state 87

    PLUS      [reduce using rule 32 (expression)]
    MINUS     [reduce using rule 32 (expression)]
    MUL       [reduce using rule 32 (expression)]
    DIV       [reduce using rule 32 (expression)]
    $default  reduce using rule 32 (expression)


State 107

   60 print: PRINT LPAREN STRING_LITERAL COMMA • IDENTIFIER RPAREN SEMICOLON

    IDENTIFIER  shift, and go to state 122


State 108

   61 print: PRINT LPAREN STRING_LITERAL RPAREN • SEMICOLON

    SEMICOLON  shift, and go to state 123


State 109

   26 assignment: IDENTIFIER ASSIGN expression SEMICOLON •

    $default  reduce using rule 26 (assignment)


State 110

   52 condition: IDENTIFIER EQUAL IDENTIFIER •

    $default  reduce using rule 52 (condition)


State 111

   53 condition: IDENTIFIER NOTEQUAL IDENTIFIER •

    $default  reduce using rule 53 (condition)


State 112

   51 condition: IDENTIFIER GT IDENTIFIER •

    $default  reduce using rule 51 (condition)


State 113

   50 condition: IDENTIFIER LT IDENTIFIER •

    $default  reduce using rule 50 (condition)


State 114

   54 condition: condition • AND condition
   54          | condition AND condition •
   55          | condition • OR condition

    AND  shift, and go to state 95
    OR   shift, and go to state 96

    AND       [reduce using rule 54 (condition)]
    OR        [reduce using rule 54 (condition)]
    $default  reduce using rule 54 (condition)


State 115

   54 condition: condition • AND condition
   55          | condition • OR condition
   55          | condition OR condition •

    AND  shift, and go to state 95
    OR   shift, and go to state 96

    AND       [reduce using rule 55 (condition)]
    OR        [reduce using rule 55 (condition)]
    $default  reduce using rule 55 (condition)


State 116

   56 control: IF LPAREN condition RPAREN LBRACE • instructions RBRACE else_part

    IF          shift, and go to state 46
    DO          shift, and go to state 47
    FOR         shift, and go to state 48
    BREAK       shift, and go to state 49
    RETURN      shift, and go to state 50
    PRINT       shift, and go to state 51
    IDENTIFIER  shift, and go to state 52

    $default  reduce using rule 19 (instructions)

    instructions  go to state 124
    instruction   go to state 54
    assignment    go to state 55
    loop          go to state 56
    control       go to state 57
    print         go to state 58


State 117

   41 loop: DO LBRACE instructions RBRACE WHILE • LPAREN condition RPAREN SEMICOLON

    LPAREN  shift, and go to state 125


State 118

   44 expression2: IDENTIFIER • LT INT_LITERAL
   45            | IDENTIFIER • GT INT_LITERAL
   46            | IDENTIFIER • EQUAL INT_LITERAL
   47            | IDENTIFIER • NOTEQUAL INT_LITERAL

    EQUAL     shift, and go to state 126
    NOTEQUAL  shift, and go to state 127
    GT        shift, and go to state 128
    LT        shift, and go to state 129


State 119

   42 loop: FOR LPAREN expression1 SEMICOLON expression2 • SEMICOLON expression3 RPAREN LBRACE instructions RBRACE

    SEMICOLON  shift, and go to state 130


State 120

   43 expression1: data_type IDENTIFIER ASSIGN • INT_LITERAL

    INT_LITERAL  shift, and go to state 131


State 121

   34 expression: IDENTIFIER LPAREN parameter_list RPAREN •

    $default  reduce using rule 34 (expression)


State 122

   60 print: PRINT LPAREN STRING_LITERAL COMMA IDENTIFIER • RPAREN SEMICOLON

    RPAREN  shift, and go to state 132


State 123

   61 print: PRINT LPAREN STRING_LITERAL RPAREN SEMICOLON •

    $default  reduce using rule 61 (print)


State 124

   56 control: IF LPAREN condition RPAREN LBRACE instructions • RBRACE else_part

    RBRACE  shift, and go to state 133


State 125

   41 loop: DO LBRACE instructions RBRACE WHILE LPAREN • condition RPAREN SEMICOLON

    IDENTIFIER  shift, and go to state 77

    condition  go to state 134


State 126

   46 expression2: IDENTIFIER EQUAL • INT_LITERAL

    INT_LITERAL  shift, and go to state 135


State 127

   47 expression2: IDENTIFIER NOTEQUAL • INT_LITERAL

    INT_LITERAL  shift, and go to state 136


State 128

   45 expression2: IDENTIFIER GT • INT_LITERAL

    INT_LITERAL  shift, and go to state 137


State 129

   44 expression2: IDENTIFIER LT • INT_LITERAL

    INT_LITERAL  shift, and go to state 138


State 130

   42 loop: FOR LPAREN expression1 SEMICOLON expression2 SEMICOLON • expression3 RPAREN LBRACE instructions RBRACE

    IDENTIFIER  shift, and go to state 139

    expression3  go to state 140


State 131

   43 expression1: data_type IDENTIFIER ASSIGN INT_LITERAL •

    $default  reduce using rule 43 (expression1)


State 132

   60 print: PRINT LPAREN STRING_LITERAL COMMA IDENTIFIER RPAREN • SEMICOLON

    SEMICOLON  shift, and go to state 141


State 133

   56 control: IF LPAREN condition RPAREN LBRACE instructions RBRACE • else_part

    ELSE  shift, and go to state 142

    $default  reduce using rule 59 (else_part)

    else_part  go to state 143


State 134

   41 loop: DO LBRACE instructions RBRACE WHILE LPAREN condition • RPAREN SEMICOLON
   54 condition: condition • AND condition
   55          | condition • OR condition

    AND     shift, and go to state 95
    OR      shift, and go to state 96
    RPAREN  shift, and go to state 144


State 135

   46 expression2: IDENTIFIER EQUAL INT_LITERAL •

    $default  reduce using rule 46 (expression2)


State 136

   47 expression2: IDENTIFIER NOTEQUAL INT_LITERAL •

    $default  reduce using rule 47 (expression2)


State 137

   45 expression2: IDENTIFIER GT INT_LITERAL •

    $default  reduce using rule 45 (expression2)


State 138

   44 expression2: IDENTIFIER LT INT_LITERAL •

    $default  reduce using rule 44 (expression2)


State 139

   48 expression3: IDENTIFIER • ASSIGN IDENTIFIER PLUS INT_LITERAL
   49            | IDENTIFIER • ASSIGN IDENTIFIER MINUS INT_LITERAL

    ASSIGN  shift, and go to state 145


State 140

   42 loop: FOR LPAREN expression1 SEMICOLON expression2 SEMICOLON expression3 • RPAREN LBRACE instructions RBRACE

    RPAREN  shift, and go to state 146


State 141

   60 print: PRINT LPAREN STRING_LITERAL COMMA IDENTIFIER RPAREN SEMICOLON •

    $default  reduce using rule 60 (print)


State 142

   57 else_part: ELSE • IF LPAREN condition RPAREN LBRACE instructions RBRACE else_part
   58          | ELSE • LBRACE instructions RBRACE

    IF      shift, and go to state 147
    LBRACE  shift, and go to state 148


State 143

   56 control: IF LPAREN condition RPAREN LBRACE instructions RBRACE else_part •

    $default  reduce using rule 56 (control)


State 144

   41 loop: DO LBRACE instructions RBRACE WHILE LPAREN condition RPAREN • SEMICOLON

    SEMICOLON  shift, and go to state 149


State 145

   48 expression3: IDENTIFIER ASSIGN • IDENTIFIER PLUS INT_LITERAL
   49            | IDENTIFIER ASSIGN • IDENTIFIER MINUS INT_LITERAL

    IDENTIFIER  shift, and go to state 150


State 146

   42 loop: FOR LPAREN expression1 SEMICOLON expression2 SEMICOLON expression3 RPAREN • LBRACE instructions RBRACE

    LBRACE  shift, and go to state 151


State 147

   57 else_part: ELSE IF • LPAREN condition RPAREN LBRACE instructions RBRACE else_part

    LPAREN  shift, and go to state 152


State 148

   58 else_part: ELSE LBRACE • instructions RBRACE

    IF          shift, and go to state 46
    DO          shift, and go to state 47
    FOR         shift, and go to state 48
    BREAK       shift, and go to state 49
    RETURN      shift, and go to state 50
    PRINT       shift, and go to state 51
    IDENTIFIER  shift, and go to state 52

    $default  reduce using rule 19 (instructions)

    instructions  go to state 153
    instruction   go to state 54
    assignment    go to state 55
    loop          go to state 56
    control       go to state 57
    print         go to state 58


State 149

   41 loop: DO LBRACE instructions RBRACE WHILE LPAREN condition RPAREN SEMICOLON •

    $default  reduce using rule 41 (loop)


State 150

   48 expression3: IDENTIFIER ASSIGN IDENTIFIER • PLUS INT_LITERAL
   49            | IDENTIFIER ASSIGN IDENTIFIER • MINUS INT_LITERAL

    PLUS   shift, and go to state 154
    MINUS  shift, and go to state 155


State 151

   42 loop: FOR LPAREN expression1 SEMICOLON expression2 SEMICOLON expression3 RPAREN LBRACE • instructions RBRACE

    IF          shift, and go to state 46
    DO          shift, and go to state 47
    FOR         shift, and go to state 48
    BREAK       shift, and go to state 49
    RETURN      shift, and go to state 50
    PRINT       shift, and go to state 51
    IDENTIFIER  shift, and go to state 52

    $default  reduce using rule 19 (instructions)

    instructions  go to state 156
    instruction   go to state 54
    assignment    go to state 55
    loop          go to state 56
    control       go to state 57
    print         go to state 58


State 152

   57 else_part: ELSE IF LPAREN • condition RPAREN LBRACE instructions RBRACE else_part

    IDENTIFIER  shift, and go to state 77

    condition  go to state 157


State 153

   58 else_part: ELSE LBRACE instructions • RBRACE

    RBRACE  shift, and go to state 158


State 154

   48 expression3: IDENTIFIER ASSIGN IDENTIFIER PLUS • INT_LITERAL

    INT_LITERAL  shift, and go to state 159


State 155

   49 expression3: IDENTIFIER ASSIGN IDENTIFIER MINUS • INT_LITERAL

    INT_LITERAL  shift, and go to state 160


State 156

   42 loop: FOR LPAREN expression1 SEMICOLON expression2 SEMICOLON expression3 RPAREN LBRACE instructions • RBRACE

    RBRACE  shift, and go to state 161


State 157

   54 condition: condition • AND condition
   55          | condition • OR condition
   57 else_part: ELSE IF LPAREN condition • RPAREN LBRACE instructions RBRACE else_part

    AND     shift, and go to state 95
    OR      shift, and go to state 96
    RPAREN  shift, and go to state 162


State 158

   58 else_part: ELSE LBRACE instructions RBRACE •

    $default  reduce using rule 58 (else_part)


State 159

   48 expression3: IDENTIFIER ASSIGN IDENTIFIER PLUS INT_LITERAL •

    $default  reduce using rule 48 (expression3)


State 160

   49 expression3: IDENTIFIER ASSIGN IDENTIFIER MINUS INT_LITERAL •

    $default  reduce using rule 49 (expression3)


State 161

   42 loop: FOR LPAREN expression1 SEMICOLON expression2 SEMICOLON expression3 RPAREN LBRACE instructions RBRACE •

    $default  reduce using rule 42 (loop)


State 162

   57 else_part: ELSE IF LPAREN condition RPAREN • LBRACE instructions RBRACE else_part

    LBRACE  shift, and go to state 163


State 163

   57 else_part: ELSE IF LPAREN condition RPAREN LBRACE • instructions RBRACE else_part

    IF          shift, and go to state 46
    DO          shift, and go to state 47
    FOR         shift, and go to state 48
    BREAK       shift, and go to state 49
    RETURN      shift, and go to state 50
    PRINT       shift, and go to state 51
    IDENTIFIER  shift, and go to state 52

    $default  reduce using rule 19 (instructions)

    instructions  go to state 164
    instruction   go to state 54
    assignment    go to state 55
    loop          go to state 56
    control       go to state 57
    print         go to state 58


State 164

   57 else_part: ELSE IF LPAREN condition RPAREN LBRACE instructions • RBRACE else_part

    RBRACE  shift, and go to state 165


State 165

   57 else_part: ELSE IF LPAREN condition RPAREN LBRACE instructions RBRACE • else_part

    ELSE  shift, and go to state 142

    $default  reduce using rule 59 (else_part)

    else_part  go to state 166


State 166

   57 else_part: ELSE IF LPAREN condition RPAREN LBRACE instructions RBRACE else_part •

    $default  reduce using rule 57 (else_part)

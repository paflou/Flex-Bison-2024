Nonterminals useless in grammar

    return_type
    object_access
    method_body
    con1


Terminals unused in grammar

    VOID
    CASE
    TRUE
    FALSE


Rules useless in grammar

   79 return_type: DATATYPE
   80            | CLASS_NAME
   81            | VOID

   82 object_access: IDENT DOT IDENT

   83 method_body: variable_declaration commands

   84 con1: IDENT
   85     | literal


Grammar

    0 $accept: program $end

    1 program: ε
    2        | program class

    3 class: PUBLIC CLASS CLASS_NAME LCURLY variable_declaration method_declaration RCURLY

    4 variable_declaration: DATATYPE IDENT SEMICOLON
    5                     | modifier DATATYPE IDENT SEMICOLON

    6 modifier: PUBLIC
    7         | PRIVATE

    8 secondary_modifier: STATIC
    9                   | ABSTRACT
   10                   | FINAL
   11                   | NATIVE
   12                   | SYNCHRONIZED

   13 object_creation: modifier CLASS_NAME IDENT EQUALS NEW CLASS_NAME LPAR RPAR SEMICOLON
   14                | CLASS_NAME IDENT EQUALS NEW CLASS_NAME LPAR RPAR SEMICOLON

   15 method_declaration: modifier secondary_modifier IDENT LPAR parameter_list RPAR LCURLY variable_declaration commands RCURLY

   16 parameter_list: DATATYPE IDENT
   17               | parameter_list COMMA DATATYPE IDENT

   18 commands: ε
   19         | assignment
   20         | loop
   21         | control
   22         | print
   23         | return
   24         | break

   25 assignment: IDENT EQUALS expression SEMICOLON

   26 literal: INT
   27        | CHAR
   28        | STRING
   29        | BOOL
   30        | DOUBLE

   31 expression: literal
   32           | suntheti_parastash

   33 suntheti_parastash: ε
   34                   | IDENT
   35                   | LPAR suntheti_parastash RPAR
   36                   | call_method
   37                   | object_creation
   38                   | arithmitiki_parastasi

   39 call_method: IDENT DOT IDENT LPAR argument_list RPAR

   40 argument_list: ε
   41              | IDENT
   42              | argument_list COMMA IDENT

   43 arithmitiki_parastasi: expression '+' expression
   44                      | expression '-' expression
   45                      | expression '*' expression
   46                      | expression '/' expression

   47 instructions: commands
   48             | variable_declaration
   49             | object_creation
   50             | method_declaration

   51 loop: while
   52     | for

   53 while: DO LCURLY instructions RCURLY WHILE LPAR condition RPAR SEMICOLON

   54 condition: expression con2 expression

   55 con2: RELOP
   56     | EQUOP
   57     | NOTOP
   58     | ANDOP
   59     | OROP

   60 for: FOR LPAR exp1 SEMICOLON exp2 SEMICOLON exp3 RPAR LCURLY instructions RCURLY

   61 exp1: DATATYPE IDENT EQUALS DATATYPE

   62 exp2: IDENT con2 DATATYPE

   63 exp3: IDENT EQUALS expression

   64 control: if
   65        | switch_statement

   66 if: IF LPAR condition RPAR LCURLY instructions RCURLY elseif else

   67 elseif: ε
   68       | elseif ELSE IF LPAR condition RPAR LCURLY instructions RCURLY

   69 else: ε
   70     | ELSE LCURLY instructions RCURLY

   71 switch_statement: SWITCH LPAR expression RPAR LCURLY case default_opt RCURLY

   72 case: expression COLON instructions

   73 default_opt: ε
   74            | DEFAULT COLON instructions

   75 print: OUTPRINT LPAR STRING RPAR SEMICOLON
   76      | OUTPRINT LPAR STRING COMMA IDENT RPAR SEMICOLON

   77 return: RETURN expression SEMICOLON

   78 break: BREAK SEMICOLON


Terminals, with rules where they appear

    $end (0) 0
    '*' (42) 45
    '+' (43) 43
    '-' (45) 44
    '/' (47) 46
    error (256)
    DATATYPE (258) 4 5 16 17 61 62
    NEW (259) 13 14
    RETURN (260) 77
    VOID (261)
    IF (262) 66 68
    ELSE (263) 68 70
    WHILE (264) 53
    DO (265) 53
    FOR (266) 60
    SWITCH (267) 71
    CASE (268)
    DEFAULT (269) 74
    BREAK (270) 78
    TRUE (271)
    FALSE (272)
    INT (273) 26
    CHAR (274) 27
    BOOL (275) 29
    STRING (276) 28 75 76
    DOUBLE (277) 30
    PRIVATE (278) 7
    PUBLIC (279) 3 6
    STATIC (280) 8
    ABSTRACT (281) 9
    FINAL (282) 10
    NATIVE (283) 11
    SYNCHRONIZED (284) 12
    OUTPRINT (285) 75 76
    OROP (286) 59
    ANDOP (287) 58
    EQUOP (288) 56
    NOTOP (289) 57
    RELOP (290) 55
    IDENT (291) 4 5 13 14 15 16 17 25 34 39 41 42 61 62 63 76
    LCURLY (292) 3 15 53 60 66 68 70 71
    RCURLY (293) 3 15 53 60 66 68 70 71
    CLASS (294) 3
    CLASS_NAME (295) 3 13 14
    LPAR (296) 13 14 15 35 39 53 60 66 68 71 75 76
    RPAR (297) 13 14 15 35 39 53 60 66 68 71 75 76
    COLON (298) 72 74
    DOT (299) 39
    COMMA (300) 17 42 76
    SEMICOLON (301) 4 5 13 14 25 53 60 75 76 77 78
    EQUALS (302) 13 14 25 61 63


Nonterminals, with rules where they appear

    $accept (52)
        on left: 0
    program (53)
        on left: 1 2
        on right: 0 2
    class (54)
        on left: 3
        on right: 2
    variable_declaration (55)
        on left: 4 5
        on right: 3 15 48
    modifier (56)
        on left: 6 7
        on right: 5 13 15
    secondary_modifier (57)
        on left: 8 9 10 11 12
        on right: 15
    object_creation (58)
        on left: 13 14
        on right: 37 49
    method_declaration (59)
        on left: 15
        on right: 3 50
    parameter_list (60)
        on left: 16 17
        on right: 15 17
    commands (61)
        on left: 18 19 20 21 22 23 24
        on right: 15 47
    assignment (62)
        on left: 25
        on right: 19
    literal (63)
        on left: 26 27 28 29 30
        on right: 31
    expression (64)
        on left: 31 32
        on right: 25 43 44 45 46 54 63 71 72 77
    suntheti_parastash (65)
        on left: 33 34 35 36 37 38
        on right: 32 35
    call_method (66)
        on left: 39
        on right: 36
    argument_list (67)
        on left: 40 41 42
        on right: 39 42
    arithmitiki_parastasi (68)
        on left: 43 44 45 46
        on right: 38
    instructions (69)
        on left: 47 48 49 50
        on right: 53 60 66 68 70 72 74
    loop (70)
        on left: 51 52
        on right: 20
    while (71)
        on left: 53
        on right: 51
    condition (72)
        on left: 54
        on right: 53 66 68
    con2 (73)
        on left: 55 56 57 58 59
        on right: 54 62
    for (74)
        on left: 60
        on right: 52
    exp1 (75)
        on left: 61
        on right: 60
    exp2 (76)
        on left: 62
        on right: 60
    exp3 (77)
        on left: 63
        on right: 60
    control (78)
        on left: 64 65
        on right: 21
    if (79)
        on left: 66
        on right: 64
    elseif (80)
        on left: 67 68
        on right: 66 68
    else (81)
        on left: 69 70
        on right: 66
    switch_statement (82)
        on left: 71
        on right: 65
    case (83)
        on left: 72
        on right: 71
    default_opt (84)
        on left: 73 74
        on right: 71
    print (85)
        on left: 75 76
        on right: 22
    return (86)
        on left: 77
        on right: 23
    break (87)
        on left: 78
        on right: 24


State 0

    0 $accept: • program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


State 1

    0 $accept: program • $end
    2 program: program • class

    $end    shift, and go to state 2
    PUBLIC  shift, and go to state 3

    class  go to state 4


State 2

    0 $accept: program $end •

    $default  accept


State 3

    3 class: PUBLIC • CLASS CLASS_NAME LCURLY variable_declaration method_declaration RCURLY

    CLASS  shift, and go to state 5


State 4

    2 program: program class •

    $default  reduce using rule 2 (program)


State 5

    3 class: PUBLIC CLASS • CLASS_NAME LCURLY variable_declaration method_declaration RCURLY

    CLASS_NAME  shift, and go to state 6


State 6

    3 class: PUBLIC CLASS CLASS_NAME • LCURLY variable_declaration method_declaration RCURLY

    LCURLY  shift, and go to state 7


State 7

    3 class: PUBLIC CLASS CLASS_NAME LCURLY • variable_declaration method_declaration RCURLY

    DATATYPE  shift, and go to state 8
    PRIVATE   shift, and go to state 9
    PUBLIC    shift, and go to state 10

    variable_declaration  go to state 11
    modifier              go to state 12


State 8

    4 variable_declaration: DATATYPE • IDENT SEMICOLON

    IDENT  shift, and go to state 13


State 9

    7 modifier: PRIVATE •

    $default  reduce using rule 7 (modifier)


State 10

    6 modifier: PUBLIC •

    $default  reduce using rule 6 (modifier)


State 11

    3 class: PUBLIC CLASS CLASS_NAME LCURLY variable_declaration • method_declaration RCURLY

    PRIVATE  shift, and go to state 9
    PUBLIC   shift, and go to state 10

    modifier            go to state 14
    method_declaration  go to state 15


State 12

    5 variable_declaration: modifier • DATATYPE IDENT SEMICOLON

    DATATYPE  shift, and go to state 16


State 13

    4 variable_declaration: DATATYPE IDENT • SEMICOLON

    SEMICOLON  shift, and go to state 17


State 14

   15 method_declaration: modifier • secondary_modifier IDENT LPAR parameter_list RPAR LCURLY variable_declaration commands RCURLY

    STATIC        shift, and go to state 18
    ABSTRACT      shift, and go to state 19
    FINAL         shift, and go to state 20
    NATIVE        shift, and go to state 21
    SYNCHRONIZED  shift, and go to state 22

    secondary_modifier  go to state 23


State 15

    3 class: PUBLIC CLASS CLASS_NAME LCURLY variable_declaration method_declaration • RCURLY

    RCURLY  shift, and go to state 24


State 16

    5 variable_declaration: modifier DATATYPE • IDENT SEMICOLON

    IDENT  shift, and go to state 25


State 17

    4 variable_declaration: DATATYPE IDENT SEMICOLON •

    $default  reduce using rule 4 (variable_declaration)


State 18

    8 secondary_modifier: STATIC •

    $default  reduce using rule 8 (secondary_modifier)


State 19

    9 secondary_modifier: ABSTRACT •

    $default  reduce using rule 9 (secondary_modifier)


State 20

   10 secondary_modifier: FINAL •

    $default  reduce using rule 10 (secondary_modifier)


State 21

   11 secondary_modifier: NATIVE •

    $default  reduce using rule 11 (secondary_modifier)


State 22

   12 secondary_modifier: SYNCHRONIZED •

    $default  reduce using rule 12 (secondary_modifier)


State 23

   15 method_declaration: modifier secondary_modifier • IDENT LPAR parameter_list RPAR LCURLY variable_declaration commands RCURLY

    IDENT  shift, and go to state 26


State 24

    3 class: PUBLIC CLASS CLASS_NAME LCURLY variable_declaration method_declaration RCURLY •

    $default  reduce using rule 3 (class)


State 25

    5 variable_declaration: modifier DATATYPE IDENT • SEMICOLON

    SEMICOLON  shift, and go to state 27


State 26

   15 method_declaration: modifier secondary_modifier IDENT • LPAR parameter_list RPAR LCURLY variable_declaration commands RCURLY

    LPAR  shift, and go to state 28


State 27

    5 variable_declaration: modifier DATATYPE IDENT SEMICOLON •

    $default  reduce using rule 5 (variable_declaration)


State 28

   15 method_declaration: modifier secondary_modifier IDENT LPAR • parameter_list RPAR LCURLY variable_declaration commands RCURLY

    DATATYPE  shift, and go to state 29

    parameter_list  go to state 30


State 29

   16 parameter_list: DATATYPE • IDENT

    IDENT  shift, and go to state 31


State 30

   15 method_declaration: modifier secondary_modifier IDENT LPAR parameter_list • RPAR LCURLY variable_declaration commands RCURLY
   17 parameter_list: parameter_list • COMMA DATATYPE IDENT

    RPAR   shift, and go to state 32
    COMMA  shift, and go to state 33


State 31

   16 parameter_list: DATATYPE IDENT •

    $default  reduce using rule 16 (parameter_list)


State 32

   15 method_declaration: modifier secondary_modifier IDENT LPAR parameter_list RPAR • LCURLY variable_declaration commands RCURLY

    LCURLY  shift, and go to state 34


State 33

   17 parameter_list: parameter_list COMMA • DATATYPE IDENT

    DATATYPE  shift, and go to state 35


State 34

   15 method_declaration: modifier secondary_modifier IDENT LPAR parameter_list RPAR LCURLY • variable_declaration commands RCURLY

    DATATYPE  shift, and go to state 8
    PRIVATE   shift, and go to state 9
    PUBLIC    shift, and go to state 10

    variable_declaration  go to state 36
    modifier              go to state 12


State 35

   17 parameter_list: parameter_list COMMA DATATYPE • IDENT

    IDENT  shift, and go to state 37


State 36

   15 method_declaration: modifier secondary_modifier IDENT LPAR parameter_list RPAR LCURLY variable_declaration • commands RCURLY

    RETURN    shift, and go to state 38
    IF        shift, and go to state 39
    DO        shift, and go to state 40
    FOR       shift, and go to state 41
    SWITCH    shift, and go to state 42
    BREAK     shift, and go to state 43
    OUTPRINT  shift, and go to state 44
    IDENT     shift, and go to state 45

    $default  reduce using rule 18 (commands)

    commands          go to state 46
    assignment        go to state 47
    loop              go to state 48
    while             go to state 49
    for               go to state 50
    control           go to state 51
    if                go to state 52
    switch_statement  go to state 53
    print             go to state 54
    return            go to state 55
    break             go to state 56


State 37

   17 parameter_list: parameter_list COMMA DATATYPE IDENT •

    $default  reduce using rule 17 (parameter_list)


State 38

   77 return: RETURN • expression SEMICOLON

    INT         shift, and go to state 57
    CHAR        shift, and go to state 58
    BOOL        shift, and go to state 59
    STRING      shift, and go to state 60
    DOUBLE      shift, and go to state 61
    PRIVATE     shift, and go to state 9
    PUBLIC      shift, and go to state 10
    IDENT       shift, and go to state 62
    CLASS_NAME  shift, and go to state 63
    LPAR        shift, and go to state 64

    $default  reduce using rule 33 (suntheti_parastash)

    modifier               go to state 65
    object_creation        go to state 66
    literal                go to state 67
    expression             go to state 68
    suntheti_parastash     go to state 69
    call_method            go to state 70
    arithmitiki_parastasi  go to state 71


State 39

   66 if: IF • LPAR condition RPAR LCURLY instructions RCURLY elseif else

    LPAR  shift, and go to state 72


State 40

   53 while: DO • LCURLY instructions RCURLY WHILE LPAR condition RPAR SEMICOLON

    LCURLY  shift, and go to state 73


State 41

   60 for: FOR • LPAR exp1 SEMICOLON exp2 SEMICOLON exp3 RPAR LCURLY instructions RCURLY

    LPAR  shift, and go to state 74


State 42

   71 switch_statement: SWITCH • LPAR expression RPAR LCURLY case default_opt RCURLY

    LPAR  shift, and go to state 75


State 43

   78 break: BREAK • SEMICOLON

    SEMICOLON  shift, and go to state 76


State 44

   75 print: OUTPRINT • LPAR STRING RPAR SEMICOLON
   76      | OUTPRINT • LPAR STRING COMMA IDENT RPAR SEMICOLON

    LPAR  shift, and go to state 77


State 45

   25 assignment: IDENT • EQUALS expression SEMICOLON

    EQUALS  shift, and go to state 78


State 46

   15 method_declaration: modifier secondary_modifier IDENT LPAR parameter_list RPAR LCURLY variable_declaration commands • RCURLY

    RCURLY  shift, and go to state 79


State 47

   19 commands: assignment •

    $default  reduce using rule 19 (commands)


State 48

   20 commands: loop •

    $default  reduce using rule 20 (commands)


State 49

   51 loop: while •

    $default  reduce using rule 51 (loop)


State 50

   52 loop: for •

    $default  reduce using rule 52 (loop)


State 51

   21 commands: control •

    $default  reduce using rule 21 (commands)


State 52

   64 control: if •

    $default  reduce using rule 64 (control)


State 53

   65 control: switch_statement •

    $default  reduce using rule 65 (control)


State 54

   22 commands: print •

    $default  reduce using rule 22 (commands)


State 55

   23 commands: return •

    $default  reduce using rule 23 (commands)


State 56

   24 commands: break •

    $default  reduce using rule 24 (commands)


State 57

   26 literal: INT •

    $default  reduce using rule 26 (literal)


State 58

   27 literal: CHAR •

    $default  reduce using rule 27 (literal)


State 59

   29 literal: BOOL •

    $default  reduce using rule 29 (literal)


State 60

   28 literal: STRING •

    $default  reduce using rule 28 (literal)


State 61

   30 literal: DOUBLE •

    $default  reduce using rule 30 (literal)


State 62

   34 suntheti_parastash: IDENT •
   39 call_method: IDENT • DOT IDENT LPAR argument_list RPAR

    DOT  shift, and go to state 80

    $default  reduce using rule 34 (suntheti_parastash)


State 63

   14 object_creation: CLASS_NAME • IDENT EQUALS NEW CLASS_NAME LPAR RPAR SEMICOLON

    IDENT  shift, and go to state 81


State 64

   35 suntheti_parastash: LPAR • suntheti_parastash RPAR

    INT         shift, and go to state 57
    CHAR        shift, and go to state 58
    BOOL        shift, and go to state 59
    STRING      shift, and go to state 60
    DOUBLE      shift, and go to state 61
    PRIVATE     shift, and go to state 9
    PUBLIC      shift, and go to state 10
    IDENT       shift, and go to state 62
    CLASS_NAME  shift, and go to state 63
    LPAR        shift, and go to state 64

    $default  reduce using rule 33 (suntheti_parastash)

    modifier               go to state 65
    object_creation        go to state 66
    literal                go to state 67
    expression             go to state 82
    suntheti_parastash     go to state 83
    call_method            go to state 70
    arithmitiki_parastasi  go to state 71


State 65

   13 object_creation: modifier • CLASS_NAME IDENT EQUALS NEW CLASS_NAME LPAR RPAR SEMICOLON

    CLASS_NAME  shift, and go to state 84


State 66

   37 suntheti_parastash: object_creation •

    $default  reduce using rule 37 (suntheti_parastash)


State 67

   31 expression: literal •

    $default  reduce using rule 31 (expression)


State 68

   43 arithmitiki_parastasi: expression • '+' expression
   44                      | expression • '-' expression
   45                      | expression • '*' expression
   46                      | expression • '/' expression
   77 return: RETURN expression • SEMICOLON

    SEMICOLON  shift, and go to state 85
    '+'        shift, and go to state 86
    '-'        shift, and go to state 87
    '*'        shift, and go to state 88
    '/'        shift, and go to state 89


State 69

   32 expression: suntheti_parastash •

    $default  reduce using rule 32 (expression)


State 70

   36 suntheti_parastash: call_method •

    $default  reduce using rule 36 (suntheti_parastash)


State 71

   38 suntheti_parastash: arithmitiki_parastasi •

    $default  reduce using rule 38 (suntheti_parastash)


State 72

   66 if: IF LPAR • condition RPAR LCURLY instructions RCURLY elseif else

    INT         shift, and go to state 57
    CHAR        shift, and go to state 58
    BOOL        shift, and go to state 59
    STRING      shift, and go to state 60
    DOUBLE      shift, and go to state 61
    PRIVATE     shift, and go to state 9
    PUBLIC      shift, and go to state 10
    IDENT       shift, and go to state 62
    CLASS_NAME  shift, and go to state 63
    LPAR        shift, and go to state 64

    $default  reduce using rule 33 (suntheti_parastash)

    modifier               go to state 65
    object_creation        go to state 66
    literal                go to state 67
    expression             go to state 90
    suntheti_parastash     go to state 69
    call_method            go to state 70
    arithmitiki_parastasi  go to state 71
    condition              go to state 91


State 73

   53 while: DO LCURLY • instructions RCURLY WHILE LPAR condition RPAR SEMICOLON

    DATATYPE    shift, and go to state 8
    RETURN      shift, and go to state 38
    IF          shift, and go to state 39
    DO          shift, and go to state 40
    FOR         shift, and go to state 41
    SWITCH      shift, and go to state 42
    BREAK       shift, and go to state 43
    PRIVATE     shift, and go to state 9
    PUBLIC      shift, and go to state 10
    OUTPRINT    shift, and go to state 44
    IDENT       shift, and go to state 45
    CLASS_NAME  shift, and go to state 63

    $default  reduce using rule 18 (commands)

    variable_declaration  go to state 92
    modifier              go to state 93
    object_creation       go to state 94
    method_declaration    go to state 95
    commands              go to state 96
    assignment            go to state 47
    instructions          go to state 97
    loop                  go to state 48
    while                 go to state 49
    for                   go to state 50
    control               go to state 51
    if                    go to state 52
    switch_statement      go to state 53
    print                 go to state 54
    return                go to state 55
    break                 go to state 56


State 74

   60 for: FOR LPAR • exp1 SEMICOLON exp2 SEMICOLON exp3 RPAR LCURLY instructions RCURLY

    DATATYPE  shift, and go to state 98

    exp1  go to state 99


State 75

   71 switch_statement: SWITCH LPAR • expression RPAR LCURLY case default_opt RCURLY

    INT         shift, and go to state 57
    CHAR        shift, and go to state 58
    BOOL        shift, and go to state 59
    STRING      shift, and go to state 60
    DOUBLE      shift, and go to state 61
    PRIVATE     shift, and go to state 9
    PUBLIC      shift, and go to state 10
    IDENT       shift, and go to state 62
    CLASS_NAME  shift, and go to state 63
    LPAR        shift, and go to state 64

    $default  reduce using rule 33 (suntheti_parastash)

    modifier               go to state 65
    object_creation        go to state 66
    literal                go to state 67
    expression             go to state 100
    suntheti_parastash     go to state 69
    call_method            go to state 70
    arithmitiki_parastasi  go to state 71


State 76

   78 break: BREAK SEMICOLON •

    $default  reduce using rule 78 (break)


State 77

   75 print: OUTPRINT LPAR • STRING RPAR SEMICOLON
   76      | OUTPRINT LPAR • STRING COMMA IDENT RPAR SEMICOLON

    STRING  shift, and go to state 101


State 78

   25 assignment: IDENT EQUALS • expression SEMICOLON

    INT         shift, and go to state 57
    CHAR        shift, and go to state 58
    BOOL        shift, and go to state 59
    STRING      shift, and go to state 60
    DOUBLE      shift, and go to state 61
    PRIVATE     shift, and go to state 9
    PUBLIC      shift, and go to state 10
    IDENT       shift, and go to state 62
    CLASS_NAME  shift, and go to state 63
    LPAR        shift, and go to state 64

    $default  reduce using rule 33 (suntheti_parastash)

    modifier               go to state 65
    object_creation        go to state 66
    literal                go to state 67
    expression             go to state 102
    suntheti_parastash     go to state 69
    call_method            go to state 70
    arithmitiki_parastasi  go to state 71


State 79

   15 method_declaration: modifier secondary_modifier IDENT LPAR parameter_list RPAR LCURLY variable_declaration commands RCURLY •

    $default  reduce using rule 15 (method_declaration)


State 80

   39 call_method: IDENT DOT • IDENT LPAR argument_list RPAR

    IDENT  shift, and go to state 103


State 81

   14 object_creation: CLASS_NAME IDENT • EQUALS NEW CLASS_NAME LPAR RPAR SEMICOLON

    EQUALS  shift, and go to state 104


State 82

   43 arithmitiki_parastasi: expression • '+' expression
   44                      | expression • '-' expression
   45                      | expression • '*' expression
   46                      | expression • '/' expression

    '+'  shift, and go to state 86
    '-'  shift, and go to state 87
    '*'  shift, and go to state 88
    '/'  shift, and go to state 89


State 83

   32 expression: suntheti_parastash •
   35 suntheti_parastash: LPAR suntheti_parastash • RPAR

    RPAR  shift, and go to state 105

    $default  reduce using rule 32 (expression)


State 84

   13 object_creation: modifier CLASS_NAME • IDENT EQUALS NEW CLASS_NAME LPAR RPAR SEMICOLON

    IDENT  shift, and go to state 106


State 85

   77 return: RETURN expression SEMICOLON •

    $default  reduce using rule 77 (return)


State 86

   43 arithmitiki_parastasi: expression '+' • expression

    INT         shift, and go to state 57
    CHAR        shift, and go to state 58
    BOOL        shift, and go to state 59
    STRING      shift, and go to state 60
    DOUBLE      shift, and go to state 61
    PRIVATE     shift, and go to state 9
    PUBLIC      shift, and go to state 10
    IDENT       shift, and go to state 62
    CLASS_NAME  shift, and go to state 63
    LPAR        shift, and go to state 64

    $default  reduce using rule 33 (suntheti_parastash)

    modifier               go to state 65
    object_creation        go to state 66
    literal                go to state 67
    expression             go to state 107
    suntheti_parastash     go to state 69
    call_method            go to state 70
    arithmitiki_parastasi  go to state 71


State 87

   44 arithmitiki_parastasi: expression '-' • expression

    INT         shift, and go to state 57
    CHAR        shift, and go to state 58
    BOOL        shift, and go to state 59
    STRING      shift, and go to state 60
    DOUBLE      shift, and go to state 61
    PRIVATE     shift, and go to state 9
    PUBLIC      shift, and go to state 10
    IDENT       shift, and go to state 62
    CLASS_NAME  shift, and go to state 63
    LPAR        shift, and go to state 64

    $default  reduce using rule 33 (suntheti_parastash)

    modifier               go to state 65
    object_creation        go to state 66
    literal                go to state 67
    expression             go to state 108
    suntheti_parastash     go to state 69
    call_method            go to state 70
    arithmitiki_parastasi  go to state 71


State 88

   45 arithmitiki_parastasi: expression '*' • expression

    INT         shift, and go to state 57
    CHAR        shift, and go to state 58
    BOOL        shift, and go to state 59
    STRING      shift, and go to state 60
    DOUBLE      shift, and go to state 61
    PRIVATE     shift, and go to state 9
    PUBLIC      shift, and go to state 10
    IDENT       shift, and go to state 62
    CLASS_NAME  shift, and go to state 63
    LPAR        shift, and go to state 64

    $default  reduce using rule 33 (suntheti_parastash)

    modifier               go to state 65
    object_creation        go to state 66
    literal                go to state 67
    expression             go to state 109
    suntheti_parastash     go to state 69
    call_method            go to state 70
    arithmitiki_parastasi  go to state 71


State 89

   46 arithmitiki_parastasi: expression '/' • expression

    INT         shift, and go to state 57
    CHAR        shift, and go to state 58
    BOOL        shift, and go to state 59
    STRING      shift, and go to state 60
    DOUBLE      shift, and go to state 61
    PRIVATE     shift, and go to state 9
    PUBLIC      shift, and go to state 10
    IDENT       shift, and go to state 62
    CLASS_NAME  shift, and go to state 63
    LPAR        shift, and go to state 64

    $default  reduce using rule 33 (suntheti_parastash)

    modifier               go to state 65
    object_creation        go to state 66
    literal                go to state 67
    expression             go to state 110
    suntheti_parastash     go to state 69
    call_method            go to state 70
    arithmitiki_parastasi  go to state 71


State 90

   43 arithmitiki_parastasi: expression • '+' expression
   44                      | expression • '-' expression
   45                      | expression • '*' expression
   46                      | expression • '/' expression
   54 condition: expression • con2 expression

    OROP   shift, and go to state 111
    ANDOP  shift, and go to state 112
    EQUOP  shift, and go to state 113
    NOTOP  shift, and go to state 114
    RELOP  shift, and go to state 115
    '+'    shift, and go to state 86
    '-'    shift, and go to state 87
    '*'    shift, and go to state 88
    '/'    shift, and go to state 89

    con2  go to state 116


State 91

   66 if: IF LPAR condition • RPAR LCURLY instructions RCURLY elseif else

    RPAR  shift, and go to state 117


State 92

   48 instructions: variable_declaration •

    $default  reduce using rule 48 (instructions)


State 93

    5 variable_declaration: modifier • DATATYPE IDENT SEMICOLON
   13 object_creation: modifier • CLASS_NAME IDENT EQUALS NEW CLASS_NAME LPAR RPAR SEMICOLON
   15 method_declaration: modifier • secondary_modifier IDENT LPAR parameter_list RPAR LCURLY variable_declaration commands RCURLY

    DATATYPE      shift, and go to state 16
    STATIC        shift, and go to state 18
    ABSTRACT      shift, and go to state 19
    FINAL         shift, and go to state 20
    NATIVE        shift, and go to state 21
    SYNCHRONIZED  shift, and go to state 22
    CLASS_NAME    shift, and go to state 84

    secondary_modifier  go to state 23


State 94

   49 instructions: object_creation •

    $default  reduce using rule 49 (instructions)


State 95

   50 instructions: method_declaration •

    $default  reduce using rule 50 (instructions)


State 96

   47 instructions: commands •

    $default  reduce using rule 47 (instructions)


State 97

   53 while: DO LCURLY instructions • RCURLY WHILE LPAR condition RPAR SEMICOLON

    RCURLY  shift, and go to state 118


State 98

   61 exp1: DATATYPE • IDENT EQUALS DATATYPE

    IDENT  shift, and go to state 119


State 99

   60 for: FOR LPAR exp1 • SEMICOLON exp2 SEMICOLON exp3 RPAR LCURLY instructions RCURLY

    SEMICOLON  shift, and go to state 120


State 100

   43 arithmitiki_parastasi: expression • '+' expression
   44                      | expression • '-' expression
   45                      | expression • '*' expression
   46                      | expression • '/' expression
   71 switch_statement: SWITCH LPAR expression • RPAR LCURLY case default_opt RCURLY

    RPAR  shift, and go to state 121
    '+'   shift, and go to state 86
    '-'   shift, and go to state 87
    '*'   shift, and go to state 88
    '/'   shift, and go to state 89


State 101

   75 print: OUTPRINT LPAR STRING • RPAR SEMICOLON
   76      | OUTPRINT LPAR STRING • COMMA IDENT RPAR SEMICOLON

    RPAR   shift, and go to state 122
    COMMA  shift, and go to state 123


State 102

   25 assignment: IDENT EQUALS expression • SEMICOLON
   43 arithmitiki_parastasi: expression • '+' expression
   44                      | expression • '-' expression
   45                      | expression • '*' expression
   46                      | expression • '/' expression

    SEMICOLON  shift, and go to state 124
    '+'        shift, and go to state 86
    '-'        shift, and go to state 87
    '*'        shift, and go to state 88
    '/'        shift, and go to state 89


State 103

   39 call_method: IDENT DOT IDENT • LPAR argument_list RPAR

    LPAR  shift, and go to state 125


State 104

   14 object_creation: CLASS_NAME IDENT EQUALS • NEW CLASS_NAME LPAR RPAR SEMICOLON

    NEW  shift, and go to state 126


State 105

   35 suntheti_parastash: LPAR suntheti_parastash RPAR •

    $default  reduce using rule 35 (suntheti_parastash)


State 106

   13 object_creation: modifier CLASS_NAME IDENT • EQUALS NEW CLASS_NAME LPAR RPAR SEMICOLON

    EQUALS  shift, and go to state 127


State 107

   43 arithmitiki_parastasi: expression • '+' expression
   43                      | expression '+' expression •
   44                      | expression • '-' expression
   45                      | expression • '*' expression
   46                      | expression • '/' expression

    '*'  shift, and go to state 88
    '/'  shift, and go to state 89

    $default  reduce using rule 43 (arithmitiki_parastasi)


State 108

   43 arithmitiki_parastasi: expression • '+' expression
   44                      | expression • '-' expression
   44                      | expression '-' expression •
   45                      | expression • '*' expression
   46                      | expression • '/' expression

    '*'  shift, and go to state 88
    '/'  shift, and go to state 89

    $default  reduce using rule 44 (arithmitiki_parastasi)


State 109

   43 arithmitiki_parastasi: expression • '+' expression
   44                      | expression • '-' expression
   45                      | expression • '*' expression
   45                      | expression '*' expression •
   46                      | expression • '/' expression

    $default  reduce using rule 45 (arithmitiki_parastasi)


State 110

   43 arithmitiki_parastasi: expression • '+' expression
   44                      | expression • '-' expression
   45                      | expression • '*' expression
   46                      | expression • '/' expression
   46                      | expression '/' expression •

    $default  reduce using rule 46 (arithmitiki_parastasi)


State 111

   59 con2: OROP •

    $default  reduce using rule 59 (con2)


State 112

   58 con2: ANDOP •

    $default  reduce using rule 58 (con2)


State 113

   56 con2: EQUOP •

    $default  reduce using rule 56 (con2)


State 114

   57 con2: NOTOP •

    $default  reduce using rule 57 (con2)


State 115

   55 con2: RELOP •

    $default  reduce using rule 55 (con2)


State 116

   54 condition: expression con2 • expression

    INT         shift, and go to state 57
    CHAR        shift, and go to state 58
    BOOL        shift, and go to state 59
    STRING      shift, and go to state 60
    DOUBLE      shift, and go to state 61
    PRIVATE     shift, and go to state 9
    PUBLIC      shift, and go to state 10
    IDENT       shift, and go to state 62
    CLASS_NAME  shift, and go to state 63
    LPAR        shift, and go to state 64

    $default  reduce using rule 33 (suntheti_parastash)

    modifier               go to state 65
    object_creation        go to state 66
    literal                go to state 67
    expression             go to state 128
    suntheti_parastash     go to state 69
    call_method            go to state 70
    arithmitiki_parastasi  go to state 71


State 117

   66 if: IF LPAR condition RPAR • LCURLY instructions RCURLY elseif else

    LCURLY  shift, and go to state 129


State 118

   53 while: DO LCURLY instructions RCURLY • WHILE LPAR condition RPAR SEMICOLON

    WHILE  shift, and go to state 130


State 119

   61 exp1: DATATYPE IDENT • EQUALS DATATYPE

    EQUALS  shift, and go to state 131


State 120

   60 for: FOR LPAR exp1 SEMICOLON • exp2 SEMICOLON exp3 RPAR LCURLY instructions RCURLY

    IDENT  shift, and go to state 132

    exp2  go to state 133


State 121

   71 switch_statement: SWITCH LPAR expression RPAR • LCURLY case default_opt RCURLY

    LCURLY  shift, and go to state 134


State 122

   75 print: OUTPRINT LPAR STRING RPAR • SEMICOLON

    SEMICOLON  shift, and go to state 135


State 123

   76 print: OUTPRINT LPAR STRING COMMA • IDENT RPAR SEMICOLON

    IDENT  shift, and go to state 136


State 124

   25 assignment: IDENT EQUALS expression SEMICOLON •

    $default  reduce using rule 25 (assignment)


State 125

   39 call_method: IDENT DOT IDENT LPAR • argument_list RPAR

    IDENT  shift, and go to state 137

    $default  reduce using rule 40 (argument_list)

    argument_list  go to state 138


State 126

   14 object_creation: CLASS_NAME IDENT EQUALS NEW • CLASS_NAME LPAR RPAR SEMICOLON

    CLASS_NAME  shift, and go to state 139


State 127

   13 object_creation: modifier CLASS_NAME IDENT EQUALS • NEW CLASS_NAME LPAR RPAR SEMICOLON

    NEW  shift, and go to state 140


State 128

   43 arithmitiki_parastasi: expression • '+' expression
   44                      | expression • '-' expression
   45                      | expression • '*' expression
   46                      | expression • '/' expression
   54 condition: expression con2 expression •

    '+'  shift, and go to state 86
    '-'  shift, and go to state 87
    '*'  shift, and go to state 88
    '/'  shift, and go to state 89

    $default  reduce using rule 54 (condition)


State 129

   66 if: IF LPAR condition RPAR LCURLY • instructions RCURLY elseif else

    DATATYPE    shift, and go to state 8
    RETURN      shift, and go to state 38
    IF          shift, and go to state 39
    DO          shift, and go to state 40
    FOR         shift, and go to state 41
    SWITCH      shift, and go to state 42
    BREAK       shift, and go to state 43
    PRIVATE     shift, and go to state 9
    PUBLIC      shift, and go to state 10
    OUTPRINT    shift, and go to state 44
    IDENT       shift, and go to state 45
    CLASS_NAME  shift, and go to state 63

    $default  reduce using rule 18 (commands)

    variable_declaration  go to state 92
    modifier              go to state 93
    object_creation       go to state 94
    method_declaration    go to state 95
    commands              go to state 96
    assignment            go to state 47
    instructions          go to state 141
    loop                  go to state 48
    while                 go to state 49
    for                   go to state 50
    control               go to state 51
    if                    go to state 52
    switch_statement      go to state 53
    print                 go to state 54
    return                go to state 55
    break                 go to state 56


State 130

   53 while: DO LCURLY instructions RCURLY WHILE • LPAR condition RPAR SEMICOLON

    LPAR  shift, and go to state 142


State 131

   61 exp1: DATATYPE IDENT EQUALS • DATATYPE

    DATATYPE  shift, and go to state 143


State 132

   62 exp2: IDENT • con2 DATATYPE

    OROP   shift, and go to state 111
    ANDOP  shift, and go to state 112
    EQUOP  shift, and go to state 113
    NOTOP  shift, and go to state 114
    RELOP  shift, and go to state 115

    con2  go to state 144


State 133

   60 for: FOR LPAR exp1 SEMICOLON exp2 • SEMICOLON exp3 RPAR LCURLY instructions RCURLY

    SEMICOLON  shift, and go to state 145


State 134

   71 switch_statement: SWITCH LPAR expression RPAR LCURLY • case default_opt RCURLY

    INT         shift, and go to state 57
    CHAR        shift, and go to state 58
    BOOL        shift, and go to state 59
    STRING      shift, and go to state 60
    DOUBLE      shift, and go to state 61
    PRIVATE     shift, and go to state 9
    PUBLIC      shift, and go to state 10
    IDENT       shift, and go to state 62
    CLASS_NAME  shift, and go to state 63
    LPAR        shift, and go to state 64

    $default  reduce using rule 33 (suntheti_parastash)

    modifier               go to state 65
    object_creation        go to state 66
    literal                go to state 67
    expression             go to state 146
    suntheti_parastash     go to state 69
    call_method            go to state 70
    arithmitiki_parastasi  go to state 71
    case                   go to state 147


State 135

   75 print: OUTPRINT LPAR STRING RPAR SEMICOLON •

    $default  reduce using rule 75 (print)


State 136

   76 print: OUTPRINT LPAR STRING COMMA IDENT • RPAR SEMICOLON

    RPAR  shift, and go to state 148


State 137

   41 argument_list: IDENT •

    $default  reduce using rule 41 (argument_list)


State 138

   39 call_method: IDENT DOT IDENT LPAR argument_list • RPAR
   42 argument_list: argument_list • COMMA IDENT

    RPAR   shift, and go to state 149
    COMMA  shift, and go to state 150


State 139

   14 object_creation: CLASS_NAME IDENT EQUALS NEW CLASS_NAME • LPAR RPAR SEMICOLON

    LPAR  shift, and go to state 151


State 140

   13 object_creation: modifier CLASS_NAME IDENT EQUALS NEW • CLASS_NAME LPAR RPAR SEMICOLON

    CLASS_NAME  shift, and go to state 152


State 141

   66 if: IF LPAR condition RPAR LCURLY instructions • RCURLY elseif else

    RCURLY  shift, and go to state 153


State 142

   53 while: DO LCURLY instructions RCURLY WHILE LPAR • condition RPAR SEMICOLON

    INT         shift, and go to state 57
    CHAR        shift, and go to state 58
    BOOL        shift, and go to state 59
    STRING      shift, and go to state 60
    DOUBLE      shift, and go to state 61
    PRIVATE     shift, and go to state 9
    PUBLIC      shift, and go to state 10
    IDENT       shift, and go to state 62
    CLASS_NAME  shift, and go to state 63
    LPAR        shift, and go to state 64

    $default  reduce using rule 33 (suntheti_parastash)

    modifier               go to state 65
    object_creation        go to state 66
    literal                go to state 67
    expression             go to state 90
    suntheti_parastash     go to state 69
    call_method            go to state 70
    arithmitiki_parastasi  go to state 71
    condition              go to state 154


State 143

   61 exp1: DATATYPE IDENT EQUALS DATATYPE •

    $default  reduce using rule 61 (exp1)


State 144

   62 exp2: IDENT con2 • DATATYPE

    DATATYPE  shift, and go to state 155


State 145

   60 for: FOR LPAR exp1 SEMICOLON exp2 SEMICOLON • exp3 RPAR LCURLY instructions RCURLY

    IDENT  shift, and go to state 156

    exp3  go to state 157


State 146

   43 arithmitiki_parastasi: expression • '+' expression
   44                      | expression • '-' expression
   45                      | expression • '*' expression
   46                      | expression • '/' expression
   72 case: expression • COLON instructions

    COLON  shift, and go to state 158
    '+'    shift, and go to state 86
    '-'    shift, and go to state 87
    '*'    shift, and go to state 88
    '/'    shift, and go to state 89


State 147

   71 switch_statement: SWITCH LPAR expression RPAR LCURLY case • default_opt RCURLY

    DEFAULT  shift, and go to state 159

    $default  reduce using rule 73 (default_opt)

    default_opt  go to state 160


State 148

   76 print: OUTPRINT LPAR STRING COMMA IDENT RPAR • SEMICOLON

    SEMICOLON  shift, and go to state 161


State 149

   39 call_method: IDENT DOT IDENT LPAR argument_list RPAR •

    $default  reduce using rule 39 (call_method)


State 150

   42 argument_list: argument_list COMMA • IDENT

    IDENT  shift, and go to state 162


State 151

   14 object_creation: CLASS_NAME IDENT EQUALS NEW CLASS_NAME LPAR • RPAR SEMICOLON

    RPAR  shift, and go to state 163


State 152

   13 object_creation: modifier CLASS_NAME IDENT EQUALS NEW CLASS_NAME • LPAR RPAR SEMICOLON

    LPAR  shift, and go to state 164


State 153

   66 if: IF LPAR condition RPAR LCURLY instructions RCURLY • elseif else

    $default  reduce using rule 67 (elseif)

    elseif  go to state 165


State 154

   53 while: DO LCURLY instructions RCURLY WHILE LPAR condition • RPAR SEMICOLON

    RPAR  shift, and go to state 166


State 155

   62 exp2: IDENT con2 DATATYPE •

    $default  reduce using rule 62 (exp2)


State 156

   63 exp3: IDENT • EQUALS expression

    EQUALS  shift, and go to state 167


State 157

   60 for: FOR LPAR exp1 SEMICOLON exp2 SEMICOLON exp3 • RPAR LCURLY instructions RCURLY

    RPAR  shift, and go to state 168


State 158

   72 case: expression COLON • instructions

    DATATYPE    shift, and go to state 8
    RETURN      shift, and go to state 38
    IF          shift, and go to state 39
    DO          shift, and go to state 40
    FOR         shift, and go to state 41
    SWITCH      shift, and go to state 42
    BREAK       shift, and go to state 43
    PRIVATE     shift, and go to state 9
    PUBLIC      shift, and go to state 10
    OUTPRINT    shift, and go to state 44
    IDENT       shift, and go to state 45
    CLASS_NAME  shift, and go to state 63

    $default  reduce using rule 18 (commands)

    variable_declaration  go to state 92
    modifier              go to state 93
    object_creation       go to state 94
    method_declaration    go to state 95
    commands              go to state 96
    assignment            go to state 47
    instructions          go to state 169
    loop                  go to state 48
    while                 go to state 49
    for                   go to state 50
    control               go to state 51
    if                    go to state 52
    switch_statement      go to state 53
    print                 go to state 54
    return                go to state 55
    break                 go to state 56


State 159

   74 default_opt: DEFAULT • COLON instructions

    COLON  shift, and go to state 170


State 160

   71 switch_statement: SWITCH LPAR expression RPAR LCURLY case default_opt • RCURLY

    RCURLY  shift, and go to state 171


State 161

   76 print: OUTPRINT LPAR STRING COMMA IDENT RPAR SEMICOLON •

    $default  reduce using rule 76 (print)


State 162

   42 argument_list: argument_list COMMA IDENT •

    $default  reduce using rule 42 (argument_list)


State 163

   14 object_creation: CLASS_NAME IDENT EQUALS NEW CLASS_NAME LPAR RPAR • SEMICOLON

    SEMICOLON  shift, and go to state 172


State 164

   13 object_creation: modifier CLASS_NAME IDENT EQUALS NEW CLASS_NAME LPAR • RPAR SEMICOLON

    RPAR  shift, and go to state 173


State 165

   66 if: IF LPAR condition RPAR LCURLY instructions RCURLY elseif • else
   68 elseif: elseif • ELSE IF LPAR condition RPAR LCURLY instructions RCURLY

    ELSE  shift, and go to state 174

    $default  reduce using rule 69 (else)

    else  go to state 175


State 166

   53 while: DO LCURLY instructions RCURLY WHILE LPAR condition RPAR • SEMICOLON

    SEMICOLON  shift, and go to state 176


State 167

   63 exp3: IDENT EQUALS • expression

    INT         shift, and go to state 57
    CHAR        shift, and go to state 58
    BOOL        shift, and go to state 59
    STRING      shift, and go to state 60
    DOUBLE      shift, and go to state 61
    PRIVATE     shift, and go to state 9
    PUBLIC      shift, and go to state 10
    IDENT       shift, and go to state 62
    CLASS_NAME  shift, and go to state 63
    LPAR        shift, and go to state 64

    $default  reduce using rule 33 (suntheti_parastash)

    modifier               go to state 65
    object_creation        go to state 66
    literal                go to state 67
    expression             go to state 177
    suntheti_parastash     go to state 69
    call_method            go to state 70
    arithmitiki_parastasi  go to state 71


State 168

   60 for: FOR LPAR exp1 SEMICOLON exp2 SEMICOLON exp3 RPAR • LCURLY instructions RCURLY

    LCURLY  shift, and go to state 178


State 169

   72 case: expression COLON instructions •

    $default  reduce using rule 72 (case)


State 170

   74 default_opt: DEFAULT COLON • instructions

    DATATYPE    shift, and go to state 8
    RETURN      shift, and go to state 38
    IF          shift, and go to state 39
    DO          shift, and go to state 40
    FOR         shift, and go to state 41
    SWITCH      shift, and go to state 42
    BREAK       shift, and go to state 43
    PRIVATE     shift, and go to state 9
    PUBLIC      shift, and go to state 10
    OUTPRINT    shift, and go to state 44
    IDENT       shift, and go to state 45
    CLASS_NAME  shift, and go to state 63

    $default  reduce using rule 18 (commands)

    variable_declaration  go to state 92
    modifier              go to state 93
    object_creation       go to state 94
    method_declaration    go to state 95
    commands              go to state 96
    assignment            go to state 47
    instructions          go to state 179
    loop                  go to state 48
    while                 go to state 49
    for                   go to state 50
    control               go to state 51
    if                    go to state 52
    switch_statement      go to state 53
    print                 go to state 54
    return                go to state 55
    break                 go to state 56


State 171

   71 switch_statement: SWITCH LPAR expression RPAR LCURLY case default_opt RCURLY •

    $default  reduce using rule 71 (switch_statement)


State 172

   14 object_creation: CLASS_NAME IDENT EQUALS NEW CLASS_NAME LPAR RPAR SEMICOLON •

    $default  reduce using rule 14 (object_creation)


State 173

   13 object_creation: modifier CLASS_NAME IDENT EQUALS NEW CLASS_NAME LPAR RPAR • SEMICOLON

    SEMICOLON  shift, and go to state 180


State 174

   68 elseif: elseif ELSE • IF LPAR condition RPAR LCURLY instructions RCURLY
   70 else: ELSE • LCURLY instructions RCURLY

    IF      shift, and go to state 181
    LCURLY  shift, and go to state 182


State 175

   66 if: IF LPAR condition RPAR LCURLY instructions RCURLY elseif else •

    $default  reduce using rule 66 (if)


State 176

   53 while: DO LCURLY instructions RCURLY WHILE LPAR condition RPAR SEMICOLON •

    $default  reduce using rule 53 (while)


State 177

   43 arithmitiki_parastasi: expression • '+' expression
   44                      | expression • '-' expression
   45                      | expression • '*' expression
   46                      | expression • '/' expression
   63 exp3: IDENT EQUALS expression •

    '+'  shift, and go to state 86
    '-'  shift, and go to state 87
    '*'  shift, and go to state 88
    '/'  shift, and go to state 89

    $default  reduce using rule 63 (exp3)


State 178

   60 for: FOR LPAR exp1 SEMICOLON exp2 SEMICOLON exp3 RPAR LCURLY • instructions RCURLY

    DATATYPE    shift, and go to state 8
    RETURN      shift, and go to state 38
    IF          shift, and go to state 39
    DO          shift, and go to state 40
    FOR         shift, and go to state 41
    SWITCH      shift, and go to state 42
    BREAK       shift, and go to state 43
    PRIVATE     shift, and go to state 9
    PUBLIC      shift, and go to state 10
    OUTPRINT    shift, and go to state 44
    IDENT       shift, and go to state 45
    CLASS_NAME  shift, and go to state 63

    $default  reduce using rule 18 (commands)

    variable_declaration  go to state 92
    modifier              go to state 93
    object_creation       go to state 94
    method_declaration    go to state 95
    commands              go to state 96
    assignment            go to state 47
    instructions          go to state 183
    loop                  go to state 48
    while                 go to state 49
    for                   go to state 50
    control               go to state 51
    if                    go to state 52
    switch_statement      go to state 53
    print                 go to state 54
    return                go to state 55
    break                 go to state 56


State 179

   74 default_opt: DEFAULT COLON instructions •

    $default  reduce using rule 74 (default_opt)


State 180

   13 object_creation: modifier CLASS_NAME IDENT EQUALS NEW CLASS_NAME LPAR RPAR SEMICOLON •

    $default  reduce using rule 13 (object_creation)


State 181

   68 elseif: elseif ELSE IF • LPAR condition RPAR LCURLY instructions RCURLY

    LPAR  shift, and go to state 184


State 182

   70 else: ELSE LCURLY • instructions RCURLY

    DATATYPE    shift, and go to state 8
    RETURN      shift, and go to state 38
    IF          shift, and go to state 39
    DO          shift, and go to state 40
    FOR         shift, and go to state 41
    SWITCH      shift, and go to state 42
    BREAK       shift, and go to state 43
    PRIVATE     shift, and go to state 9
    PUBLIC      shift, and go to state 10
    OUTPRINT    shift, and go to state 44
    IDENT       shift, and go to state 45
    CLASS_NAME  shift, and go to state 63

    $default  reduce using rule 18 (commands)

    variable_declaration  go to state 92
    modifier              go to state 93
    object_creation       go to state 94
    method_declaration    go to state 95
    commands              go to state 96
    assignment            go to state 47
    instructions          go to state 185
    loop                  go to state 48
    while                 go to state 49
    for                   go to state 50
    control               go to state 51
    if                    go to state 52
    switch_statement      go to state 53
    print                 go to state 54
    return                go to state 55
    break                 go to state 56


State 183

   60 for: FOR LPAR exp1 SEMICOLON exp2 SEMICOLON exp3 RPAR LCURLY instructions • RCURLY

    RCURLY  shift, and go to state 186


State 184

   68 elseif: elseif ELSE IF LPAR • condition RPAR LCURLY instructions RCURLY

    INT         shift, and go to state 57
    CHAR        shift, and go to state 58
    BOOL        shift, and go to state 59
    STRING      shift, and go to state 60
    DOUBLE      shift, and go to state 61
    PRIVATE     shift, and go to state 9
    PUBLIC      shift, and go to state 10
    IDENT       shift, and go to state 62
    CLASS_NAME  shift, and go to state 63
    LPAR        shift, and go to state 64

    $default  reduce using rule 33 (suntheti_parastash)

    modifier               go to state 65
    object_creation        go to state 66
    literal                go to state 67
    expression             go to state 90
    suntheti_parastash     go to state 69
    call_method            go to state 70
    arithmitiki_parastasi  go to state 71
    condition              go to state 187


State 185

   70 else: ELSE LCURLY instructions • RCURLY

    RCURLY  shift, and go to state 188


State 186

   60 for: FOR LPAR exp1 SEMICOLON exp2 SEMICOLON exp3 RPAR LCURLY instructions RCURLY •

    $default  reduce using rule 60 (for)


State 187

   68 elseif: elseif ELSE IF LPAR condition • RPAR LCURLY instructions RCURLY

    RPAR  shift, and go to state 189


State 188

   70 else: ELSE LCURLY instructions RCURLY •

    $default  reduce using rule 70 (else)


State 189

   68 elseif: elseif ELSE IF LPAR condition RPAR • LCURLY instructions RCURLY

    LCURLY  shift, and go to state 190


State 190

   68 elseif: elseif ELSE IF LPAR condition RPAR LCURLY • instructions RCURLY

    DATATYPE    shift, and go to state 8
    RETURN      shift, and go to state 38
    IF          shift, and go to state 39
    DO          shift, and go to state 40
    FOR         shift, and go to state 41
    SWITCH      shift, and go to state 42
    BREAK       shift, and go to state 43
    PRIVATE     shift, and go to state 9
    PUBLIC      shift, and go to state 10
    OUTPRINT    shift, and go to state 44
    IDENT       shift, and go to state 45
    CLASS_NAME  shift, and go to state 63

    $default  reduce using rule 18 (commands)

    variable_declaration  go to state 92
    modifier              go to state 93
    object_creation       go to state 94
    method_declaration    go to state 95
    commands              go to state 96
    assignment            go to state 47
    instructions          go to state 191
    loop                  go to state 48
    while                 go to state 49
    for                   go to state 50
    control               go to state 51
    if                    go to state 52
    switch_statement      go to state 53
    print                 go to state 54
    return                go to state 55
    break                 go to state 56


State 191

   68 elseif: elseif ELSE IF LPAR condition RPAR LCURLY instructions • RCURLY

    RCURLY  shift, and go to state 192


State 192

   68 elseif: elseif ELSE IF LPAR condition RPAR LCURLY instructions RCURLY •

    $default  reduce using rule 68 (elseif)

Grammar

    0 $accept: program $end

    1 program: class_list

    2 class_list: class_list class
    3           | class

    4 class: PUBLIC CLASS CLASS_NAME LCURLY class_body RCURLY

    5 class_body: ε
    6           | variable_declaration_list methods
    7           | variable_declaration_list
    8           | methods
    9           | variable_declaration_list methods class
   10           | variable_declaration_list class
   11           | methods class

   12 variable_declaration_list: variable_declaration
   13                          | variable_declaration_list variable_declaration

   14 variable_declaration: modifier return_type IDENT SEMICOLON
   15                     | return_type IDENT SEMICOLON

   16 return_type: DATATYPE
   17            | CLASS_NAME
   18            | VOID

   19 methods: method_declaration
   20        | methods method_declaration

   21 method_declaration: modifier secondary_modifier return_type IDENT LPAR parameter_list RPAR LCURLY method_body RCURLY
   22                   | modifier return_type IDENT LPAR parameter_list RPAR LCURLY method_body RCURLY
   23                   | modifier IDENT LPAR parameter_list RPAR LCURLY method_body RCURLY

   24 modifier: PUBLIC
   25         | PRIVATE

   26 method_access: IDENT DOT IDENT

   27 secondary_modifier: STATIC
   28                   | ABSTRACT
   29                   | FINAL
   30                   | NATIVE
   31                   | SYNCHRONIZED

   32 parameter_list: ε
   33               | DATATYPE IDENT
   34               | parameter_list COMMA DATATYPE IDENT

   35 method_body: variable_declaration_list commands
   36            | commands

   37 commands: ε
   38         | commands assignment
   39         | commands loop
   40         | commands control
   41         | commands print
   42         | commands return
   43         | commands break

   44 assignment: IDENT EQUALS expression SEMICOLON
   45           | IDENT EQUALS object_creation SEMICOLON

   46 object_creation: NEW CLASS_NAME LPAR RPAR

   47 literal: INT
   48        | CHAR
   49        | STRING
   50        | BOOL
   51        | DOUBLE

   52 expression: literal
   53           | suntheti_parastash

   54 suntheti_parastash: addition
   55                   | IDENT
   56                   | multiplication
   57                   | division
   58                   | subtraction
   59                   | LPAR expression RPAR
   60                   | call_method
   61                   | method_access

   62 addition: expression PLUS expression

   63 multiplication: expression TIMES expression

   64 division: expression DIV expression

   65 subtraction: expression MINUS expression

   66 call_method: IDENT LPAR argument_list RPAR
   67            | IDENT LPAR RPAR

   68 argument_list: IDENT
   69              | argument_list COMMA literal
   70              | argument_list COMMA IDENT
   71              | literal

   72 loop: while
   73     | for

   74 while: DO LCURLY variable_declaration_list commands RCURLY WHILE LPAR condition RPAR SEMICOLON
   75      | DO LCURLY commands RCURLY WHILE LPAR condition RPAR SEMICOLON

   76 condition: expression conop expression
   77          | expression

   78 conop: RELOP
   79      | EQUOP
   80      | NOTOP
   81      | ANDOP
   82      | OROP

   83 for: FOR LPAR exp1 SEMICOLON exp2 SEMICOLON exp3 RPAR LCURLY variable_declaration_list commands RCURLY
   84    | FOR LPAR exp1 SEMICOLON exp2 SEMICOLON exp3 RPAR LCURLY commands RCURLY

   85 exp1: DATATYPE IDENT EQUALS expression
   86     | IDENT EQUALS expression

   87 exp2: IDENT conop expression

   88 exp3: IDENT PLUS expression
   89     | IDENT MINUS expression
   90     | IDENT DIV expression
   91     | IDENT TIMES expression

   92 control: if
   93        | switch_statement

   94 if: IF LPAR condition RPAR LCURLY variable_declaration_list commands RCURLY elseif else
   95   | IF LPAR condition RPAR LCURLY commands RCURLY elseif else

   96 elseif: ε
   97       | elseif ELSE IF LPAR condition RPAR LCURLY variable_declaration_list commands RCURLY
   98       | elseif ELSE IF LPAR condition RPAR LCURLY commands RCURLY

   99 else: ε
  100     | ELSE LCURLY variable_declaration_list commands RCURLY
  101     | ELSE LCURLY commands RCURLY

  102 switch_statement: SWITCH LPAR IDENT RPAR LCURLY case default_opt RCURLY

  103 case: ε
  104     | case CASE literal COLON variable_declaration_list commands break
  105     | case CASE literal COLON commands break

  106 default_opt: ε
  107            | DEFAULT COLON variable_declaration_list commands
  108            | DEFAULT COLON commands

  109 print: OUTPRINT LPAR STRING RPAR SEMICOLON
  110      | OUTPRINT LPAR STRING list RPAR SEMICOLON

  111 list: COMMA expression
  112     | list COMMA expression

  113 return: RETURN expression SEMICOLON

  114 break: BREAK SEMICOLON


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    DATATYPE (258) 16 33 34 85
    NEW (259) 46
    RETURN (260) 113
    VOID (261) 18
    IF (262) 94 95 97 98
    ELSE (263) 97 98 100 101
    WHILE (264) 74 75
    DO (265) 74 75
    FOR (266) 83 84
    SWITCH (267) 102
    CASE (268) 104 105
    DEFAULT (269) 107 108
    BREAK (270) 114
    INT (271) 47
    CHAR (272) 48
    BOOL (273) 50
    STRING (274) 49 109 110
    DOUBLE (275) 51
    PRIVATE (276) 25
    PUBLIC (277) 4 24
    STATIC (278) 27
    ABSTRACT (279) 28
    FINAL (280) 29
    NATIVE (281) 30
    SYNCHRONIZED (282) 31
    OUTPRINT (283) 109 110
    OROP (284) 82
    ANDOP (285) 81
    EQUOP (286) 79
    NOTOP (287) 80
    RELOP (288) 78
    IDENT (289) 14 15 21 22 23 26 33 34 44 45 55 66 67 68 70 85 86 87 88 89 90 91 102
    LCURLY (290) 4 21 22 23 74 75 83 84 94 95 97 98 100 101 102
    RCURLY (291) 4 21 22 23 74 75 83 84 94 95 97 98 100 101 102
    CLASS (292) 4
    CLASS_NAME (293) 4 17 46
    LPAR (294) 21 22 23 46 59 66 67 74 75 83 84 94 95 97 98 102 109 110
    RPAR (295) 21 22 23 46 59 66 67 74 75 83 84 94 95 97 98 102 109 110
    COLON (296) 104 105 107 108
    DOT (297) 26
    SEMICOLON (298) 14 15 44 45 74 75 83 84 109 110 113 114
    EQUALS (299) 44 45 85 86
    PLUS (300) 62 88
    MINUS (301) 65 89
    DIV (302) 64 90
    TIMES (303) 63 91
    COMMA (304) 34 69 70 111 112


Nonterminals, with rules where they appear

    $accept (50)
        on left: 0
    program (51)
        on left: 1
        on right: 0
    class_list (52)
        on left: 2 3
        on right: 1 2
    class (53)
        on left: 4
        on right: 2 3 9 10 11
    class_body (54)
        on left: 5 6 7 8 9 10 11
        on right: 4
    variable_declaration_list (55)
        on left: 12 13
        on right: 6 7 9 10 13 35 74 83 94 97 100 104 107
    variable_declaration (56)
        on left: 14 15
        on right: 12 13
    return_type (57)
        on left: 16 17 18
        on right: 14 15 21 22
    methods (58)
        on left: 19 20
        on right: 6 8 9 11 20
    method_declaration (59)
        on left: 21 22 23
        on right: 19 20
    modifier (60)
        on left: 24 25
        on right: 14 21 22 23
    method_access (61)
        on left: 26
        on right: 61
    secondary_modifier (62)
        on left: 27 28 29 30 31
        on right: 21
    parameter_list (63)
        on left: 32 33 34
        on right: 21 22 23 34
    method_body (64)
        on left: 35 36
        on right: 21 22 23
    commands (65)
        on left: 37 38 39 40 41 42 43
        on right: 35 36 38 39 40 41 42 43 74 75 83 84 94 95 97 98 100 101 104 105 107 108
    assignment (66)
        on left: 44 45
        on right: 38
    object_creation (67)
        on left: 46
        on right: 45
    literal (68)
        on left: 47 48 49 50 51
        on right: 52 69 71 104 105
    expression (69)
        on left: 52 53
        on right: 44 59 62 63 64 65 76 77 85 86 87 88 89 90 91 111 112 113
    suntheti_parastash (70)
        on left: 54 55 56 57 58 59 60 61
        on right: 53
    addition (71)
        on left: 62
        on right: 54
    multiplication (72)
        on left: 63
        on right: 56
    division (73)
        on left: 64
        on right: 57
    subtraction (74)
        on left: 65
        on right: 58
    call_method (75)
        on left: 66 67
        on right: 60
    argument_list (76)
        on left: 68 69 70 71
        on right: 66 69 70
    loop (77)
        on left: 72 73
        on right: 39
    while (78)
        on left: 74 75
        on right: 72
    condition (79)
        on left: 76 77
        on right: 74 75 94 95 97 98
    conop (80)
        on left: 78 79 80 81 82
        on right: 76 87
    for (81)
        on left: 83 84
        on right: 73
    exp1 (82)
        on left: 85 86
        on right: 83 84
    exp2 (83)
        on left: 87
        on right: 83 84
    exp3 (84)
        on left: 88 89 90 91
        on right: 83 84
    control (85)
        on left: 92 93
        on right: 40
    if (86)
        on left: 94 95
        on right: 92
    elseif (87)
        on left: 96 97 98
        on right: 94 95 97 98
    else (88)
        on left: 99 100 101
        on right: 94 95
    switch_statement (89)
        on left: 102
        on right: 93
    case (90)
        on left: 103 104 105
        on right: 102 104 105
    default_opt (91)
        on left: 106 107 108
        on right: 102
    print (92)
        on left: 109 110
        on right: 41
    list (93)
        on left: 111 112
        on right: 110 112
    return (94)
        on left: 113
        on right: 42
    break (95)
        on left: 114
        on right: 43 104 105


State 0

    0 $accept: • program $end

    PUBLIC  shift, and go to state 1

    program     go to state 2
    class_list  go to state 3
    class       go to state 4


State 1

    4 class: PUBLIC • CLASS CLASS_NAME LCURLY class_body RCURLY

    CLASS  shift, and go to state 5


State 2

    0 $accept: program • $end

    $end  shift, and go to state 6


State 3

    1 program: class_list •
    2 class_list: class_list • class

    PUBLIC  shift, and go to state 1

    $default  reduce using rule 1 (program)

    class  go to state 7


State 4

    3 class_list: class •

    $default  reduce using rule 3 (class_list)


State 5

    4 class: PUBLIC CLASS • CLASS_NAME LCURLY class_body RCURLY

    CLASS_NAME  shift, and go to state 8


State 6

    0 $accept: program $end •

    $default  accept


State 7

    2 class_list: class_list class •

    $default  reduce using rule 2 (class_list)


State 8

    4 class: PUBLIC CLASS CLASS_NAME • LCURLY class_body RCURLY

    LCURLY  shift, and go to state 9


State 9

    4 class: PUBLIC CLASS CLASS_NAME LCURLY • class_body RCURLY

    DATATYPE    shift, and go to state 10
    VOID        shift, and go to state 11
    PRIVATE     shift, and go to state 12
    PUBLIC      shift, and go to state 13
    CLASS_NAME  shift, and go to state 14

    $default  reduce using rule 5 (class_body)

    class_body                 go to state 15
    variable_declaration_list  go to state 16
    variable_declaration       go to state 17
    return_type                go to state 18
    methods                    go to state 19
    method_declaration         go to state 20
    modifier                   go to state 21


State 10

   16 return_type: DATATYPE •

    $default  reduce using rule 16 (return_type)


State 11

   18 return_type: VOID •

    $default  reduce using rule 18 (return_type)


State 12

   25 modifier: PRIVATE •

    $default  reduce using rule 25 (modifier)


State 13

   24 modifier: PUBLIC •

    $default  reduce using rule 24 (modifier)


State 14

   17 return_type: CLASS_NAME •

    $default  reduce using rule 17 (return_type)


State 15

    4 class: PUBLIC CLASS CLASS_NAME LCURLY class_body • RCURLY

    RCURLY  shift, and go to state 22


State 16

    6 class_body: variable_declaration_list • methods
    7           | variable_declaration_list •
    9           | variable_declaration_list • methods class
   10           | variable_declaration_list • class
   13 variable_declaration_list: variable_declaration_list • variable_declaration

    DATATYPE    shift, and go to state 10
    VOID        shift, and go to state 11
    PRIVATE     shift, and go to state 12
    PUBLIC      shift, and go to state 23
    CLASS_NAME  shift, and go to state 14

    $default  reduce using rule 7 (class_body)

    class                 go to state 24
    variable_declaration  go to state 25
    return_type           go to state 18
    methods               go to state 26
    method_declaration    go to state 20
    modifier              go to state 21


State 17

   12 variable_declaration_list: variable_declaration •

    $default  reduce using rule 12 (variable_declaration_list)


State 18

   15 variable_declaration: return_type • IDENT SEMICOLON

    IDENT  shift, and go to state 27


State 19

    8 class_body: methods •
   11           | methods • class
   20 methods: methods • method_declaration

    PRIVATE  shift, and go to state 12
    PUBLIC   shift, and go to state 23

    $default  reduce using rule 8 (class_body)

    class               go to state 28
    method_declaration  go to state 29
    modifier            go to state 30


State 20

   19 methods: method_declaration •

    $default  reduce using rule 19 (methods)


State 21

   14 variable_declaration: modifier • return_type IDENT SEMICOLON
   21 method_declaration: modifier • secondary_modifier return_type IDENT LPAR parameter_list RPAR LCURLY method_body RCURLY
   22                   | modifier • return_type IDENT LPAR parameter_list RPAR LCURLY method_body RCURLY
   23                   | modifier • IDENT LPAR parameter_list RPAR LCURLY method_body RCURLY

    DATATYPE      shift, and go to state 10
    VOID          shift, and go to state 11
    STATIC        shift, and go to state 31
    ABSTRACT      shift, and go to state 32
    FINAL         shift, and go to state 33
    NATIVE        shift, and go to state 34
    SYNCHRONIZED  shift, and go to state 35
    IDENT         shift, and go to state 36
    CLASS_NAME    shift, and go to state 14

    return_type         go to state 37
    secondary_modifier  go to state 38


State 22

    4 class: PUBLIC CLASS CLASS_NAME LCURLY class_body RCURLY •

    $default  reduce using rule 4 (class)


State 23

    4 class: PUBLIC • CLASS CLASS_NAME LCURLY class_body RCURLY
   24 modifier: PUBLIC •

    CLASS  shift, and go to state 5

    $default  reduce using rule 24 (modifier)


State 24

   10 class_body: variable_declaration_list class •

    $default  reduce using rule 10 (class_body)


State 25

   13 variable_declaration_list: variable_declaration_list variable_declaration •

    $default  reduce using rule 13 (variable_declaration_list)


State 26

    6 class_body: variable_declaration_list methods •
    9           | variable_declaration_list methods • class
   20 methods: methods • method_declaration

    PRIVATE  shift, and go to state 12
    PUBLIC   shift, and go to state 23

    $default  reduce using rule 6 (class_body)

    class               go to state 39
    method_declaration  go to state 29
    modifier            go to state 30


State 27

   15 variable_declaration: return_type IDENT • SEMICOLON

    SEMICOLON  shift, and go to state 40


State 28

   11 class_body: methods class •

    $default  reduce using rule 11 (class_body)


State 29

   20 methods: methods method_declaration •

    $default  reduce using rule 20 (methods)


State 30

   21 method_declaration: modifier • secondary_modifier return_type IDENT LPAR parameter_list RPAR LCURLY method_body RCURLY
   22                   | modifier • return_type IDENT LPAR parameter_list RPAR LCURLY method_body RCURLY
   23                   | modifier • IDENT LPAR parameter_list RPAR LCURLY method_body RCURLY

    DATATYPE      shift, and go to state 10
    VOID          shift, and go to state 11
    STATIC        shift, and go to state 31
    ABSTRACT      shift, and go to state 32
    FINAL         shift, and go to state 33
    NATIVE        shift, and go to state 34
    SYNCHRONIZED  shift, and go to state 35
    IDENT         shift, and go to state 36
    CLASS_NAME    shift, and go to state 14

    return_type         go to state 41
    secondary_modifier  go to state 38


State 31

   27 secondary_modifier: STATIC •

    $default  reduce using rule 27 (secondary_modifier)


State 32

   28 secondary_modifier: ABSTRACT •

    $default  reduce using rule 28 (secondary_modifier)


State 33

   29 secondary_modifier: FINAL •

    $default  reduce using rule 29 (secondary_modifier)


State 34

   30 secondary_modifier: NATIVE •

    $default  reduce using rule 30 (secondary_modifier)


State 35

   31 secondary_modifier: SYNCHRONIZED •

    $default  reduce using rule 31 (secondary_modifier)


State 36

   23 method_declaration: modifier IDENT • LPAR parameter_list RPAR LCURLY method_body RCURLY

    LPAR  shift, and go to state 42


State 37

   14 variable_declaration: modifier return_type • IDENT SEMICOLON
   22 method_declaration: modifier return_type • IDENT LPAR parameter_list RPAR LCURLY method_body RCURLY

    IDENT  shift, and go to state 43


State 38

   21 method_declaration: modifier secondary_modifier • return_type IDENT LPAR parameter_list RPAR LCURLY method_body RCURLY

    DATATYPE    shift, and go to state 10
    VOID        shift, and go to state 11
    CLASS_NAME  shift, and go to state 14

    return_type  go to state 44


State 39

    9 class_body: variable_declaration_list methods class •

    $default  reduce using rule 9 (class_body)


State 40

   15 variable_declaration: return_type IDENT SEMICOLON •

    $default  reduce using rule 15 (variable_declaration)


State 41

   22 method_declaration: modifier return_type • IDENT LPAR parameter_list RPAR LCURLY method_body RCURLY

    IDENT  shift, and go to state 45


State 42

   23 method_declaration: modifier IDENT LPAR • parameter_list RPAR LCURLY method_body RCURLY

    DATATYPE  shift, and go to state 46

    $default  reduce using rule 32 (parameter_list)

    parameter_list  go to state 47


State 43

   14 variable_declaration: modifier return_type IDENT • SEMICOLON
   22 method_declaration: modifier return_type IDENT • LPAR parameter_list RPAR LCURLY method_body RCURLY

    LPAR       shift, and go to state 48
    SEMICOLON  shift, and go to state 49


State 44

   21 method_declaration: modifier secondary_modifier return_type • IDENT LPAR parameter_list RPAR LCURLY method_body RCURLY

    IDENT  shift, and go to state 50


State 45

   22 method_declaration: modifier return_type IDENT • LPAR parameter_list RPAR LCURLY method_body RCURLY

    LPAR  shift, and go to state 48


State 46

   33 parameter_list: DATATYPE • IDENT

    IDENT  shift, and go to state 51


State 47

   23 method_declaration: modifier IDENT LPAR parameter_list • RPAR LCURLY method_body RCURLY
   34 parameter_list: parameter_list • COMMA DATATYPE IDENT

    RPAR   shift, and go to state 52
    COMMA  shift, and go to state 53


State 48

   22 method_declaration: modifier return_type IDENT LPAR • parameter_list RPAR LCURLY method_body RCURLY

    DATATYPE  shift, and go to state 46

    $default  reduce using rule 32 (parameter_list)

    parameter_list  go to state 54


State 49

   14 variable_declaration: modifier return_type IDENT SEMICOLON •

    $default  reduce using rule 14 (variable_declaration)


State 50

   21 method_declaration: modifier secondary_modifier return_type IDENT • LPAR parameter_list RPAR LCURLY method_body RCURLY

    LPAR  shift, and go to state 55


State 51

   33 parameter_list: DATATYPE IDENT •

    $default  reduce using rule 33 (parameter_list)


State 52

   23 method_declaration: modifier IDENT LPAR parameter_list RPAR • LCURLY method_body RCURLY

    LCURLY  shift, and go to state 56


State 53

   34 parameter_list: parameter_list COMMA • DATATYPE IDENT

    DATATYPE  shift, and go to state 57


State 54

   22 method_declaration: modifier return_type IDENT LPAR parameter_list • RPAR LCURLY method_body RCURLY
   34 parameter_list: parameter_list • COMMA DATATYPE IDENT

    RPAR   shift, and go to state 58
    COMMA  shift, and go to state 53


State 55

   21 method_declaration: modifier secondary_modifier return_type IDENT LPAR • parameter_list RPAR LCURLY method_body RCURLY

    DATATYPE  shift, and go to state 46

    $default  reduce using rule 32 (parameter_list)

    parameter_list  go to state 59


State 56

   23 method_declaration: modifier IDENT LPAR parameter_list RPAR LCURLY • method_body RCURLY

    DATATYPE    shift, and go to state 10
    VOID        shift, and go to state 11
    PRIVATE     shift, and go to state 12
    PUBLIC      shift, and go to state 13
    CLASS_NAME  shift, and go to state 14

    $default  reduce using rule 37 (commands)

    variable_declaration_list  go to state 60
    variable_declaration       go to state 17
    return_type                go to state 18
    modifier                   go to state 61
    method_body                go to state 62
    commands                   go to state 63


State 57

   34 parameter_list: parameter_list COMMA DATATYPE • IDENT

    IDENT  shift, and go to state 64


State 58

   22 method_declaration: modifier return_type IDENT LPAR parameter_list RPAR • LCURLY method_body RCURLY

    LCURLY  shift, and go to state 65


State 59

   21 method_declaration: modifier secondary_modifier return_type IDENT LPAR parameter_list • RPAR LCURLY method_body RCURLY
   34 parameter_list: parameter_list • COMMA DATATYPE IDENT

    RPAR   shift, and go to state 66
    COMMA  shift, and go to state 53


State 60

   13 variable_declaration_list: variable_declaration_list • variable_declaration
   35 method_body: variable_declaration_list • commands

    DATATYPE    shift, and go to state 10
    VOID        shift, and go to state 11
    PRIVATE     shift, and go to state 12
    PUBLIC      shift, and go to state 13
    CLASS_NAME  shift, and go to state 14

    $default  reduce using rule 37 (commands)

    variable_declaration  go to state 25
    return_type           go to state 18
    modifier              go to state 61
    commands              go to state 67


State 61

   14 variable_declaration: modifier • return_type IDENT SEMICOLON

    DATATYPE    shift, and go to state 10
    VOID        shift, and go to state 11
    CLASS_NAME  shift, and go to state 14

    return_type  go to state 68


State 62

   23 method_declaration: modifier IDENT LPAR parameter_list RPAR LCURLY method_body • RCURLY

    RCURLY  shift, and go to state 69


State 63

   36 method_body: commands •
   38 commands: commands • assignment
   39         | commands • loop
   40         | commands • control
   41         | commands • print
   42         | commands • return
   43         | commands • break

    RETURN    shift, and go to state 70
    IF        shift, and go to state 71
    DO        shift, and go to state 72
    FOR       shift, and go to state 73
    SWITCH    shift, and go to state 74
    BREAK     shift, and go to state 75
    OUTPRINT  shift, and go to state 76
    IDENT     shift, and go to state 77

    $default  reduce using rule 36 (method_body)

    assignment        go to state 78
    loop              go to state 79
    while             go to state 80
    for               go to state 81
    control           go to state 82
    if                go to state 83
    switch_statement  go to state 84
    print             go to state 85
    return            go to state 86
    break             go to state 87


State 64

   34 parameter_list: parameter_list COMMA DATATYPE IDENT •

    $default  reduce using rule 34 (parameter_list)


State 65

   22 method_declaration: modifier return_type IDENT LPAR parameter_list RPAR LCURLY • method_body RCURLY

    DATATYPE    shift, and go to state 10
    VOID        shift, and go to state 11
    PRIVATE     shift, and go to state 12
    PUBLIC      shift, and go to state 13
    CLASS_NAME  shift, and go to state 14

    $default  reduce using rule 37 (commands)

    variable_declaration_list  go to state 60
    variable_declaration       go to state 17
    return_type                go to state 18
    modifier                   go to state 61
    method_body                go to state 88
    commands                   go to state 63


State 66

   21 method_declaration: modifier secondary_modifier return_type IDENT LPAR parameter_list RPAR • LCURLY method_body RCURLY

    LCURLY  shift, and go to state 89


State 67

   35 method_body: variable_declaration_list commands •
   38 commands: commands • assignment
   39         | commands • loop
   40         | commands • control
   41         | commands • print
   42         | commands • return
   43         | commands • break

    RETURN    shift, and go to state 70
    IF        shift, and go to state 71
    DO        shift, and go to state 72
    FOR       shift, and go to state 73
    SWITCH    shift, and go to state 74
    BREAK     shift, and go to state 75
    OUTPRINT  shift, and go to state 76
    IDENT     shift, and go to state 77

    $default  reduce using rule 35 (method_body)

    assignment        go to state 78
    loop              go to state 79
    while             go to state 80
    for               go to state 81
    control           go to state 82
    if                go to state 83
    switch_statement  go to state 84
    print             go to state 85
    return            go to state 86
    break             go to state 87


State 68

   14 variable_declaration: modifier return_type • IDENT SEMICOLON

    IDENT  shift, and go to state 90


State 69

   23 method_declaration: modifier IDENT LPAR parameter_list RPAR LCURLY method_body RCURLY •

    $default  reduce using rule 23 (method_declaration)


State 70

  113 return: RETURN • expression SEMICOLON

    INT     shift, and go to state 91
    CHAR    shift, and go to state 92
    BOOL    shift, and go to state 93
    STRING  shift, and go to state 94
    DOUBLE  shift, and go to state 95
    IDENT   shift, and go to state 96
    LPAR    shift, and go to state 97

    method_access       go to state 98
    literal             go to state 99
    expression          go to state 100
    suntheti_parastash  go to state 101
    addition            go to state 102
    multiplication      go to state 103
    division            go to state 104
    subtraction         go to state 105
    call_method         go to state 106


State 71

   94 if: IF • LPAR condition RPAR LCURLY variable_declaration_list commands RCURLY elseif else
   95   | IF • LPAR condition RPAR LCURLY commands RCURLY elseif else

    LPAR  shift, and go to state 107


State 72

   74 while: DO • LCURLY variable_declaration_list commands RCURLY WHILE LPAR condition RPAR SEMICOLON
   75      | DO • LCURLY commands RCURLY WHILE LPAR condition RPAR SEMICOLON

    LCURLY  shift, and go to state 108


State 73

   83 for: FOR • LPAR exp1 SEMICOLON exp2 SEMICOLON exp3 RPAR LCURLY variable_declaration_list commands RCURLY
   84    | FOR • LPAR exp1 SEMICOLON exp2 SEMICOLON exp3 RPAR LCURLY commands RCURLY

    LPAR  shift, and go to state 109


State 74

  102 switch_statement: SWITCH • LPAR IDENT RPAR LCURLY case default_opt RCURLY

    LPAR  shift, and go to state 110


State 75

  114 break: BREAK • SEMICOLON

    SEMICOLON  shift, and go to state 111


State 76

  109 print: OUTPRINT • LPAR STRING RPAR SEMICOLON
  110      | OUTPRINT • LPAR STRING list RPAR SEMICOLON

    LPAR  shift, and go to state 112


State 77

   44 assignment: IDENT • EQUALS expression SEMICOLON
   45           | IDENT • EQUALS object_creation SEMICOLON

    EQUALS  shift, and go to state 113


State 78

   38 commands: commands assignment •

    $default  reduce using rule 38 (commands)


State 79

   39 commands: commands loop •

    $default  reduce using rule 39 (commands)


State 80

   72 loop: while •

    $default  reduce using rule 72 (loop)


State 81

   73 loop: for •

    $default  reduce using rule 73 (loop)


State 82

   40 commands: commands control •

    $default  reduce using rule 40 (commands)


State 83

   92 control: if •

    $default  reduce using rule 92 (control)


State 84

   93 control: switch_statement •

    $default  reduce using rule 93 (control)


State 85

   41 commands: commands print •

    $default  reduce using rule 41 (commands)


State 86

   42 commands: commands return •

    $default  reduce using rule 42 (commands)


State 87

   43 commands: commands break •

    $default  reduce using rule 43 (commands)


State 88

   22 method_declaration: modifier return_type IDENT LPAR parameter_list RPAR LCURLY method_body • RCURLY

    RCURLY  shift, and go to state 114


State 89

   21 method_declaration: modifier secondary_modifier return_type IDENT LPAR parameter_list RPAR LCURLY • method_body RCURLY

    DATATYPE    shift, and go to state 10
    VOID        shift, and go to state 11
    PRIVATE     shift, and go to state 12
    PUBLIC      shift, and go to state 13
    CLASS_NAME  shift, and go to state 14

    $default  reduce using rule 37 (commands)

    variable_declaration_list  go to state 60
    variable_declaration       go to state 17
    return_type                go to state 18
    modifier                   go to state 61
    method_body                go to state 115
    commands                   go to state 63


State 90

   14 variable_declaration: modifier return_type IDENT • SEMICOLON

    SEMICOLON  shift, and go to state 49


State 91

   47 literal: INT •

    $default  reduce using rule 47 (literal)


State 92

   48 literal: CHAR •

    $default  reduce using rule 48 (literal)


State 93

   50 literal: BOOL •

    $default  reduce using rule 50 (literal)


State 94

   49 literal: STRING •

    $default  reduce using rule 49 (literal)


State 95

   51 literal: DOUBLE •

    $default  reduce using rule 51 (literal)


State 96

   26 method_access: IDENT • DOT IDENT
   55 suntheti_parastash: IDENT •
   66 call_method: IDENT • LPAR argument_list RPAR
   67            | IDENT • LPAR RPAR

    LPAR  shift, and go to state 116
    DOT   shift, and go to state 117

    $default  reduce using rule 55 (suntheti_parastash)


State 97

   59 suntheti_parastash: LPAR • expression RPAR

    INT     shift, and go to state 91
    CHAR    shift, and go to state 92
    BOOL    shift, and go to state 93
    STRING  shift, and go to state 94
    DOUBLE  shift, and go to state 95
    IDENT   shift, and go to state 96
    LPAR    shift, and go to state 97

    method_access       go to state 98
    literal             go to state 99
    expression          go to state 118
    suntheti_parastash  go to state 101
    addition            go to state 102
    multiplication      go to state 103
    division            go to state 104
    subtraction         go to state 105
    call_method         go to state 106


State 98

   61 suntheti_parastash: method_access •

    $default  reduce using rule 61 (suntheti_parastash)


State 99

   52 expression: literal •

    $default  reduce using rule 52 (expression)


State 100

   62 addition: expression • PLUS expression
   63 multiplication: expression • TIMES expression
   64 division: expression • DIV expression
   65 subtraction: expression • MINUS expression
  113 return: RETURN expression • SEMICOLON

    SEMICOLON  shift, and go to state 119
    PLUS       shift, and go to state 120
    MINUS      shift, and go to state 121
    DIV        shift, and go to state 122
    TIMES      shift, and go to state 123


State 101

   53 expression: suntheti_parastash •

    $default  reduce using rule 53 (expression)


State 102

   54 suntheti_parastash: addition •

    $default  reduce using rule 54 (suntheti_parastash)


State 103

   56 suntheti_parastash: multiplication •

    $default  reduce using rule 56 (suntheti_parastash)


State 104

   57 suntheti_parastash: division •

    $default  reduce using rule 57 (suntheti_parastash)


State 105

   58 suntheti_parastash: subtraction •

    $default  reduce using rule 58 (suntheti_parastash)


State 106

   60 suntheti_parastash: call_method •

    $default  reduce using rule 60 (suntheti_parastash)


State 107

   94 if: IF LPAR • condition RPAR LCURLY variable_declaration_list commands RCURLY elseif else
   95   | IF LPAR • condition RPAR LCURLY commands RCURLY elseif else

    INT     shift, and go to state 91
    CHAR    shift, and go to state 92
    BOOL    shift, and go to state 93
    STRING  shift, and go to state 94
    DOUBLE  shift, and go to state 95
    IDENT   shift, and go to state 96
    LPAR    shift, and go to state 97

    method_access       go to state 98
    literal             go to state 99
    expression          go to state 124
    suntheti_parastash  go to state 101
    addition            go to state 102
    multiplication      go to state 103
    division            go to state 104
    subtraction         go to state 105
    call_method         go to state 106
    condition           go to state 125


State 108

   74 while: DO LCURLY • variable_declaration_list commands RCURLY WHILE LPAR condition RPAR SEMICOLON
   75      | DO LCURLY • commands RCURLY WHILE LPAR condition RPAR SEMICOLON

    DATATYPE    shift, and go to state 10
    VOID        shift, and go to state 11
    PRIVATE     shift, and go to state 12
    PUBLIC      shift, and go to state 13
    CLASS_NAME  shift, and go to state 14

    $default  reduce using rule 37 (commands)

    variable_declaration_list  go to state 126
    variable_declaration       go to state 17
    return_type                go to state 18
    modifier                   go to state 61
    commands                   go to state 127


State 109

   83 for: FOR LPAR • exp1 SEMICOLON exp2 SEMICOLON exp3 RPAR LCURLY variable_declaration_list commands RCURLY
   84    | FOR LPAR • exp1 SEMICOLON exp2 SEMICOLON exp3 RPAR LCURLY commands RCURLY

    DATATYPE  shift, and go to state 128
    IDENT     shift, and go to state 129

    exp1  go to state 130


State 110

  102 switch_statement: SWITCH LPAR • IDENT RPAR LCURLY case default_opt RCURLY

    IDENT  shift, and go to state 131


State 111

  114 break: BREAK SEMICOLON •

    $default  reduce using rule 114 (break)


State 112

  109 print: OUTPRINT LPAR • STRING RPAR SEMICOLON
  110      | OUTPRINT LPAR • STRING list RPAR SEMICOLON

    STRING  shift, and go to state 132


State 113

   44 assignment: IDENT EQUALS • expression SEMICOLON
   45           | IDENT EQUALS • object_creation SEMICOLON

    NEW     shift, and go to state 133
    INT     shift, and go to state 91
    CHAR    shift, and go to state 92
    BOOL    shift, and go to state 93
    STRING  shift, and go to state 94
    DOUBLE  shift, and go to state 95
    IDENT   shift, and go to state 96
    LPAR    shift, and go to state 97

    method_access       go to state 98
    object_creation     go to state 134
    literal             go to state 99
    expression          go to state 135
    suntheti_parastash  go to state 101
    addition            go to state 102
    multiplication      go to state 103
    division            go to state 104
    subtraction         go to state 105
    call_method         go to state 106


State 114

   22 method_declaration: modifier return_type IDENT LPAR parameter_list RPAR LCURLY method_body RCURLY •

    $default  reduce using rule 22 (method_declaration)


State 115

   21 method_declaration: modifier secondary_modifier return_type IDENT LPAR parameter_list RPAR LCURLY method_body • RCURLY

    RCURLY  shift, and go to state 136


State 116

   66 call_method: IDENT LPAR • argument_list RPAR
   67            | IDENT LPAR • RPAR

    INT     shift, and go to state 91
    CHAR    shift, and go to state 92
    BOOL    shift, and go to state 93
    STRING  shift, and go to state 94
    DOUBLE  shift, and go to state 95
    IDENT   shift, and go to state 137
    RPAR    shift, and go to state 138

    literal        go to state 139
    argument_list  go to state 140


State 117

   26 method_access: IDENT DOT • IDENT

    IDENT  shift, and go to state 141


State 118

   59 suntheti_parastash: LPAR expression • RPAR
   62 addition: expression • PLUS expression
   63 multiplication: expression • TIMES expression
   64 division: expression • DIV expression
   65 subtraction: expression • MINUS expression

    RPAR   shift, and go to state 142
    PLUS   shift, and go to state 120
    MINUS  shift, and go to state 121
    DIV    shift, and go to state 122
    TIMES  shift, and go to state 123


State 119

  113 return: RETURN expression SEMICOLON •

    $default  reduce using rule 113 (return)


State 120

   62 addition: expression PLUS • expression

    INT     shift, and go to state 91
    CHAR    shift, and go to state 92
    BOOL    shift, and go to state 93
    STRING  shift, and go to state 94
    DOUBLE  shift, and go to state 95
    IDENT   shift, and go to state 96
    LPAR    shift, and go to state 97

    method_access       go to state 98
    literal             go to state 99
    expression          go to state 143
    suntheti_parastash  go to state 101
    addition            go to state 102
    multiplication      go to state 103
    division            go to state 104
    subtraction         go to state 105
    call_method         go to state 106


State 121

   65 subtraction: expression MINUS • expression

    INT     shift, and go to state 91
    CHAR    shift, and go to state 92
    BOOL    shift, and go to state 93
    STRING  shift, and go to state 94
    DOUBLE  shift, and go to state 95
    IDENT   shift, and go to state 96
    LPAR    shift, and go to state 97

    method_access       go to state 98
    literal             go to state 99
    expression          go to state 144
    suntheti_parastash  go to state 101
    addition            go to state 102
    multiplication      go to state 103
    division            go to state 104
    subtraction         go to state 105
    call_method         go to state 106


State 122

   64 division: expression DIV • expression

    INT     shift, and go to state 91
    CHAR    shift, and go to state 92
    BOOL    shift, and go to state 93
    STRING  shift, and go to state 94
    DOUBLE  shift, and go to state 95
    IDENT   shift, and go to state 96
    LPAR    shift, and go to state 97

    method_access       go to state 98
    literal             go to state 99
    expression          go to state 145
    suntheti_parastash  go to state 101
    addition            go to state 102
    multiplication      go to state 103
    division            go to state 104
    subtraction         go to state 105
    call_method         go to state 106


State 123

   63 multiplication: expression TIMES • expression

    INT     shift, and go to state 91
    CHAR    shift, and go to state 92
    BOOL    shift, and go to state 93
    STRING  shift, and go to state 94
    DOUBLE  shift, and go to state 95
    IDENT   shift, and go to state 96
    LPAR    shift, and go to state 97

    method_access       go to state 98
    literal             go to state 99
    expression          go to state 146
    suntheti_parastash  go to state 101
    addition            go to state 102
    multiplication      go to state 103
    division            go to state 104
    subtraction         go to state 105
    call_method         go to state 106


State 124

   62 addition: expression • PLUS expression
   63 multiplication: expression • TIMES expression
   64 division: expression • DIV expression
   65 subtraction: expression • MINUS expression
   76 condition: expression • conop expression
   77          | expression •

    OROP   shift, and go to state 147
    ANDOP  shift, and go to state 148
    EQUOP  shift, and go to state 149
    NOTOP  shift, and go to state 150
    RELOP  shift, and go to state 151
    PLUS   shift, and go to state 120
    MINUS  shift, and go to state 121
    DIV    shift, and go to state 122
    TIMES  shift, and go to state 123

    $default  reduce using rule 77 (condition)

    conop  go to state 152


State 125

   94 if: IF LPAR condition • RPAR LCURLY variable_declaration_list commands RCURLY elseif else
   95   | IF LPAR condition • RPAR LCURLY commands RCURLY elseif else

    RPAR  shift, and go to state 153


State 126

   13 variable_declaration_list: variable_declaration_list • variable_declaration
   74 while: DO LCURLY variable_declaration_list • commands RCURLY WHILE LPAR condition RPAR SEMICOLON

    DATATYPE    shift, and go to state 10
    VOID        shift, and go to state 11
    PRIVATE     shift, and go to state 12
    PUBLIC      shift, and go to state 13
    CLASS_NAME  shift, and go to state 14

    $default  reduce using rule 37 (commands)

    variable_declaration  go to state 25
    return_type           go to state 18
    modifier              go to state 61
    commands              go to state 154


State 127

   38 commands: commands • assignment
   39         | commands • loop
   40         | commands • control
   41         | commands • print
   42         | commands • return
   43         | commands • break
   75 while: DO LCURLY commands • RCURLY WHILE LPAR condition RPAR SEMICOLON

    RETURN    shift, and go to state 70
    IF        shift, and go to state 71
    DO        shift, and go to state 72
    FOR       shift, and go to state 73
    SWITCH    shift, and go to state 74
    BREAK     shift, and go to state 75
    OUTPRINT  shift, and go to state 76
    IDENT     shift, and go to state 77
    RCURLY    shift, and go to state 155

    assignment        go to state 78
    loop              go to state 79
    while             go to state 80
    for               go to state 81
    control           go to state 82
    if                go to state 83
    switch_statement  go to state 84
    print             go to state 85
    return            go to state 86
    break             go to state 87


State 128

   85 exp1: DATATYPE • IDENT EQUALS expression

    IDENT  shift, and go to state 156


State 129

   86 exp1: IDENT • EQUALS expression

    EQUALS  shift, and go to state 157


State 130

   83 for: FOR LPAR exp1 • SEMICOLON exp2 SEMICOLON exp3 RPAR LCURLY variable_declaration_list commands RCURLY
   84    | FOR LPAR exp1 • SEMICOLON exp2 SEMICOLON exp3 RPAR LCURLY commands RCURLY

    SEMICOLON  shift, and go to state 158


State 131

  102 switch_statement: SWITCH LPAR IDENT • RPAR LCURLY case default_opt RCURLY

    RPAR  shift, and go to state 159


State 132

  109 print: OUTPRINT LPAR STRING • RPAR SEMICOLON
  110      | OUTPRINT LPAR STRING • list RPAR SEMICOLON

    RPAR   shift, and go to state 160
    COMMA  shift, and go to state 161

    list  go to state 162


State 133

   46 object_creation: NEW • CLASS_NAME LPAR RPAR

    CLASS_NAME  shift, and go to state 163


State 134

   45 assignment: IDENT EQUALS object_creation • SEMICOLON

    SEMICOLON  shift, and go to state 164


State 135

   44 assignment: IDENT EQUALS expression • SEMICOLON
   62 addition: expression • PLUS expression
   63 multiplication: expression • TIMES expression
   64 division: expression • DIV expression
   65 subtraction: expression • MINUS expression

    SEMICOLON  shift, and go to state 165
    PLUS       shift, and go to state 120
    MINUS      shift, and go to state 121
    DIV        shift, and go to state 122
    TIMES      shift, and go to state 123


State 136

   21 method_declaration: modifier secondary_modifier return_type IDENT LPAR parameter_list RPAR LCURLY method_body RCURLY •

    $default  reduce using rule 21 (method_declaration)


State 137

   68 argument_list: IDENT •

    $default  reduce using rule 68 (argument_list)


State 138

   67 call_method: IDENT LPAR RPAR •

    $default  reduce using rule 67 (call_method)


State 139

   71 argument_list: literal •

    $default  reduce using rule 71 (argument_list)


State 140

   66 call_method: IDENT LPAR argument_list • RPAR
   69 argument_list: argument_list • COMMA literal
   70              | argument_list • COMMA IDENT

    RPAR   shift, and go to state 166
    COMMA  shift, and go to state 167


State 141

   26 method_access: IDENT DOT IDENT •

    $default  reduce using rule 26 (method_access)


State 142

   59 suntheti_parastash: LPAR expression RPAR •

    $default  reduce using rule 59 (suntheti_parastash)


State 143

   62 addition: expression • PLUS expression
   62         | expression PLUS expression •
   63 multiplication: expression • TIMES expression
   64 division: expression • DIV expression
   65 subtraction: expression • MINUS expression

    $default  reduce using rule 62 (addition)


State 144

   62 addition: expression • PLUS expression
   63 multiplication: expression • TIMES expression
   64 division: expression • DIV expression
   65 subtraction: expression • MINUS expression
   65            | expression MINUS expression •

    $default  reduce using rule 65 (subtraction)


State 145

   62 addition: expression • PLUS expression
   63 multiplication: expression • TIMES expression
   64 division: expression • DIV expression
   64         | expression DIV expression •
   65 subtraction: expression • MINUS expression

    $default  reduce using rule 64 (division)


State 146

   62 addition: expression • PLUS expression
   63 multiplication: expression • TIMES expression
   63               | expression TIMES expression •
   64 division: expression • DIV expression
   65 subtraction: expression • MINUS expression

    $default  reduce using rule 63 (multiplication)


State 147

   82 conop: OROP •

    $default  reduce using rule 82 (conop)


State 148

   81 conop: ANDOP •

    $default  reduce using rule 81 (conop)


State 149

   79 conop: EQUOP •

    $default  reduce using rule 79 (conop)


State 150

   80 conop: NOTOP •

    $default  reduce using rule 80 (conop)


State 151

   78 conop: RELOP •

    $default  reduce using rule 78 (conop)


State 152

   76 condition: expression conop • expression

    INT     shift, and go to state 91
    CHAR    shift, and go to state 92
    BOOL    shift, and go to state 93
    STRING  shift, and go to state 94
    DOUBLE  shift, and go to state 95
    IDENT   shift, and go to state 96
    LPAR    shift, and go to state 97

    method_access       go to state 98
    literal             go to state 99
    expression          go to state 168
    suntheti_parastash  go to state 101
    addition            go to state 102
    multiplication      go to state 103
    division            go to state 104
    subtraction         go to state 105
    call_method         go to state 106


State 153

   94 if: IF LPAR condition RPAR • LCURLY variable_declaration_list commands RCURLY elseif else
   95   | IF LPAR condition RPAR • LCURLY commands RCURLY elseif else

    LCURLY  shift, and go to state 169


State 154

   38 commands: commands • assignment
   39         | commands • loop
   40         | commands • control
   41         | commands • print
   42         | commands • return
   43         | commands • break
   74 while: DO LCURLY variable_declaration_list commands • RCURLY WHILE LPAR condition RPAR SEMICOLON

    RETURN    shift, and go to state 70
    IF        shift, and go to state 71
    DO        shift, and go to state 72
    FOR       shift, and go to state 73
    SWITCH    shift, and go to state 74
    BREAK     shift, and go to state 75
    OUTPRINT  shift, and go to state 76
    IDENT     shift, and go to state 77
    RCURLY    shift, and go to state 170

    assignment        go to state 78
    loop              go to state 79
    while             go to state 80
    for               go to state 81
    control           go to state 82
    if                go to state 83
    switch_statement  go to state 84
    print             go to state 85
    return            go to state 86
    break             go to state 87


State 155

   75 while: DO LCURLY commands RCURLY • WHILE LPAR condition RPAR SEMICOLON

    WHILE  shift, and go to state 171


State 156

   85 exp1: DATATYPE IDENT • EQUALS expression

    EQUALS  shift, and go to state 172


State 157

   86 exp1: IDENT EQUALS • expression

    INT     shift, and go to state 91
    CHAR    shift, and go to state 92
    BOOL    shift, and go to state 93
    STRING  shift, and go to state 94
    DOUBLE  shift, and go to state 95
    IDENT   shift, and go to state 96
    LPAR    shift, and go to state 97

    method_access       go to state 98
    literal             go to state 99
    expression          go to state 173
    suntheti_parastash  go to state 101
    addition            go to state 102
    multiplication      go to state 103
    division            go to state 104
    subtraction         go to state 105
    call_method         go to state 106


State 158

   83 for: FOR LPAR exp1 SEMICOLON • exp2 SEMICOLON exp3 RPAR LCURLY variable_declaration_list commands RCURLY
   84    | FOR LPAR exp1 SEMICOLON • exp2 SEMICOLON exp3 RPAR LCURLY commands RCURLY

    IDENT  shift, and go to state 174

    exp2  go to state 175


State 159

  102 switch_statement: SWITCH LPAR IDENT RPAR • LCURLY case default_opt RCURLY

    LCURLY  shift, and go to state 176


State 160

  109 print: OUTPRINT LPAR STRING RPAR • SEMICOLON

    SEMICOLON  shift, and go to state 177


State 161

  111 list: COMMA • expression

    INT     shift, and go to state 91
    CHAR    shift, and go to state 92
    BOOL    shift, and go to state 93
    STRING  shift, and go to state 94
    DOUBLE  shift, and go to state 95
    IDENT   shift, and go to state 96
    LPAR    shift, and go to state 97

    method_access       go to state 98
    literal             go to state 99
    expression          go to state 178
    suntheti_parastash  go to state 101
    addition            go to state 102
    multiplication      go to state 103
    division            go to state 104
    subtraction         go to state 105
    call_method         go to state 106


State 162

  110 print: OUTPRINT LPAR STRING list • RPAR SEMICOLON
  112 list: list • COMMA expression

    RPAR   shift, and go to state 179
    COMMA  shift, and go to state 180


State 163

   46 object_creation: NEW CLASS_NAME • LPAR RPAR

    LPAR  shift, and go to state 181


State 164

   45 assignment: IDENT EQUALS object_creation SEMICOLON •

    $default  reduce using rule 45 (assignment)


State 165

   44 assignment: IDENT EQUALS expression SEMICOLON •

    $default  reduce using rule 44 (assignment)


State 166

   66 call_method: IDENT LPAR argument_list RPAR •

    $default  reduce using rule 66 (call_method)


State 167

   69 argument_list: argument_list COMMA • literal
   70              | argument_list COMMA • IDENT

    INT     shift, and go to state 91
    CHAR    shift, and go to state 92
    BOOL    shift, and go to state 93
    STRING  shift, and go to state 94
    DOUBLE  shift, and go to state 95
    IDENT   shift, and go to state 182

    literal  go to state 183


State 168

   62 addition: expression • PLUS expression
   63 multiplication: expression • TIMES expression
   64 division: expression • DIV expression
   65 subtraction: expression • MINUS expression
   76 condition: expression conop expression •

    PLUS   shift, and go to state 120
    MINUS  shift, and go to state 121
    DIV    shift, and go to state 122
    TIMES  shift, and go to state 123

    $default  reduce using rule 76 (condition)


State 169

   94 if: IF LPAR condition RPAR LCURLY • variable_declaration_list commands RCURLY elseif else
   95   | IF LPAR condition RPAR LCURLY • commands RCURLY elseif else

    DATATYPE    shift, and go to state 10
    VOID        shift, and go to state 11
    PRIVATE     shift, and go to state 12
    PUBLIC      shift, and go to state 13
    CLASS_NAME  shift, and go to state 14

    $default  reduce using rule 37 (commands)

    variable_declaration_list  go to state 184
    variable_declaration       go to state 17
    return_type                go to state 18
    modifier                   go to state 61
    commands                   go to state 185


State 170

   74 while: DO LCURLY variable_declaration_list commands RCURLY • WHILE LPAR condition RPAR SEMICOLON

    WHILE  shift, and go to state 186


State 171

   75 while: DO LCURLY commands RCURLY WHILE • LPAR condition RPAR SEMICOLON

    LPAR  shift, and go to state 187


State 172

   85 exp1: DATATYPE IDENT EQUALS • expression

    INT     shift, and go to state 91
    CHAR    shift, and go to state 92
    BOOL    shift, and go to state 93
    STRING  shift, and go to state 94
    DOUBLE  shift, and go to state 95
    IDENT   shift, and go to state 96
    LPAR    shift, and go to state 97

    method_access       go to state 98
    literal             go to state 99
    expression          go to state 188
    suntheti_parastash  go to state 101
    addition            go to state 102
    multiplication      go to state 103
    division            go to state 104
    subtraction         go to state 105
    call_method         go to state 106


State 173

   62 addition: expression • PLUS expression
   63 multiplication: expression • TIMES expression
   64 division: expression • DIV expression
   65 subtraction: expression • MINUS expression
   86 exp1: IDENT EQUALS expression •

    PLUS   shift, and go to state 120
    MINUS  shift, and go to state 121
    DIV    shift, and go to state 122
    TIMES  shift, and go to state 123

    $default  reduce using rule 86 (exp1)


State 174

   87 exp2: IDENT • conop expression

    OROP   shift, and go to state 147
    ANDOP  shift, and go to state 148
    EQUOP  shift, and go to state 149
    NOTOP  shift, and go to state 150
    RELOP  shift, and go to state 151

    conop  go to state 189


State 175

   83 for: FOR LPAR exp1 SEMICOLON exp2 • SEMICOLON exp3 RPAR LCURLY variable_declaration_list commands RCURLY
   84    | FOR LPAR exp1 SEMICOLON exp2 • SEMICOLON exp3 RPAR LCURLY commands RCURLY

    SEMICOLON  shift, and go to state 190


State 176

  102 switch_statement: SWITCH LPAR IDENT RPAR LCURLY • case default_opt RCURLY

    $default  reduce using rule 103 (case)

    case  go to state 191


State 177

  109 print: OUTPRINT LPAR STRING RPAR SEMICOLON •

    $default  reduce using rule 109 (print)


State 178

   62 addition: expression • PLUS expression
   63 multiplication: expression • TIMES expression
   64 division: expression • DIV expression
   65 subtraction: expression • MINUS expression
  111 list: COMMA expression •

    PLUS   shift, and go to state 120
    MINUS  shift, and go to state 121
    DIV    shift, and go to state 122
    TIMES  shift, and go to state 123

    $default  reduce using rule 111 (list)


State 179

  110 print: OUTPRINT LPAR STRING list RPAR • SEMICOLON

    SEMICOLON  shift, and go to state 192


State 180

  112 list: list COMMA • expression

    INT     shift, and go to state 91
    CHAR    shift, and go to state 92
    BOOL    shift, and go to state 93
    STRING  shift, and go to state 94
    DOUBLE  shift, and go to state 95
    IDENT   shift, and go to state 96
    LPAR    shift, and go to state 97

    method_access       go to state 98
    literal             go to state 99
    expression          go to state 193
    suntheti_parastash  go to state 101
    addition            go to state 102
    multiplication      go to state 103
    division            go to state 104
    subtraction         go to state 105
    call_method         go to state 106


State 181

   46 object_creation: NEW CLASS_NAME LPAR • RPAR

    RPAR  shift, and go to state 194


State 182

   70 argument_list: argument_list COMMA IDENT •

    $default  reduce using rule 70 (argument_list)


State 183

   69 argument_list: argument_list COMMA literal •

    $default  reduce using rule 69 (argument_list)


State 184

   13 variable_declaration_list: variable_declaration_list • variable_declaration
   94 if: IF LPAR condition RPAR LCURLY variable_declaration_list • commands RCURLY elseif else

    DATATYPE    shift, and go to state 10
    VOID        shift, and go to state 11
    PRIVATE     shift, and go to state 12
    PUBLIC      shift, and go to state 13
    CLASS_NAME  shift, and go to state 14

    $default  reduce using rule 37 (commands)

    variable_declaration  go to state 25
    return_type           go to state 18
    modifier              go to state 61
    commands              go to state 195


State 185

   38 commands: commands • assignment
   39         | commands • loop
   40         | commands • control
   41         | commands • print
   42         | commands • return
   43         | commands • break
   95 if: IF LPAR condition RPAR LCURLY commands • RCURLY elseif else

    RETURN    shift, and go to state 70
    IF        shift, and go to state 71
    DO        shift, and go to state 72
    FOR       shift, and go to state 73
    SWITCH    shift, and go to state 74
    BREAK     shift, and go to state 75
    OUTPRINT  shift, and go to state 76
    IDENT     shift, and go to state 77
    RCURLY    shift, and go to state 196

    assignment        go to state 78
    loop              go to state 79
    while             go to state 80
    for               go to state 81
    control           go to state 82
    if                go to state 83
    switch_statement  go to state 84
    print             go to state 85
    return            go to state 86
    break             go to state 87


State 186

   74 while: DO LCURLY variable_declaration_list commands RCURLY WHILE • LPAR condition RPAR SEMICOLON

    LPAR  shift, and go to state 197


State 187

   75 while: DO LCURLY commands RCURLY WHILE LPAR • condition RPAR SEMICOLON

    INT     shift, and go to state 91
    CHAR    shift, and go to state 92
    BOOL    shift, and go to state 93
    STRING  shift, and go to state 94
    DOUBLE  shift, and go to state 95
    IDENT   shift, and go to state 96
    LPAR    shift, and go to state 97

    method_access       go to state 98
    literal             go to state 99
    expression          go to state 124
    suntheti_parastash  go to state 101
    addition            go to state 102
    multiplication      go to state 103
    division            go to state 104
    subtraction         go to state 105
    call_method         go to state 106
    condition           go to state 198


State 188

   62 addition: expression • PLUS expression
   63 multiplication: expression • TIMES expression
   64 division: expression • DIV expression
   65 subtraction: expression • MINUS expression
   85 exp1: DATATYPE IDENT EQUALS expression •

    PLUS   shift, and go to state 120
    MINUS  shift, and go to state 121
    DIV    shift, and go to state 122
    TIMES  shift, and go to state 123

    $default  reduce using rule 85 (exp1)


State 189

   87 exp2: IDENT conop • expression

    INT     shift, and go to state 91
    CHAR    shift, and go to state 92
    BOOL    shift, and go to state 93
    STRING  shift, and go to state 94
    DOUBLE  shift, and go to state 95
    IDENT   shift, and go to state 96
    LPAR    shift, and go to state 97

    method_access       go to state 98
    literal             go to state 99
    expression          go to state 199
    suntheti_parastash  go to state 101
    addition            go to state 102
    multiplication      go to state 103
    division            go to state 104
    subtraction         go to state 105
    call_method         go to state 106


State 190

   83 for: FOR LPAR exp1 SEMICOLON exp2 SEMICOLON • exp3 RPAR LCURLY variable_declaration_list commands RCURLY
   84    | FOR LPAR exp1 SEMICOLON exp2 SEMICOLON • exp3 RPAR LCURLY commands RCURLY

    IDENT  shift, and go to state 200

    exp3  go to state 201


State 191

  102 switch_statement: SWITCH LPAR IDENT RPAR LCURLY case • default_opt RCURLY
  104 case: case • CASE literal COLON variable_declaration_list commands break
  105     | case • CASE literal COLON commands break

    CASE     shift, and go to state 202
    DEFAULT  shift, and go to state 203

    $default  reduce using rule 106 (default_opt)

    default_opt  go to state 204


State 192

  110 print: OUTPRINT LPAR STRING list RPAR SEMICOLON •

    $default  reduce using rule 110 (print)


State 193

   62 addition: expression • PLUS expression
   63 multiplication: expression • TIMES expression
   64 division: expression • DIV expression
   65 subtraction: expression • MINUS expression
  112 list: list COMMA expression •

    PLUS   shift, and go to state 120
    MINUS  shift, and go to state 121
    DIV    shift, and go to state 122
    TIMES  shift, and go to state 123

    $default  reduce using rule 112 (list)


State 194

   46 object_creation: NEW CLASS_NAME LPAR RPAR •

    $default  reduce using rule 46 (object_creation)


State 195

   38 commands: commands • assignment
   39         | commands • loop
   40         | commands • control
   41         | commands • print
   42         | commands • return
   43         | commands • break
   94 if: IF LPAR condition RPAR LCURLY variable_declaration_list commands • RCURLY elseif else

    RETURN    shift, and go to state 70
    IF        shift, and go to state 71
    DO        shift, and go to state 72
    FOR       shift, and go to state 73
    SWITCH    shift, and go to state 74
    BREAK     shift, and go to state 75
    OUTPRINT  shift, and go to state 76
    IDENT     shift, and go to state 77
    RCURLY    shift, and go to state 205

    assignment        go to state 78
    loop              go to state 79
    while             go to state 80
    for               go to state 81
    control           go to state 82
    if                go to state 83
    switch_statement  go to state 84
    print             go to state 85
    return            go to state 86
    break             go to state 87


State 196

   95 if: IF LPAR condition RPAR LCURLY commands RCURLY • elseif else

    $default  reduce using rule 96 (elseif)

    elseif  go to state 206


State 197

   74 while: DO LCURLY variable_declaration_list commands RCURLY WHILE LPAR • condition RPAR SEMICOLON

    INT     shift, and go to state 91
    CHAR    shift, and go to state 92
    BOOL    shift, and go to state 93
    STRING  shift, and go to state 94
    DOUBLE  shift, and go to state 95
    IDENT   shift, and go to state 96
    LPAR    shift, and go to state 97

    method_access       go to state 98
    literal             go to state 99
    expression          go to state 124
    suntheti_parastash  go to state 101
    addition            go to state 102
    multiplication      go to state 103
    division            go to state 104
    subtraction         go to state 105
    call_method         go to state 106
    condition           go to state 207


State 198

   75 while: DO LCURLY commands RCURLY WHILE LPAR condition • RPAR SEMICOLON

    RPAR  shift, and go to state 208


State 199

   62 addition: expression • PLUS expression
   63 multiplication: expression • TIMES expression
   64 division: expression • DIV expression
   65 subtraction: expression • MINUS expression
   87 exp2: IDENT conop expression •

    PLUS   shift, and go to state 120
    MINUS  shift, and go to state 121
    DIV    shift, and go to state 122
    TIMES  shift, and go to state 123

    $default  reduce using rule 87 (exp2)


State 200

   88 exp3: IDENT • PLUS expression
   89     | IDENT • MINUS expression
   90     | IDENT • DIV expression
   91     | IDENT • TIMES expression

    PLUS   shift, and go to state 209
    MINUS  shift, and go to state 210
    DIV    shift, and go to state 211
    TIMES  shift, and go to state 212


State 201

   83 for: FOR LPAR exp1 SEMICOLON exp2 SEMICOLON exp3 • RPAR LCURLY variable_declaration_list commands RCURLY
   84    | FOR LPAR exp1 SEMICOLON exp2 SEMICOLON exp3 • RPAR LCURLY commands RCURLY

    RPAR  shift, and go to state 213


State 202

  104 case: case CASE • literal COLON variable_declaration_list commands break
  105     | case CASE • literal COLON commands break

    INT     shift, and go to state 91
    CHAR    shift, and go to state 92
    BOOL    shift, and go to state 93
    STRING  shift, and go to state 94
    DOUBLE  shift, and go to state 95

    literal  go to state 214


State 203

  107 default_opt: DEFAULT • COLON variable_declaration_list commands
  108            | DEFAULT • COLON commands

    COLON  shift, and go to state 215


State 204

  102 switch_statement: SWITCH LPAR IDENT RPAR LCURLY case default_opt • RCURLY

    RCURLY  shift, and go to state 216


State 205

   94 if: IF LPAR condition RPAR LCURLY variable_declaration_list commands RCURLY • elseif else

    $default  reduce using rule 96 (elseif)

    elseif  go to state 217


State 206

   95 if: IF LPAR condition RPAR LCURLY commands RCURLY elseif • else
   97 elseif: elseif • ELSE IF LPAR condition RPAR LCURLY variable_declaration_list commands RCURLY
   98       | elseif • ELSE IF LPAR condition RPAR LCURLY commands RCURLY

    ELSE  shift, and go to state 218

    $default  reduce using rule 99 (else)

    else  go to state 219


State 207

   74 while: DO LCURLY variable_declaration_list commands RCURLY WHILE LPAR condition • RPAR SEMICOLON

    RPAR  shift, and go to state 220


State 208

   75 while: DO LCURLY commands RCURLY WHILE LPAR condition RPAR • SEMICOLON

    SEMICOLON  shift, and go to state 221


State 209

   88 exp3: IDENT PLUS • expression

    INT     shift, and go to state 91
    CHAR    shift, and go to state 92
    BOOL    shift, and go to state 93
    STRING  shift, and go to state 94
    DOUBLE  shift, and go to state 95
    IDENT   shift, and go to state 96
    LPAR    shift, and go to state 97

    method_access       go to state 98
    literal             go to state 99
    expression          go to state 222
    suntheti_parastash  go to state 101
    addition            go to state 102
    multiplication      go to state 103
    division            go to state 104
    subtraction         go to state 105
    call_method         go to state 106


State 210

   89 exp3: IDENT MINUS • expression

    INT     shift, and go to state 91
    CHAR    shift, and go to state 92
    BOOL    shift, and go to state 93
    STRING  shift, and go to state 94
    DOUBLE  shift, and go to state 95
    IDENT   shift, and go to state 96
    LPAR    shift, and go to state 97

    method_access       go to state 98
    literal             go to state 99
    expression          go to state 223
    suntheti_parastash  go to state 101
    addition            go to state 102
    multiplication      go to state 103
    division            go to state 104
    subtraction         go to state 105
    call_method         go to state 106


State 211

   90 exp3: IDENT DIV • expression

    INT     shift, and go to state 91
    CHAR    shift, and go to state 92
    BOOL    shift, and go to state 93
    STRING  shift, and go to state 94
    DOUBLE  shift, and go to state 95
    IDENT   shift, and go to state 96
    LPAR    shift, and go to state 97

    method_access       go to state 98
    literal             go to state 99
    expression          go to state 224
    suntheti_parastash  go to state 101
    addition            go to state 102
    multiplication      go to state 103
    division            go to state 104
    subtraction         go to state 105
    call_method         go to state 106


State 212

   91 exp3: IDENT TIMES • expression

    INT     shift, and go to state 91
    CHAR    shift, and go to state 92
    BOOL    shift, and go to state 93
    STRING  shift, and go to state 94
    DOUBLE  shift, and go to state 95
    IDENT   shift, and go to state 96
    LPAR    shift, and go to state 97

    method_access       go to state 98
    literal             go to state 99
    expression          go to state 225
    suntheti_parastash  go to state 101
    addition            go to state 102
    multiplication      go to state 103
    division            go to state 104
    subtraction         go to state 105
    call_method         go to state 106


State 213

   83 for: FOR LPAR exp1 SEMICOLON exp2 SEMICOLON exp3 RPAR • LCURLY variable_declaration_list commands RCURLY
   84    | FOR LPAR exp1 SEMICOLON exp2 SEMICOLON exp3 RPAR • LCURLY commands RCURLY

    LCURLY  shift, and go to state 226


State 214

  104 case: case CASE literal • COLON variable_declaration_list commands break
  105     | case CASE literal • COLON commands break

    COLON  shift, and go to state 227


State 215

  107 default_opt: DEFAULT COLON • variable_declaration_list commands
  108            | DEFAULT COLON • commands

    DATATYPE    shift, and go to state 10
    VOID        shift, and go to state 11
    PRIVATE     shift, and go to state 12
    PUBLIC      shift, and go to state 13
    CLASS_NAME  shift, and go to state 14

    $default  reduce using rule 37 (commands)

    variable_declaration_list  go to state 228
    variable_declaration       go to state 17
    return_type                go to state 18
    modifier                   go to state 61
    commands                   go to state 229


State 216

  102 switch_statement: SWITCH LPAR IDENT RPAR LCURLY case default_opt RCURLY •

    $default  reduce using rule 102 (switch_statement)


State 217

   94 if: IF LPAR condition RPAR LCURLY variable_declaration_list commands RCURLY elseif • else
   97 elseif: elseif • ELSE IF LPAR condition RPAR LCURLY variable_declaration_list commands RCURLY
   98       | elseif • ELSE IF LPAR condition RPAR LCURLY commands RCURLY

    ELSE  shift, and go to state 218

    $default  reduce using rule 99 (else)

    else  go to state 230


State 218

   97 elseif: elseif ELSE • IF LPAR condition RPAR LCURLY variable_declaration_list commands RCURLY
   98       | elseif ELSE • IF LPAR condition RPAR LCURLY commands RCURLY
  100 else: ELSE • LCURLY variable_declaration_list commands RCURLY
  101     | ELSE • LCURLY commands RCURLY

    IF      shift, and go to state 231
    LCURLY  shift, and go to state 232


State 219

   95 if: IF LPAR condition RPAR LCURLY commands RCURLY elseif else •

    $default  reduce using rule 95 (if)


State 220

   74 while: DO LCURLY variable_declaration_list commands RCURLY WHILE LPAR condition RPAR • SEMICOLON

    SEMICOLON  shift, and go to state 233


State 221

   75 while: DO LCURLY commands RCURLY WHILE LPAR condition RPAR SEMICOLON •

    $default  reduce using rule 75 (while)


State 222

   62 addition: expression • PLUS expression
   63 multiplication: expression • TIMES expression
   64 division: expression • DIV expression
   65 subtraction: expression • MINUS expression
   88 exp3: IDENT PLUS expression •

    PLUS   shift, and go to state 120
    MINUS  shift, and go to state 121
    DIV    shift, and go to state 122
    TIMES  shift, and go to state 123

    $default  reduce using rule 88 (exp3)


State 223

   62 addition: expression • PLUS expression
   63 multiplication: expression • TIMES expression
   64 division: expression • DIV expression
   65 subtraction: expression • MINUS expression
   89 exp3: IDENT MINUS expression •

    PLUS   shift, and go to state 120
    MINUS  shift, and go to state 121
    DIV    shift, and go to state 122
    TIMES  shift, and go to state 123

    $default  reduce using rule 89 (exp3)


State 224

   62 addition: expression • PLUS expression
   63 multiplication: expression • TIMES expression
   64 division: expression • DIV expression
   65 subtraction: expression • MINUS expression
   90 exp3: IDENT DIV expression •

    PLUS   shift, and go to state 120
    MINUS  shift, and go to state 121
    DIV    shift, and go to state 122
    TIMES  shift, and go to state 123

    $default  reduce using rule 90 (exp3)


State 225

   62 addition: expression • PLUS expression
   63 multiplication: expression • TIMES expression
   64 division: expression • DIV expression
   65 subtraction: expression • MINUS expression
   91 exp3: IDENT TIMES expression •

    PLUS   shift, and go to state 120
    MINUS  shift, and go to state 121
    DIV    shift, and go to state 122
    TIMES  shift, and go to state 123

    $default  reduce using rule 91 (exp3)


State 226

   83 for: FOR LPAR exp1 SEMICOLON exp2 SEMICOLON exp3 RPAR LCURLY • variable_declaration_list commands RCURLY
   84    | FOR LPAR exp1 SEMICOLON exp2 SEMICOLON exp3 RPAR LCURLY • commands RCURLY

    DATATYPE    shift, and go to state 10
    VOID        shift, and go to state 11
    PRIVATE     shift, and go to state 12
    PUBLIC      shift, and go to state 13
    CLASS_NAME  shift, and go to state 14

    $default  reduce using rule 37 (commands)

    variable_declaration_list  go to state 234
    variable_declaration       go to state 17
    return_type                go to state 18
    modifier                   go to state 61
    commands                   go to state 235


State 227

  104 case: case CASE literal COLON • variable_declaration_list commands break
  105     | case CASE literal COLON • commands break

    DATATYPE    shift, and go to state 10
    VOID        shift, and go to state 11
    PRIVATE     shift, and go to state 12
    PUBLIC      shift, and go to state 13
    CLASS_NAME  shift, and go to state 14

    $default  reduce using rule 37 (commands)

    variable_declaration_list  go to state 236
    variable_declaration       go to state 17
    return_type                go to state 18
    modifier                   go to state 61
    commands                   go to state 237


State 228

   13 variable_declaration_list: variable_declaration_list • variable_declaration
  107 default_opt: DEFAULT COLON variable_declaration_list • commands

    DATATYPE    shift, and go to state 10
    VOID        shift, and go to state 11
    PRIVATE     shift, and go to state 12
    PUBLIC      shift, and go to state 13
    CLASS_NAME  shift, and go to state 14

    $default  reduce using rule 37 (commands)

    variable_declaration  go to state 25
    return_type           go to state 18
    modifier              go to state 61
    commands              go to state 238


State 229

   38 commands: commands • assignment
   39         | commands • loop
   40         | commands • control
   41         | commands • print
   42         | commands • return
   43         | commands • break
  108 default_opt: DEFAULT COLON commands •

    RETURN    shift, and go to state 70
    IF        shift, and go to state 71
    DO        shift, and go to state 72
    FOR       shift, and go to state 73
    SWITCH    shift, and go to state 74
    BREAK     shift, and go to state 75
    OUTPRINT  shift, and go to state 76
    IDENT     shift, and go to state 77

    $default  reduce using rule 108 (default_opt)

    assignment        go to state 78
    loop              go to state 79
    while             go to state 80
    for               go to state 81
    control           go to state 82
    if                go to state 83
    switch_statement  go to state 84
    print             go to state 85
    return            go to state 86
    break             go to state 87


State 230

   94 if: IF LPAR condition RPAR LCURLY variable_declaration_list commands RCURLY elseif else •

    $default  reduce using rule 94 (if)


State 231

   97 elseif: elseif ELSE IF • LPAR condition RPAR LCURLY variable_declaration_list commands RCURLY
   98       | elseif ELSE IF • LPAR condition RPAR LCURLY commands RCURLY

    LPAR  shift, and go to state 239


State 232

  100 else: ELSE LCURLY • variable_declaration_list commands RCURLY
  101     | ELSE LCURLY • commands RCURLY

    DATATYPE    shift, and go to state 10
    VOID        shift, and go to state 11
    PRIVATE     shift, and go to state 12
    PUBLIC      shift, and go to state 13
    CLASS_NAME  shift, and go to state 14

    $default  reduce using rule 37 (commands)

    variable_declaration_list  go to state 240
    variable_declaration       go to state 17
    return_type                go to state 18
    modifier                   go to state 61
    commands                   go to state 241


State 233

   74 while: DO LCURLY variable_declaration_list commands RCURLY WHILE LPAR condition RPAR SEMICOLON •

    $default  reduce using rule 74 (while)


State 234

   13 variable_declaration_list: variable_declaration_list • variable_declaration
   83 for: FOR LPAR exp1 SEMICOLON exp2 SEMICOLON exp3 RPAR LCURLY variable_declaration_list • commands RCURLY

    DATATYPE    shift, and go to state 10
    VOID        shift, and go to state 11
    PRIVATE     shift, and go to state 12
    PUBLIC      shift, and go to state 13
    CLASS_NAME  shift, and go to state 14

    $default  reduce using rule 37 (commands)

    variable_declaration  go to state 25
    return_type           go to state 18
    modifier              go to state 61
    commands              go to state 242


State 235

   38 commands: commands • assignment
   39         | commands • loop
   40         | commands • control
   41         | commands • print
   42         | commands • return
   43         | commands • break
   84 for: FOR LPAR exp1 SEMICOLON exp2 SEMICOLON exp3 RPAR LCURLY commands • RCURLY

    RETURN    shift, and go to state 70
    IF        shift, and go to state 71
    DO        shift, and go to state 72
    FOR       shift, and go to state 73
    SWITCH    shift, and go to state 74
    BREAK     shift, and go to state 75
    OUTPRINT  shift, and go to state 76
    IDENT     shift, and go to state 77
    RCURLY    shift, and go to state 243

    assignment        go to state 78
    loop              go to state 79
    while             go to state 80
    for               go to state 81
    control           go to state 82
    if                go to state 83
    switch_statement  go to state 84
    print             go to state 85
    return            go to state 86
    break             go to state 87


State 236

   13 variable_declaration_list: variable_declaration_list • variable_declaration
  104 case: case CASE literal COLON variable_declaration_list • commands break

    DATATYPE    shift, and go to state 10
    VOID        shift, and go to state 11
    PRIVATE     shift, and go to state 12
    PUBLIC      shift, and go to state 13
    CLASS_NAME  shift, and go to state 14

    $default  reduce using rule 37 (commands)

    variable_declaration  go to state 25
    return_type           go to state 18
    modifier              go to state 61
    commands              go to state 244


State 237

   38 commands: commands • assignment
   39         | commands • loop
   40         | commands • control
   41         | commands • print
   42         | commands • return
   43         | commands • break
  105 case: case CASE literal COLON commands • break

    RETURN    shift, and go to state 70
    IF        shift, and go to state 71
    DO        shift, and go to state 72
    FOR       shift, and go to state 73
    SWITCH    shift, and go to state 74
    BREAK     shift, and go to state 75
    OUTPRINT  shift, and go to state 76
    IDENT     shift, and go to state 77

    assignment        go to state 78
    loop              go to state 79
    while             go to state 80
    for               go to state 81
    control           go to state 82
    if                go to state 83
    switch_statement  go to state 84
    print             go to state 85
    return            go to state 86
    break             go to state 245


State 238

   38 commands: commands • assignment
   39         | commands • loop
   40         | commands • control
   41         | commands • print
   42         | commands • return
   43         | commands • break
  107 default_opt: DEFAULT COLON variable_declaration_list commands •

    RETURN    shift, and go to state 70
    IF        shift, and go to state 71
    DO        shift, and go to state 72
    FOR       shift, and go to state 73
    SWITCH    shift, and go to state 74
    BREAK     shift, and go to state 75
    OUTPRINT  shift, and go to state 76
    IDENT     shift, and go to state 77

    $default  reduce using rule 107 (default_opt)

    assignment        go to state 78
    loop              go to state 79
    while             go to state 80
    for               go to state 81
    control           go to state 82
    if                go to state 83
    switch_statement  go to state 84
    print             go to state 85
    return            go to state 86
    break             go to state 87


State 239

   97 elseif: elseif ELSE IF LPAR • condition RPAR LCURLY variable_declaration_list commands RCURLY
   98       | elseif ELSE IF LPAR • condition RPAR LCURLY commands RCURLY

    INT     shift, and go to state 91
    CHAR    shift, and go to state 92
    BOOL    shift, and go to state 93
    STRING  shift, and go to state 94
    DOUBLE  shift, and go to state 95
    IDENT   shift, and go to state 96
    LPAR    shift, and go to state 97

    method_access       go to state 98
    literal             go to state 99
    expression          go to state 124
    suntheti_parastash  go to state 101
    addition            go to state 102
    multiplication      go to state 103
    division            go to state 104
    subtraction         go to state 105
    call_method         go to state 106
    condition           go to state 246


State 240

   13 variable_declaration_list: variable_declaration_list • variable_declaration
  100 else: ELSE LCURLY variable_declaration_list • commands RCURLY

    DATATYPE    shift, and go to state 10
    VOID        shift, and go to state 11
    PRIVATE     shift, and go to state 12
    PUBLIC      shift, and go to state 13
    CLASS_NAME  shift, and go to state 14

    $default  reduce using rule 37 (commands)

    variable_declaration  go to state 25
    return_type           go to state 18
    modifier              go to state 61
    commands              go to state 247


State 241

   38 commands: commands • assignment
   39         | commands • loop
   40         | commands • control
   41         | commands • print
   42         | commands • return
   43         | commands • break
  101 else: ELSE LCURLY commands • RCURLY

    RETURN    shift, and go to state 70
    IF        shift, and go to state 71
    DO        shift, and go to state 72
    FOR       shift, and go to state 73
    SWITCH    shift, and go to state 74
    BREAK     shift, and go to state 75
    OUTPRINT  shift, and go to state 76
    IDENT     shift, and go to state 77
    RCURLY    shift, and go to state 248

    assignment        go to state 78
    loop              go to state 79
    while             go to state 80
    for               go to state 81
    control           go to state 82
    if                go to state 83
    switch_statement  go to state 84
    print             go to state 85
    return            go to state 86
    break             go to state 87


State 242

   38 commands: commands • assignment
   39         | commands • loop
   40         | commands • control
   41         | commands • print
   42         | commands • return
   43         | commands • break
   83 for: FOR LPAR exp1 SEMICOLON exp2 SEMICOLON exp3 RPAR LCURLY variable_declaration_list commands • RCURLY

    RETURN    shift, and go to state 70
    IF        shift, and go to state 71
    DO        shift, and go to state 72
    FOR       shift, and go to state 73
    SWITCH    shift, and go to state 74
    BREAK     shift, and go to state 75
    OUTPRINT  shift, and go to state 76
    IDENT     shift, and go to state 77
    RCURLY    shift, and go to state 249

    assignment        go to state 78
    loop              go to state 79
    while             go to state 80
    for               go to state 81
    control           go to state 82
    if                go to state 83
    switch_statement  go to state 84
    print             go to state 85
    return            go to state 86
    break             go to state 87


State 243

   84 for: FOR LPAR exp1 SEMICOLON exp2 SEMICOLON exp3 RPAR LCURLY commands RCURLY •

    $default  reduce using rule 84 (for)


State 244

   38 commands: commands • assignment
   39         | commands • loop
   40         | commands • control
   41         | commands • print
   42         | commands • return
   43         | commands • break
  104 case: case CASE literal COLON variable_declaration_list commands • break

    RETURN    shift, and go to state 70
    IF        shift, and go to state 71
    DO        shift, and go to state 72
    FOR       shift, and go to state 73
    SWITCH    shift, and go to state 74
    BREAK     shift, and go to state 75
    OUTPRINT  shift, and go to state 76
    IDENT     shift, and go to state 77

    assignment        go to state 78
    loop              go to state 79
    while             go to state 80
    for               go to state 81
    control           go to state 82
    if                go to state 83
    switch_statement  go to state 84
    print             go to state 85
    return            go to state 86
    break             go to state 250


State 245

   43 commands: commands break •
  105 case: case CASE literal COLON commands break •

    CASE      reduce using rule 105 (case)
    DEFAULT   reduce using rule 105 (case)
    RCURLY    reduce using rule 105 (case)
    $default  reduce using rule 43 (commands)


State 246

   97 elseif: elseif ELSE IF LPAR condition • RPAR LCURLY variable_declaration_list commands RCURLY
   98       | elseif ELSE IF LPAR condition • RPAR LCURLY commands RCURLY

    RPAR  shift, and go to state 251


State 247

   38 commands: commands • assignment
   39         | commands • loop
   40         | commands • control
   41         | commands • print
   42         | commands • return
   43         | commands • break
  100 else: ELSE LCURLY variable_declaration_list commands • RCURLY

    RETURN    shift, and go to state 70
    IF        shift, and go to state 71
    DO        shift, and go to state 72
    FOR       shift, and go to state 73
    SWITCH    shift, and go to state 74
    BREAK     shift, and go to state 75
    OUTPRINT  shift, and go to state 76
    IDENT     shift, and go to state 77
    RCURLY    shift, and go to state 252

    assignment        go to state 78
    loop              go to state 79
    while             go to state 80
    for               go to state 81
    control           go to state 82
    if                go to state 83
    switch_statement  go to state 84
    print             go to state 85
    return            go to state 86
    break             go to state 87


State 248

  101 else: ELSE LCURLY commands RCURLY •

    $default  reduce using rule 101 (else)


State 249

   83 for: FOR LPAR exp1 SEMICOLON exp2 SEMICOLON exp3 RPAR LCURLY variable_declaration_list commands RCURLY •

    $default  reduce using rule 83 (for)


State 250

   43 commands: commands break •
  104 case: case CASE literal COLON variable_declaration_list commands break •

    CASE      reduce using rule 104 (case)
    DEFAULT   reduce using rule 104 (case)
    RCURLY    reduce using rule 104 (case)
    $default  reduce using rule 43 (commands)


State 251

   97 elseif: elseif ELSE IF LPAR condition RPAR • LCURLY variable_declaration_list commands RCURLY
   98       | elseif ELSE IF LPAR condition RPAR • LCURLY commands RCURLY

    LCURLY  shift, and go to state 253


State 252

  100 else: ELSE LCURLY variable_declaration_list commands RCURLY •

    $default  reduce using rule 100 (else)


State 253

   97 elseif: elseif ELSE IF LPAR condition RPAR LCURLY • variable_declaration_list commands RCURLY
   98       | elseif ELSE IF LPAR condition RPAR LCURLY • commands RCURLY

    DATATYPE    shift, and go to state 10
    VOID        shift, and go to state 11
    PRIVATE     shift, and go to state 12
    PUBLIC      shift, and go to state 13
    CLASS_NAME  shift, and go to state 14

    $default  reduce using rule 37 (commands)

    variable_declaration_list  go to state 254
    variable_declaration       go to state 17
    return_type                go to state 18
    modifier                   go to state 61
    commands                   go to state 255


State 254

   13 variable_declaration_list: variable_declaration_list • variable_declaration
   97 elseif: elseif ELSE IF LPAR condition RPAR LCURLY variable_declaration_list • commands RCURLY

    DATATYPE    shift, and go to state 10
    VOID        shift, and go to state 11
    PRIVATE     shift, and go to state 12
    PUBLIC      shift, and go to state 13
    CLASS_NAME  shift, and go to state 14

    $default  reduce using rule 37 (commands)

    variable_declaration  go to state 25
    return_type           go to state 18
    modifier              go to state 61
    commands              go to state 256


State 255

   38 commands: commands • assignment
   39         | commands • loop
   40         | commands • control
   41         | commands • print
   42         | commands • return
   43         | commands • break
   98 elseif: elseif ELSE IF LPAR condition RPAR LCURLY commands • RCURLY

    RETURN    shift, and go to state 70
    IF        shift, and go to state 71
    DO        shift, and go to state 72
    FOR       shift, and go to state 73
    SWITCH    shift, and go to state 74
    BREAK     shift, and go to state 75
    OUTPRINT  shift, and go to state 76
    IDENT     shift, and go to state 77
    RCURLY    shift, and go to state 257

    assignment        go to state 78
    loop              go to state 79
    while             go to state 80
    for               go to state 81
    control           go to state 82
    if                go to state 83
    switch_statement  go to state 84
    print             go to state 85
    return            go to state 86
    break             go to state 87


State 256

   38 commands: commands • assignment
   39         | commands • loop
   40         | commands • control
   41         | commands • print
   42         | commands • return
   43         | commands • break
   97 elseif: elseif ELSE IF LPAR condition RPAR LCURLY variable_declaration_list commands • RCURLY

    RETURN    shift, and go to state 70
    IF        shift, and go to state 71
    DO        shift, and go to state 72
    FOR       shift, and go to state 73
    SWITCH    shift, and go to state 74
    BREAK     shift, and go to state 75
    OUTPRINT  shift, and go to state 76
    IDENT     shift, and go to state 77
    RCURLY    shift, and go to state 258

    assignment        go to state 78
    loop              go to state 79
    while             go to state 80
    for               go to state 81
    control           go to state 82
    if                go to state 83
    switch_statement  go to state 84
    print             go to state 85
    return            go to state 86
    break             go to state 87


State 257

   98 elseif: elseif ELSE IF LPAR condition RPAR LCURLY commands RCURLY •

    $default  reduce using rule 98 (elseif)


State 258

   97 elseif: elseif ELSE IF LPAR condition RPAR LCURLY variable_declaration_list commands RCURLY •

    $default  reduce using rule 97 (elseif)

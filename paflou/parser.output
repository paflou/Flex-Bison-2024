Grammar

    0 $accept: program $end

    1 program: ε
    2        | program class

    3 class: PUBLIC CLASS CLASS_NAME LCURLY variable_declaration_list method_declaration RCURLY
    4      | PUBLIC CLASS CLASS_NAME LCURLY RCURLY
    5      | PUBLIC CLASS CLASS_NAME LCURLY variable_declaration_list RCURLY

    6 variable_declaration_list: variable_declaration
    7                          | variable_declaration_list variable_declaration

    8 type_or_return_type: DATATYPE
    9                    | CLASS_NAME
   10                    | VOID

   11 variable_declaration: modifier type_or_return_type IDENT SEMICOLON

   12 method_declaration: modifier secondary_modifier type_or_return_type IDENT LPAR parameter_list RPAR LCURLY method_body RCURLY
   13                   | modifier type_or_return_type IDENT LPAR parameter_list RPAR LCURLY method_body RCURLY

   14 modifier: PUBLIC
   15         | PRIVATE

   16 method_access: IDENT DOT IDENT

   17 secondary_modifier: STATIC
   18                   | ABSTRACT
   19                   | FINAL
   20                   | NATIVE
   21                   | SYNCHRONIZED

   22 parameter_list: ε
   23               | DATATYPE IDENT
   24               | parameter_list COMMA DATATYPE IDENT

   25 method_body: variable_declaration_list commands
   26            | commands

   27 commands: ε
   28         | commands assignment
   29         | commands loop
   30         | commands control
   31         | commands print
   32         | commands return
   33         | commands break

   34 assignment: IDENT EQUALS expression SEMICOLON
   35           | IDENT EQUALS object_creation SEMICOLON

   36 object_creation: NEW CLASS_NAME LPAR RPAR

   37 literal: INT
   38        | CHAR
   39        | STRING
   40        | BOOL
   41        | DOUBLE

   42 expression: literal
   43           | suntheti_parastash

   44 suntheti_parastash: addition
   45                   | IDENT
   46                   | multiplication
   47                   | division
   48                   | subtraction
   49                   | LPAR expression RPAR
   50                   | call_method
   51                   | method_access

   52 addition: expression PLUS expression

   53 multiplication: expression TIMES expression

   54 division: expression DIV expression

   55 subtraction: expression MINUS expression

   56 call_method: IDENT LPAR argument_list RPAR
   57            | IDENT LPAR RPAR

   58 argument_list: IDENT
   59              | argument_list COMMA literal
   60              | argument_list COMMA IDENT
   61              | literal

   62 loop: while
   63     | for

   64 while: DO LCURLY variable_declaration_list commands RCURLY WHILE LPAR condition RPAR SEMICOLON

   65 condition: expression conop expression
   66          | expression

   67 conop: RELOP
   68      | EQUOP
   69      | NOTOP
   70      | ANDOP
   71      | OROP

   72 for: FOR LPAR exp1 SEMICOLON exp2 SEMICOLON exp3 RPAR LCURLY variable_declaration_list commands RCURLY

   73 exp1: DATATYPE IDENT EQUALS literal
   74     | IDENT EQUALS literal

   75 exp2: IDENT conop literal

   76 exp3: IDENT PLUS expression
   77     | IDENT MINUS expression
   78     | IDENT DIV expression
   79     | IDENT TIMES expression

   80 control: if
   81        | switch_statement

   82 if: IF LPAR condition RPAR LCURLY variable_declaration_list commands RCURLY elseif else

   83 elseif: ε
   84       | elseif ELSE IF LPAR condition RPAR LCURLY variable_declaration_list commands RCURLY

   85 else: ε
   86     | ELSE LCURLY variable_declaration_list commands RCURLY

   87 switch_statement: SWITCH LPAR IDENT RPAR LCURLY case default_opt RCURLY

   88 case: ε
   89     | case CASE literal COLON LCURLY variable_declaration_list commands RCURLY

   90 default_opt: ε
   91            | DEFAULT COLON LCURLY variable_declaration_list commands RCURLY

   92 print: OUTPRINT LPAR STRING RPAR SEMICOLON
   93      | OUTPRINT LPAR STRING ident_list RPAR SEMICOLON

   94 ident_list: COMMA IDENT
   95           | ident_list COMMA IDENT

   96 return: RETURN expression SEMICOLON

   97 break: BREAK SEMICOLON


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    DATATYPE (258) 8 23 24 73
    NEW (259) 36
    RETURN (260) 96
    VOID (261) 10
    IF (262) 82 84
    ELSE (263) 84 86
    WHILE (264) 64
    DO (265) 64
    FOR (266) 72
    SWITCH (267) 87
    CASE (268) 89
    DEFAULT (269) 91
    BREAK (270) 97
    INT (271) 37
    CHAR (272) 38
    BOOL (273) 40
    STRING (274) 39 92 93
    DOUBLE (275) 41
    PRIVATE (276) 15
    PUBLIC (277) 3 4 5 14
    STATIC (278) 17
    ABSTRACT (279) 18
    FINAL (280) 19
    NATIVE (281) 20
    SYNCHRONIZED (282) 21
    OUTPRINT (283) 92 93
    OROP (284) 71
    ANDOP (285) 70
    EQUOP (286) 68
    NOTOP (287) 69
    RELOP (288) 67
    IDENT (289) 11 12 13 16 23 24 34 35 45 56 57 58 60 73 74 75 76 77 78 79 87 94 95
    LCURLY (290) 3 4 5 12 13 64 72 82 84 86 87 89 91
    RCURLY (291) 3 4 5 12 13 64 72 82 84 86 87 89 91
    CLASS (292) 3 4 5
    CLASS_NAME (293) 3 4 5 9 36
    LPAR (294) 12 13 36 49 56 57 64 72 82 84 87 92 93
    RPAR (295) 12 13 36 49 56 57 64 72 82 84 87 92 93
    COLON (296) 89 91
    DOT (297) 16
    SEMICOLON (298) 11 34 35 64 72 92 93 96 97
    EQUALS (299) 34 35 73 74
    PLUS (300) 52 76
    MINUS (301) 55 77
    DIV (302) 54 78
    TIMES (303) 53 79
    COMMA (304) 24 59 60 94 95


Nonterminals, with rules where they appear

    $accept (50)
        on left: 0
    program (51)
        on left: 1 2
        on right: 0 2
    class (52)
        on left: 3 4 5
        on right: 2
    variable_declaration_list (53)
        on left: 6 7
        on right: 3 5 7 25 64 72 82 84 86 89 91
    type_or_return_type (54)
        on left: 8 9 10
        on right: 11 12 13
    variable_declaration (55)
        on left: 11
        on right: 6 7
    method_declaration (56)
        on left: 12 13
        on right: 3
    modifier (57)
        on left: 14 15
        on right: 11 12 13
    method_access (58)
        on left: 16
        on right: 51
    secondary_modifier (59)
        on left: 17 18 19 20 21
        on right: 12
    parameter_list (60)
        on left: 22 23 24
        on right: 12 13 24
    method_body (61)
        on left: 25 26
        on right: 12 13
    commands (62)
        on left: 27 28 29 30 31 32 33
        on right: 25 26 28 29 30 31 32 33 64 72 82 84 86 89 91
    assignment (63)
        on left: 34 35
        on right: 28
    object_creation (64)
        on left: 36
        on right: 35
    literal (65)
        on left: 37 38 39 40 41
        on right: 42 59 61 73 74 75 89
    expression (66)
        on left: 42 43
        on right: 34 49 52 53 54 55 65 66 76 77 78 79 96
    suntheti_parastash (67)
        on left: 44 45 46 47 48 49 50 51
        on right: 43
    addition (68)
        on left: 52
        on right: 44
    multiplication (69)
        on left: 53
        on right: 46
    division (70)
        on left: 54
        on right: 47
    subtraction (71)
        on left: 55
        on right: 48
    call_method (72)
        on left: 56 57
        on right: 50
    argument_list (73)
        on left: 58 59 60 61
        on right: 56 59 60
    loop (74)
        on left: 62 63
        on right: 29
    while (75)
        on left: 64
        on right: 62
    condition (76)
        on left: 65 66
        on right: 64 82 84
    conop (77)
        on left: 67 68 69 70 71
        on right: 65 75
    for (78)
        on left: 72
        on right: 63
    exp1 (79)
        on left: 73 74
        on right: 72
    exp2 (80)
        on left: 75
        on right: 72
    exp3 (81)
        on left: 76 77 78 79
        on right: 72
    control (82)
        on left: 80 81
        on right: 30
    if (83)
        on left: 82
        on right: 80
    elseif (84)
        on left: 83 84
        on right: 82 84
    else (85)
        on left: 85 86
        on right: 82
    switch_statement (86)
        on left: 87
        on right: 81
    case (87)
        on left: 88 89
        on right: 87 89
    default_opt (88)
        on left: 90 91
        on right: 87
    print (89)
        on left: 92 93
        on right: 31
    ident_list (90)
        on left: 94 95
        on right: 93 95
    return (91)
        on left: 96
        on right: 32
    break (92)
        on left: 97
        on right: 33


State 0

    0 $accept: • program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


State 1

    0 $accept: program • $end
    2 program: program • class

    $end    shift, and go to state 2
    PUBLIC  shift, and go to state 3

    class  go to state 4


State 2

    0 $accept: program $end •

    $default  accept


State 3

    3 class: PUBLIC • CLASS CLASS_NAME LCURLY variable_declaration_list method_declaration RCURLY
    4      | PUBLIC • CLASS CLASS_NAME LCURLY RCURLY
    5      | PUBLIC • CLASS CLASS_NAME LCURLY variable_declaration_list RCURLY

    CLASS  shift, and go to state 5


State 4

    2 program: program class •

    $default  reduce using rule 2 (program)


State 5

    3 class: PUBLIC CLASS • CLASS_NAME LCURLY variable_declaration_list method_declaration RCURLY
    4      | PUBLIC CLASS • CLASS_NAME LCURLY RCURLY
    5      | PUBLIC CLASS • CLASS_NAME LCURLY variable_declaration_list RCURLY

    CLASS_NAME  shift, and go to state 6


State 6

    3 class: PUBLIC CLASS CLASS_NAME • LCURLY variable_declaration_list method_declaration RCURLY
    4      | PUBLIC CLASS CLASS_NAME • LCURLY RCURLY
    5      | PUBLIC CLASS CLASS_NAME • LCURLY variable_declaration_list RCURLY

    LCURLY  shift, and go to state 7


State 7

    3 class: PUBLIC CLASS CLASS_NAME LCURLY • variable_declaration_list method_declaration RCURLY
    4      | PUBLIC CLASS CLASS_NAME LCURLY • RCURLY
    5      | PUBLIC CLASS CLASS_NAME LCURLY • variable_declaration_list RCURLY

    PRIVATE  shift, and go to state 8
    PUBLIC   shift, and go to state 9
    RCURLY   shift, and go to state 10

    variable_declaration_list  go to state 11
    variable_declaration       go to state 12
    modifier                   go to state 13


State 8

   15 modifier: PRIVATE •

    $default  reduce using rule 15 (modifier)


State 9

   14 modifier: PUBLIC •

    $default  reduce using rule 14 (modifier)


State 10

    4 class: PUBLIC CLASS CLASS_NAME LCURLY RCURLY •

    $default  reduce using rule 4 (class)


State 11

    3 class: PUBLIC CLASS CLASS_NAME LCURLY variable_declaration_list • method_declaration RCURLY
    5      | PUBLIC CLASS CLASS_NAME LCURLY variable_declaration_list • RCURLY
    7 variable_declaration_list: variable_declaration_list • variable_declaration

    PRIVATE  shift, and go to state 8
    PUBLIC   shift, and go to state 9
    RCURLY   shift, and go to state 14

    variable_declaration  go to state 15
    method_declaration    go to state 16
    modifier              go to state 17


State 12

    6 variable_declaration_list: variable_declaration •

    $default  reduce using rule 6 (variable_declaration_list)


State 13

   11 variable_declaration: modifier • type_or_return_type IDENT SEMICOLON

    DATATYPE    shift, and go to state 18
    VOID        shift, and go to state 19
    CLASS_NAME  shift, and go to state 20

    type_or_return_type  go to state 21


State 14

    5 class: PUBLIC CLASS CLASS_NAME LCURLY variable_declaration_list RCURLY •

    $default  reduce using rule 5 (class)


State 15

    7 variable_declaration_list: variable_declaration_list variable_declaration •

    $default  reduce using rule 7 (variable_declaration_list)


State 16

    3 class: PUBLIC CLASS CLASS_NAME LCURLY variable_declaration_list method_declaration • RCURLY

    RCURLY  shift, and go to state 22


State 17

   11 variable_declaration: modifier • type_or_return_type IDENT SEMICOLON
   12 method_declaration: modifier • secondary_modifier type_or_return_type IDENT LPAR parameter_list RPAR LCURLY method_body RCURLY
   13                   | modifier • type_or_return_type IDENT LPAR parameter_list RPAR LCURLY method_body RCURLY

    DATATYPE      shift, and go to state 18
    VOID          shift, and go to state 19
    STATIC        shift, and go to state 23
    ABSTRACT      shift, and go to state 24
    FINAL         shift, and go to state 25
    NATIVE        shift, and go to state 26
    SYNCHRONIZED  shift, and go to state 27
    CLASS_NAME    shift, and go to state 20

    type_or_return_type  go to state 28
    secondary_modifier   go to state 29


State 18

    8 type_or_return_type: DATATYPE •

    $default  reduce using rule 8 (type_or_return_type)


State 19

   10 type_or_return_type: VOID •

    $default  reduce using rule 10 (type_or_return_type)


State 20

    9 type_or_return_type: CLASS_NAME •

    $default  reduce using rule 9 (type_or_return_type)


State 21

   11 variable_declaration: modifier type_or_return_type • IDENT SEMICOLON

    IDENT  shift, and go to state 30


State 22

    3 class: PUBLIC CLASS CLASS_NAME LCURLY variable_declaration_list method_declaration RCURLY •

    $default  reduce using rule 3 (class)


State 23

   17 secondary_modifier: STATIC •

    $default  reduce using rule 17 (secondary_modifier)


State 24

   18 secondary_modifier: ABSTRACT •

    $default  reduce using rule 18 (secondary_modifier)


State 25

   19 secondary_modifier: FINAL •

    $default  reduce using rule 19 (secondary_modifier)


State 26

   20 secondary_modifier: NATIVE •

    $default  reduce using rule 20 (secondary_modifier)


State 27

   21 secondary_modifier: SYNCHRONIZED •

    $default  reduce using rule 21 (secondary_modifier)


State 28

   11 variable_declaration: modifier type_or_return_type • IDENT SEMICOLON
   13 method_declaration: modifier type_or_return_type • IDENT LPAR parameter_list RPAR LCURLY method_body RCURLY

    IDENT  shift, and go to state 31


State 29

   12 method_declaration: modifier secondary_modifier • type_or_return_type IDENT LPAR parameter_list RPAR LCURLY method_body RCURLY

    DATATYPE    shift, and go to state 18
    VOID        shift, and go to state 19
    CLASS_NAME  shift, and go to state 20

    type_or_return_type  go to state 32


State 30

   11 variable_declaration: modifier type_or_return_type IDENT • SEMICOLON

    SEMICOLON  shift, and go to state 33


State 31

   11 variable_declaration: modifier type_or_return_type IDENT • SEMICOLON
   13 method_declaration: modifier type_or_return_type IDENT • LPAR parameter_list RPAR LCURLY method_body RCURLY

    LPAR       shift, and go to state 34
    SEMICOLON  shift, and go to state 33


State 32

   12 method_declaration: modifier secondary_modifier type_or_return_type • IDENT LPAR parameter_list RPAR LCURLY method_body RCURLY

    IDENT  shift, and go to state 35


State 33

   11 variable_declaration: modifier type_or_return_type IDENT SEMICOLON •

    $default  reduce using rule 11 (variable_declaration)


State 34

   13 method_declaration: modifier type_or_return_type IDENT LPAR • parameter_list RPAR LCURLY method_body RCURLY

    DATATYPE  shift, and go to state 36

    $default  reduce using rule 22 (parameter_list)

    parameter_list  go to state 37


State 35

   12 method_declaration: modifier secondary_modifier type_or_return_type IDENT • LPAR parameter_list RPAR LCURLY method_body RCURLY

    LPAR  shift, and go to state 38


State 36

   23 parameter_list: DATATYPE • IDENT

    IDENT  shift, and go to state 39


State 37

   13 method_declaration: modifier type_or_return_type IDENT LPAR parameter_list • RPAR LCURLY method_body RCURLY
   24 parameter_list: parameter_list • COMMA DATATYPE IDENT

    RPAR   shift, and go to state 40
    COMMA  shift, and go to state 41


State 38

   12 method_declaration: modifier secondary_modifier type_or_return_type IDENT LPAR • parameter_list RPAR LCURLY method_body RCURLY

    DATATYPE  shift, and go to state 36

    $default  reduce using rule 22 (parameter_list)

    parameter_list  go to state 42


State 39

   23 parameter_list: DATATYPE IDENT •

    $default  reduce using rule 23 (parameter_list)


State 40

   13 method_declaration: modifier type_or_return_type IDENT LPAR parameter_list RPAR • LCURLY method_body RCURLY

    LCURLY  shift, and go to state 43


State 41

   24 parameter_list: parameter_list COMMA • DATATYPE IDENT

    DATATYPE  shift, and go to state 44


State 42

   12 method_declaration: modifier secondary_modifier type_or_return_type IDENT LPAR parameter_list • RPAR LCURLY method_body RCURLY
   24 parameter_list: parameter_list • COMMA DATATYPE IDENT

    RPAR   shift, and go to state 45
    COMMA  shift, and go to state 41


State 43

   13 method_declaration: modifier type_or_return_type IDENT LPAR parameter_list RPAR LCURLY • method_body RCURLY

    PRIVATE  shift, and go to state 8
    PUBLIC   shift, and go to state 9

    $default  reduce using rule 27 (commands)

    variable_declaration_list  go to state 46
    variable_declaration       go to state 12
    modifier                   go to state 13
    method_body                go to state 47
    commands                   go to state 48


State 44

   24 parameter_list: parameter_list COMMA DATATYPE • IDENT

    IDENT  shift, and go to state 49


State 45

   12 method_declaration: modifier secondary_modifier type_or_return_type IDENT LPAR parameter_list RPAR • LCURLY method_body RCURLY

    LCURLY  shift, and go to state 50


State 46

    7 variable_declaration_list: variable_declaration_list • variable_declaration
   25 method_body: variable_declaration_list • commands

    PRIVATE  shift, and go to state 8
    PUBLIC   shift, and go to state 9

    $default  reduce using rule 27 (commands)

    variable_declaration  go to state 15
    modifier              go to state 13
    commands              go to state 51


State 47

   13 method_declaration: modifier type_or_return_type IDENT LPAR parameter_list RPAR LCURLY method_body • RCURLY

    RCURLY  shift, and go to state 52


State 48

   26 method_body: commands •
   28 commands: commands • assignment
   29         | commands • loop
   30         | commands • control
   31         | commands • print
   32         | commands • return
   33         | commands • break

    RETURN    shift, and go to state 53
    IF        shift, and go to state 54
    DO        shift, and go to state 55
    FOR       shift, and go to state 56
    SWITCH    shift, and go to state 57
    BREAK     shift, and go to state 58
    OUTPRINT  shift, and go to state 59
    IDENT     shift, and go to state 60

    $default  reduce using rule 26 (method_body)

    assignment        go to state 61
    loop              go to state 62
    while             go to state 63
    for               go to state 64
    control           go to state 65
    if                go to state 66
    switch_statement  go to state 67
    print             go to state 68
    return            go to state 69
    break             go to state 70


State 49

   24 parameter_list: parameter_list COMMA DATATYPE IDENT •

    $default  reduce using rule 24 (parameter_list)


State 50

   12 method_declaration: modifier secondary_modifier type_or_return_type IDENT LPAR parameter_list RPAR LCURLY • method_body RCURLY

    PRIVATE  shift, and go to state 8
    PUBLIC   shift, and go to state 9

    $default  reduce using rule 27 (commands)

    variable_declaration_list  go to state 46
    variable_declaration       go to state 12
    modifier                   go to state 13
    method_body                go to state 71
    commands                   go to state 48


State 51

   25 method_body: variable_declaration_list commands •
   28 commands: commands • assignment
   29         | commands • loop
   30         | commands • control
   31         | commands • print
   32         | commands • return
   33         | commands • break

    RETURN    shift, and go to state 53
    IF        shift, and go to state 54
    DO        shift, and go to state 55
    FOR       shift, and go to state 56
    SWITCH    shift, and go to state 57
    BREAK     shift, and go to state 58
    OUTPRINT  shift, and go to state 59
    IDENT     shift, and go to state 60

    $default  reduce using rule 25 (method_body)

    assignment        go to state 61
    loop              go to state 62
    while             go to state 63
    for               go to state 64
    control           go to state 65
    if                go to state 66
    switch_statement  go to state 67
    print             go to state 68
    return            go to state 69
    break             go to state 70


State 52

   13 method_declaration: modifier type_or_return_type IDENT LPAR parameter_list RPAR LCURLY method_body RCURLY •

    $default  reduce using rule 13 (method_declaration)


State 53

   96 return: RETURN • expression SEMICOLON

    INT     shift, and go to state 72
    CHAR    shift, and go to state 73
    BOOL    shift, and go to state 74
    STRING  shift, and go to state 75
    DOUBLE  shift, and go to state 76
    IDENT   shift, and go to state 77
    LPAR    shift, and go to state 78

    method_access       go to state 79
    literal             go to state 80
    expression          go to state 81
    suntheti_parastash  go to state 82
    addition            go to state 83
    multiplication      go to state 84
    division            go to state 85
    subtraction         go to state 86
    call_method         go to state 87


State 54

   82 if: IF • LPAR condition RPAR LCURLY variable_declaration_list commands RCURLY elseif else

    LPAR  shift, and go to state 88


State 55

   64 while: DO • LCURLY variable_declaration_list commands RCURLY WHILE LPAR condition RPAR SEMICOLON

    LCURLY  shift, and go to state 89


State 56

   72 for: FOR • LPAR exp1 SEMICOLON exp2 SEMICOLON exp3 RPAR LCURLY variable_declaration_list commands RCURLY

    LPAR  shift, and go to state 90


State 57

   87 switch_statement: SWITCH • LPAR IDENT RPAR LCURLY case default_opt RCURLY

    LPAR  shift, and go to state 91


State 58

   97 break: BREAK • SEMICOLON

    SEMICOLON  shift, and go to state 92


State 59

   92 print: OUTPRINT • LPAR STRING RPAR SEMICOLON
   93      | OUTPRINT • LPAR STRING ident_list RPAR SEMICOLON

    LPAR  shift, and go to state 93


State 60

   34 assignment: IDENT • EQUALS expression SEMICOLON
   35           | IDENT • EQUALS object_creation SEMICOLON

    EQUALS  shift, and go to state 94


State 61

   28 commands: commands assignment •

    $default  reduce using rule 28 (commands)


State 62

   29 commands: commands loop •

    $default  reduce using rule 29 (commands)


State 63

   62 loop: while •

    $default  reduce using rule 62 (loop)


State 64

   63 loop: for •

    $default  reduce using rule 63 (loop)


State 65

   30 commands: commands control •

    $default  reduce using rule 30 (commands)


State 66

   80 control: if •

    $default  reduce using rule 80 (control)


State 67

   81 control: switch_statement •

    $default  reduce using rule 81 (control)


State 68

   31 commands: commands print •

    $default  reduce using rule 31 (commands)


State 69

   32 commands: commands return •

    $default  reduce using rule 32 (commands)


State 70

   33 commands: commands break •

    $default  reduce using rule 33 (commands)


State 71

   12 method_declaration: modifier secondary_modifier type_or_return_type IDENT LPAR parameter_list RPAR LCURLY method_body • RCURLY

    RCURLY  shift, and go to state 95


State 72

   37 literal: INT •

    $default  reduce using rule 37 (literal)


State 73

   38 literal: CHAR •

    $default  reduce using rule 38 (literal)


State 74

   40 literal: BOOL •

    $default  reduce using rule 40 (literal)


State 75

   39 literal: STRING •

    $default  reduce using rule 39 (literal)


State 76

   41 literal: DOUBLE •

    $default  reduce using rule 41 (literal)


State 77

   16 method_access: IDENT • DOT IDENT
   45 suntheti_parastash: IDENT •
   56 call_method: IDENT • LPAR argument_list RPAR
   57            | IDENT • LPAR RPAR

    LPAR  shift, and go to state 96
    DOT   shift, and go to state 97

    $default  reduce using rule 45 (suntheti_parastash)


State 78

   49 suntheti_parastash: LPAR • expression RPAR

    INT     shift, and go to state 72
    CHAR    shift, and go to state 73
    BOOL    shift, and go to state 74
    STRING  shift, and go to state 75
    DOUBLE  shift, and go to state 76
    IDENT   shift, and go to state 77
    LPAR    shift, and go to state 78

    method_access       go to state 79
    literal             go to state 80
    expression          go to state 98
    suntheti_parastash  go to state 82
    addition            go to state 83
    multiplication      go to state 84
    division            go to state 85
    subtraction         go to state 86
    call_method         go to state 87


State 79

   51 suntheti_parastash: method_access •

    $default  reduce using rule 51 (suntheti_parastash)


State 80

   42 expression: literal •

    $default  reduce using rule 42 (expression)


State 81

   52 addition: expression • PLUS expression
   53 multiplication: expression • TIMES expression
   54 division: expression • DIV expression
   55 subtraction: expression • MINUS expression
   96 return: RETURN expression • SEMICOLON

    SEMICOLON  shift, and go to state 99
    PLUS       shift, and go to state 100
    MINUS      shift, and go to state 101
    DIV        shift, and go to state 102
    TIMES      shift, and go to state 103


State 82

   43 expression: suntheti_parastash •

    $default  reduce using rule 43 (expression)


State 83

   44 suntheti_parastash: addition •

    $default  reduce using rule 44 (suntheti_parastash)


State 84

   46 suntheti_parastash: multiplication •

    $default  reduce using rule 46 (suntheti_parastash)


State 85

   47 suntheti_parastash: division •

    $default  reduce using rule 47 (suntheti_parastash)


State 86

   48 suntheti_parastash: subtraction •

    $default  reduce using rule 48 (suntheti_parastash)


State 87

   50 suntheti_parastash: call_method •

    $default  reduce using rule 50 (suntheti_parastash)


State 88

   82 if: IF LPAR • condition RPAR LCURLY variable_declaration_list commands RCURLY elseif else

    INT     shift, and go to state 72
    CHAR    shift, and go to state 73
    BOOL    shift, and go to state 74
    STRING  shift, and go to state 75
    DOUBLE  shift, and go to state 76
    IDENT   shift, and go to state 77
    LPAR    shift, and go to state 78

    method_access       go to state 79
    literal             go to state 80
    expression          go to state 104
    suntheti_parastash  go to state 82
    addition            go to state 83
    multiplication      go to state 84
    division            go to state 85
    subtraction         go to state 86
    call_method         go to state 87
    condition           go to state 105


State 89

   64 while: DO LCURLY • variable_declaration_list commands RCURLY WHILE LPAR condition RPAR SEMICOLON

    PRIVATE  shift, and go to state 8
    PUBLIC   shift, and go to state 9

    variable_declaration_list  go to state 106
    variable_declaration       go to state 12
    modifier                   go to state 13


State 90

   72 for: FOR LPAR • exp1 SEMICOLON exp2 SEMICOLON exp3 RPAR LCURLY variable_declaration_list commands RCURLY

    DATATYPE  shift, and go to state 107
    IDENT     shift, and go to state 108

    exp1  go to state 109


State 91

   87 switch_statement: SWITCH LPAR • IDENT RPAR LCURLY case default_opt RCURLY

    IDENT  shift, and go to state 110


State 92

   97 break: BREAK SEMICOLON •

    $default  reduce using rule 97 (break)


State 93

   92 print: OUTPRINT LPAR • STRING RPAR SEMICOLON
   93      | OUTPRINT LPAR • STRING ident_list RPAR SEMICOLON

    STRING  shift, and go to state 111


State 94

   34 assignment: IDENT EQUALS • expression SEMICOLON
   35           | IDENT EQUALS • object_creation SEMICOLON

    NEW     shift, and go to state 112
    INT     shift, and go to state 72
    CHAR    shift, and go to state 73
    BOOL    shift, and go to state 74
    STRING  shift, and go to state 75
    DOUBLE  shift, and go to state 76
    IDENT   shift, and go to state 77
    LPAR    shift, and go to state 78

    method_access       go to state 79
    object_creation     go to state 113
    literal             go to state 80
    expression          go to state 114
    suntheti_parastash  go to state 82
    addition            go to state 83
    multiplication      go to state 84
    division            go to state 85
    subtraction         go to state 86
    call_method         go to state 87


State 95

   12 method_declaration: modifier secondary_modifier type_or_return_type IDENT LPAR parameter_list RPAR LCURLY method_body RCURLY •

    $default  reduce using rule 12 (method_declaration)


State 96

   56 call_method: IDENT LPAR • argument_list RPAR
   57            | IDENT LPAR • RPAR

    INT     shift, and go to state 72
    CHAR    shift, and go to state 73
    BOOL    shift, and go to state 74
    STRING  shift, and go to state 75
    DOUBLE  shift, and go to state 76
    IDENT   shift, and go to state 115
    RPAR    shift, and go to state 116

    literal        go to state 117
    argument_list  go to state 118


State 97

   16 method_access: IDENT DOT • IDENT

    IDENT  shift, and go to state 119


State 98

   49 suntheti_parastash: LPAR expression • RPAR
   52 addition: expression • PLUS expression
   53 multiplication: expression • TIMES expression
   54 division: expression • DIV expression
   55 subtraction: expression • MINUS expression

    RPAR   shift, and go to state 120
    PLUS   shift, and go to state 100
    MINUS  shift, and go to state 101
    DIV    shift, and go to state 102
    TIMES  shift, and go to state 103


State 99

   96 return: RETURN expression SEMICOLON •

    $default  reduce using rule 96 (return)


State 100

   52 addition: expression PLUS • expression

    INT     shift, and go to state 72
    CHAR    shift, and go to state 73
    BOOL    shift, and go to state 74
    STRING  shift, and go to state 75
    DOUBLE  shift, and go to state 76
    IDENT   shift, and go to state 77
    LPAR    shift, and go to state 78

    method_access       go to state 79
    literal             go to state 80
    expression          go to state 121
    suntheti_parastash  go to state 82
    addition            go to state 83
    multiplication      go to state 84
    division            go to state 85
    subtraction         go to state 86
    call_method         go to state 87


State 101

   55 subtraction: expression MINUS • expression

    INT     shift, and go to state 72
    CHAR    shift, and go to state 73
    BOOL    shift, and go to state 74
    STRING  shift, and go to state 75
    DOUBLE  shift, and go to state 76
    IDENT   shift, and go to state 77
    LPAR    shift, and go to state 78

    method_access       go to state 79
    literal             go to state 80
    expression          go to state 122
    suntheti_parastash  go to state 82
    addition            go to state 83
    multiplication      go to state 84
    division            go to state 85
    subtraction         go to state 86
    call_method         go to state 87


State 102

   54 division: expression DIV • expression

    INT     shift, and go to state 72
    CHAR    shift, and go to state 73
    BOOL    shift, and go to state 74
    STRING  shift, and go to state 75
    DOUBLE  shift, and go to state 76
    IDENT   shift, and go to state 77
    LPAR    shift, and go to state 78

    method_access       go to state 79
    literal             go to state 80
    expression          go to state 123
    suntheti_parastash  go to state 82
    addition            go to state 83
    multiplication      go to state 84
    division            go to state 85
    subtraction         go to state 86
    call_method         go to state 87


State 103

   53 multiplication: expression TIMES • expression

    INT     shift, and go to state 72
    CHAR    shift, and go to state 73
    BOOL    shift, and go to state 74
    STRING  shift, and go to state 75
    DOUBLE  shift, and go to state 76
    IDENT   shift, and go to state 77
    LPAR    shift, and go to state 78

    method_access       go to state 79
    literal             go to state 80
    expression          go to state 124
    suntheti_parastash  go to state 82
    addition            go to state 83
    multiplication      go to state 84
    division            go to state 85
    subtraction         go to state 86
    call_method         go to state 87


State 104

   52 addition: expression • PLUS expression
   53 multiplication: expression • TIMES expression
   54 division: expression • DIV expression
   55 subtraction: expression • MINUS expression
   65 condition: expression • conop expression
   66          | expression •

    OROP   shift, and go to state 125
    ANDOP  shift, and go to state 126
    EQUOP  shift, and go to state 127
    NOTOP  shift, and go to state 128
    RELOP  shift, and go to state 129
    PLUS   shift, and go to state 100
    MINUS  shift, and go to state 101
    DIV    shift, and go to state 102
    TIMES  shift, and go to state 103

    $default  reduce using rule 66 (condition)

    conop  go to state 130


State 105

   82 if: IF LPAR condition • RPAR LCURLY variable_declaration_list commands RCURLY elseif else

    RPAR  shift, and go to state 131


State 106

    7 variable_declaration_list: variable_declaration_list • variable_declaration
   64 while: DO LCURLY variable_declaration_list • commands RCURLY WHILE LPAR condition RPAR SEMICOLON

    PRIVATE  shift, and go to state 8
    PUBLIC   shift, and go to state 9

    $default  reduce using rule 27 (commands)

    variable_declaration  go to state 15
    modifier              go to state 13
    commands              go to state 132


State 107

   73 exp1: DATATYPE • IDENT EQUALS literal

    IDENT  shift, and go to state 133


State 108

   74 exp1: IDENT • EQUALS literal

    EQUALS  shift, and go to state 134


State 109

   72 for: FOR LPAR exp1 • SEMICOLON exp2 SEMICOLON exp3 RPAR LCURLY variable_declaration_list commands RCURLY

    SEMICOLON  shift, and go to state 135


State 110

   87 switch_statement: SWITCH LPAR IDENT • RPAR LCURLY case default_opt RCURLY

    RPAR  shift, and go to state 136


State 111

   92 print: OUTPRINT LPAR STRING • RPAR SEMICOLON
   93      | OUTPRINT LPAR STRING • ident_list RPAR SEMICOLON

    RPAR   shift, and go to state 137
    COMMA  shift, and go to state 138

    ident_list  go to state 139


State 112

   36 object_creation: NEW • CLASS_NAME LPAR RPAR

    CLASS_NAME  shift, and go to state 140


State 113

   35 assignment: IDENT EQUALS object_creation • SEMICOLON

    SEMICOLON  shift, and go to state 141


State 114

   34 assignment: IDENT EQUALS expression • SEMICOLON
   52 addition: expression • PLUS expression
   53 multiplication: expression • TIMES expression
   54 division: expression • DIV expression
   55 subtraction: expression • MINUS expression

    SEMICOLON  shift, and go to state 142
    PLUS       shift, and go to state 100
    MINUS      shift, and go to state 101
    DIV        shift, and go to state 102
    TIMES      shift, and go to state 103


State 115

   58 argument_list: IDENT •

    $default  reduce using rule 58 (argument_list)


State 116

   57 call_method: IDENT LPAR RPAR •

    $default  reduce using rule 57 (call_method)


State 117

   61 argument_list: literal •

    $default  reduce using rule 61 (argument_list)


State 118

   56 call_method: IDENT LPAR argument_list • RPAR
   59 argument_list: argument_list • COMMA literal
   60              | argument_list • COMMA IDENT

    RPAR   shift, and go to state 143
    COMMA  shift, and go to state 144


State 119

   16 method_access: IDENT DOT IDENT •

    $default  reduce using rule 16 (method_access)


State 120

   49 suntheti_parastash: LPAR expression RPAR •

    $default  reduce using rule 49 (suntheti_parastash)


State 121

   52 addition: expression • PLUS expression
   52         | expression PLUS expression •
   53 multiplication: expression • TIMES expression
   54 division: expression • DIV expression
   55 subtraction: expression • MINUS expression

    $default  reduce using rule 52 (addition)


State 122

   52 addition: expression • PLUS expression
   53 multiplication: expression • TIMES expression
   54 division: expression • DIV expression
   55 subtraction: expression • MINUS expression
   55            | expression MINUS expression •

    $default  reduce using rule 55 (subtraction)


State 123

   52 addition: expression • PLUS expression
   53 multiplication: expression • TIMES expression
   54 division: expression • DIV expression
   54         | expression DIV expression •
   55 subtraction: expression • MINUS expression

    $default  reduce using rule 54 (division)


State 124

   52 addition: expression • PLUS expression
   53 multiplication: expression • TIMES expression
   53               | expression TIMES expression •
   54 division: expression • DIV expression
   55 subtraction: expression • MINUS expression

    $default  reduce using rule 53 (multiplication)


State 125

   71 conop: OROP •

    $default  reduce using rule 71 (conop)


State 126

   70 conop: ANDOP •

    $default  reduce using rule 70 (conop)


State 127

   68 conop: EQUOP •

    $default  reduce using rule 68 (conop)


State 128

   69 conop: NOTOP •

    $default  reduce using rule 69 (conop)


State 129

   67 conop: RELOP •

    $default  reduce using rule 67 (conop)


State 130

   65 condition: expression conop • expression

    INT     shift, and go to state 72
    CHAR    shift, and go to state 73
    BOOL    shift, and go to state 74
    STRING  shift, and go to state 75
    DOUBLE  shift, and go to state 76
    IDENT   shift, and go to state 77
    LPAR    shift, and go to state 78

    method_access       go to state 79
    literal             go to state 80
    expression          go to state 145
    suntheti_parastash  go to state 82
    addition            go to state 83
    multiplication      go to state 84
    division            go to state 85
    subtraction         go to state 86
    call_method         go to state 87


State 131

   82 if: IF LPAR condition RPAR • LCURLY variable_declaration_list commands RCURLY elseif else

    LCURLY  shift, and go to state 146


State 132

   28 commands: commands • assignment
   29         | commands • loop
   30         | commands • control
   31         | commands • print
   32         | commands • return
   33         | commands • break
   64 while: DO LCURLY variable_declaration_list commands • RCURLY WHILE LPAR condition RPAR SEMICOLON

    RETURN    shift, and go to state 53
    IF        shift, and go to state 54
    DO        shift, and go to state 55
    FOR       shift, and go to state 56
    SWITCH    shift, and go to state 57
    BREAK     shift, and go to state 58
    OUTPRINT  shift, and go to state 59
    IDENT     shift, and go to state 60
    RCURLY    shift, and go to state 147

    assignment        go to state 61
    loop              go to state 62
    while             go to state 63
    for               go to state 64
    control           go to state 65
    if                go to state 66
    switch_statement  go to state 67
    print             go to state 68
    return            go to state 69
    break             go to state 70


State 133

   73 exp1: DATATYPE IDENT • EQUALS literal

    EQUALS  shift, and go to state 148


State 134

   74 exp1: IDENT EQUALS • literal

    INT     shift, and go to state 72
    CHAR    shift, and go to state 73
    BOOL    shift, and go to state 74
    STRING  shift, and go to state 75
    DOUBLE  shift, and go to state 76

    literal  go to state 149


State 135

   72 for: FOR LPAR exp1 SEMICOLON • exp2 SEMICOLON exp3 RPAR LCURLY variable_declaration_list commands RCURLY

    IDENT  shift, and go to state 150

    exp2  go to state 151


State 136

   87 switch_statement: SWITCH LPAR IDENT RPAR • LCURLY case default_opt RCURLY

    LCURLY  shift, and go to state 152


State 137

   92 print: OUTPRINT LPAR STRING RPAR • SEMICOLON

    SEMICOLON  shift, and go to state 153


State 138

   94 ident_list: COMMA • IDENT

    IDENT  shift, and go to state 154


State 139

   93 print: OUTPRINT LPAR STRING ident_list • RPAR SEMICOLON
   95 ident_list: ident_list • COMMA IDENT

    RPAR   shift, and go to state 155
    COMMA  shift, and go to state 156


State 140

   36 object_creation: NEW CLASS_NAME • LPAR RPAR

    LPAR  shift, and go to state 157


State 141

   35 assignment: IDENT EQUALS object_creation SEMICOLON •

    $default  reduce using rule 35 (assignment)


State 142

   34 assignment: IDENT EQUALS expression SEMICOLON •

    $default  reduce using rule 34 (assignment)


State 143

   56 call_method: IDENT LPAR argument_list RPAR •

    $default  reduce using rule 56 (call_method)


State 144

   59 argument_list: argument_list COMMA • literal
   60              | argument_list COMMA • IDENT

    INT     shift, and go to state 72
    CHAR    shift, and go to state 73
    BOOL    shift, and go to state 74
    STRING  shift, and go to state 75
    DOUBLE  shift, and go to state 76
    IDENT   shift, and go to state 158

    literal  go to state 159


State 145

   52 addition: expression • PLUS expression
   53 multiplication: expression • TIMES expression
   54 division: expression • DIV expression
   55 subtraction: expression • MINUS expression
   65 condition: expression conop expression •

    PLUS   shift, and go to state 100
    MINUS  shift, and go to state 101
    DIV    shift, and go to state 102
    TIMES  shift, and go to state 103

    $default  reduce using rule 65 (condition)


State 146

   82 if: IF LPAR condition RPAR LCURLY • variable_declaration_list commands RCURLY elseif else

    PRIVATE  shift, and go to state 8
    PUBLIC   shift, and go to state 9

    variable_declaration_list  go to state 160
    variable_declaration       go to state 12
    modifier                   go to state 13


State 147

   64 while: DO LCURLY variable_declaration_list commands RCURLY • WHILE LPAR condition RPAR SEMICOLON

    WHILE  shift, and go to state 161


State 148

   73 exp1: DATATYPE IDENT EQUALS • literal

    INT     shift, and go to state 72
    CHAR    shift, and go to state 73
    BOOL    shift, and go to state 74
    STRING  shift, and go to state 75
    DOUBLE  shift, and go to state 76

    literal  go to state 162


State 149

   74 exp1: IDENT EQUALS literal •

    $default  reduce using rule 74 (exp1)


State 150

   75 exp2: IDENT • conop literal

    OROP   shift, and go to state 125
    ANDOP  shift, and go to state 126
    EQUOP  shift, and go to state 127
    NOTOP  shift, and go to state 128
    RELOP  shift, and go to state 129

    conop  go to state 163


State 151

   72 for: FOR LPAR exp1 SEMICOLON exp2 • SEMICOLON exp3 RPAR LCURLY variable_declaration_list commands RCURLY

    SEMICOLON  shift, and go to state 164


State 152

   87 switch_statement: SWITCH LPAR IDENT RPAR LCURLY • case default_opt RCURLY

    $default  reduce using rule 88 (case)

    case  go to state 165


State 153

   92 print: OUTPRINT LPAR STRING RPAR SEMICOLON •

    $default  reduce using rule 92 (print)


State 154

   94 ident_list: COMMA IDENT •

    $default  reduce using rule 94 (ident_list)


State 155

   93 print: OUTPRINT LPAR STRING ident_list RPAR • SEMICOLON

    SEMICOLON  shift, and go to state 166


State 156

   95 ident_list: ident_list COMMA • IDENT

    IDENT  shift, and go to state 167


State 157

   36 object_creation: NEW CLASS_NAME LPAR • RPAR

    RPAR  shift, and go to state 168


State 158

   60 argument_list: argument_list COMMA IDENT •

    $default  reduce using rule 60 (argument_list)


State 159

   59 argument_list: argument_list COMMA literal •

    $default  reduce using rule 59 (argument_list)


State 160

    7 variable_declaration_list: variable_declaration_list • variable_declaration
   82 if: IF LPAR condition RPAR LCURLY variable_declaration_list • commands RCURLY elseif else

    PRIVATE  shift, and go to state 8
    PUBLIC   shift, and go to state 9

    $default  reduce using rule 27 (commands)

    variable_declaration  go to state 15
    modifier              go to state 13
    commands              go to state 169


State 161

   64 while: DO LCURLY variable_declaration_list commands RCURLY WHILE • LPAR condition RPAR SEMICOLON

    LPAR  shift, and go to state 170


State 162

   73 exp1: DATATYPE IDENT EQUALS literal •

    $default  reduce using rule 73 (exp1)


State 163

   75 exp2: IDENT conop • literal

    INT     shift, and go to state 72
    CHAR    shift, and go to state 73
    BOOL    shift, and go to state 74
    STRING  shift, and go to state 75
    DOUBLE  shift, and go to state 76

    literal  go to state 171


State 164

   72 for: FOR LPAR exp1 SEMICOLON exp2 SEMICOLON • exp3 RPAR LCURLY variable_declaration_list commands RCURLY

    IDENT  shift, and go to state 172

    exp3  go to state 173


State 165

   87 switch_statement: SWITCH LPAR IDENT RPAR LCURLY case • default_opt RCURLY
   89 case: case • CASE literal COLON LCURLY variable_declaration_list commands RCURLY

    CASE     shift, and go to state 174
    DEFAULT  shift, and go to state 175

    $default  reduce using rule 90 (default_opt)

    default_opt  go to state 176


State 166

   93 print: OUTPRINT LPAR STRING ident_list RPAR SEMICOLON •

    $default  reduce using rule 93 (print)


State 167

   95 ident_list: ident_list COMMA IDENT •

    $default  reduce using rule 95 (ident_list)


State 168

   36 object_creation: NEW CLASS_NAME LPAR RPAR •

    $default  reduce using rule 36 (object_creation)


State 169

   28 commands: commands • assignment
   29         | commands • loop
   30         | commands • control
   31         | commands • print
   32         | commands • return
   33         | commands • break
   82 if: IF LPAR condition RPAR LCURLY variable_declaration_list commands • RCURLY elseif else

    RETURN    shift, and go to state 53
    IF        shift, and go to state 54
    DO        shift, and go to state 55
    FOR       shift, and go to state 56
    SWITCH    shift, and go to state 57
    BREAK     shift, and go to state 58
    OUTPRINT  shift, and go to state 59
    IDENT     shift, and go to state 60
    RCURLY    shift, and go to state 177

    assignment        go to state 61
    loop              go to state 62
    while             go to state 63
    for               go to state 64
    control           go to state 65
    if                go to state 66
    switch_statement  go to state 67
    print             go to state 68
    return            go to state 69
    break             go to state 70


State 170

   64 while: DO LCURLY variable_declaration_list commands RCURLY WHILE LPAR • condition RPAR SEMICOLON

    INT     shift, and go to state 72
    CHAR    shift, and go to state 73
    BOOL    shift, and go to state 74
    STRING  shift, and go to state 75
    DOUBLE  shift, and go to state 76
    IDENT   shift, and go to state 77
    LPAR    shift, and go to state 78

    method_access       go to state 79
    literal             go to state 80
    expression          go to state 104
    suntheti_parastash  go to state 82
    addition            go to state 83
    multiplication      go to state 84
    division            go to state 85
    subtraction         go to state 86
    call_method         go to state 87
    condition           go to state 178


State 171

   75 exp2: IDENT conop literal •

    $default  reduce using rule 75 (exp2)


State 172

   76 exp3: IDENT • PLUS expression
   77     | IDENT • MINUS expression
   78     | IDENT • DIV expression
   79     | IDENT • TIMES expression

    PLUS   shift, and go to state 179
    MINUS  shift, and go to state 180
    DIV    shift, and go to state 181
    TIMES  shift, and go to state 182


State 173

   72 for: FOR LPAR exp1 SEMICOLON exp2 SEMICOLON exp3 • RPAR LCURLY variable_declaration_list commands RCURLY

    RPAR  shift, and go to state 183


State 174

   89 case: case CASE • literal COLON LCURLY variable_declaration_list commands RCURLY

    INT     shift, and go to state 72
    CHAR    shift, and go to state 73
    BOOL    shift, and go to state 74
    STRING  shift, and go to state 75
    DOUBLE  shift, and go to state 76

    literal  go to state 184


State 175

   91 default_opt: DEFAULT • COLON LCURLY variable_declaration_list commands RCURLY

    COLON  shift, and go to state 185


State 176

   87 switch_statement: SWITCH LPAR IDENT RPAR LCURLY case default_opt • RCURLY

    RCURLY  shift, and go to state 186


State 177

   82 if: IF LPAR condition RPAR LCURLY variable_declaration_list commands RCURLY • elseif else

    $default  reduce using rule 83 (elseif)

    elseif  go to state 187


State 178

   64 while: DO LCURLY variable_declaration_list commands RCURLY WHILE LPAR condition • RPAR SEMICOLON

    RPAR  shift, and go to state 188


State 179

   76 exp3: IDENT PLUS • expression

    INT     shift, and go to state 72
    CHAR    shift, and go to state 73
    BOOL    shift, and go to state 74
    STRING  shift, and go to state 75
    DOUBLE  shift, and go to state 76
    IDENT   shift, and go to state 77
    LPAR    shift, and go to state 78

    method_access       go to state 79
    literal             go to state 80
    expression          go to state 189
    suntheti_parastash  go to state 82
    addition            go to state 83
    multiplication      go to state 84
    division            go to state 85
    subtraction         go to state 86
    call_method         go to state 87


State 180

   77 exp3: IDENT MINUS • expression

    INT     shift, and go to state 72
    CHAR    shift, and go to state 73
    BOOL    shift, and go to state 74
    STRING  shift, and go to state 75
    DOUBLE  shift, and go to state 76
    IDENT   shift, and go to state 77
    LPAR    shift, and go to state 78

    method_access       go to state 79
    literal             go to state 80
    expression          go to state 190
    suntheti_parastash  go to state 82
    addition            go to state 83
    multiplication      go to state 84
    division            go to state 85
    subtraction         go to state 86
    call_method         go to state 87


State 181

   78 exp3: IDENT DIV • expression

    INT     shift, and go to state 72
    CHAR    shift, and go to state 73
    BOOL    shift, and go to state 74
    STRING  shift, and go to state 75
    DOUBLE  shift, and go to state 76
    IDENT   shift, and go to state 77
    LPAR    shift, and go to state 78

    method_access       go to state 79
    literal             go to state 80
    expression          go to state 191
    suntheti_parastash  go to state 82
    addition            go to state 83
    multiplication      go to state 84
    division            go to state 85
    subtraction         go to state 86
    call_method         go to state 87


State 182

   79 exp3: IDENT TIMES • expression

    INT     shift, and go to state 72
    CHAR    shift, and go to state 73
    BOOL    shift, and go to state 74
    STRING  shift, and go to state 75
    DOUBLE  shift, and go to state 76
    IDENT   shift, and go to state 77
    LPAR    shift, and go to state 78

    method_access       go to state 79
    literal             go to state 80
    expression          go to state 192
    suntheti_parastash  go to state 82
    addition            go to state 83
    multiplication      go to state 84
    division            go to state 85
    subtraction         go to state 86
    call_method         go to state 87


State 183

   72 for: FOR LPAR exp1 SEMICOLON exp2 SEMICOLON exp3 RPAR • LCURLY variable_declaration_list commands RCURLY

    LCURLY  shift, and go to state 193


State 184

   89 case: case CASE literal • COLON LCURLY variable_declaration_list commands RCURLY

    COLON  shift, and go to state 194


State 185

   91 default_opt: DEFAULT COLON • LCURLY variable_declaration_list commands RCURLY

    LCURLY  shift, and go to state 195


State 186

   87 switch_statement: SWITCH LPAR IDENT RPAR LCURLY case default_opt RCURLY •

    $default  reduce using rule 87 (switch_statement)


State 187

   82 if: IF LPAR condition RPAR LCURLY variable_declaration_list commands RCURLY elseif • else
   84 elseif: elseif • ELSE IF LPAR condition RPAR LCURLY variable_declaration_list commands RCURLY

    ELSE  shift, and go to state 196

    $default  reduce using rule 85 (else)

    else  go to state 197


State 188

   64 while: DO LCURLY variable_declaration_list commands RCURLY WHILE LPAR condition RPAR • SEMICOLON

    SEMICOLON  shift, and go to state 198


State 189

   52 addition: expression • PLUS expression
   53 multiplication: expression • TIMES expression
   54 division: expression • DIV expression
   55 subtraction: expression • MINUS expression
   76 exp3: IDENT PLUS expression •

    PLUS   shift, and go to state 100
    MINUS  shift, and go to state 101
    DIV    shift, and go to state 102
    TIMES  shift, and go to state 103

    $default  reduce using rule 76 (exp3)


State 190

   52 addition: expression • PLUS expression
   53 multiplication: expression • TIMES expression
   54 division: expression • DIV expression
   55 subtraction: expression • MINUS expression
   77 exp3: IDENT MINUS expression •

    PLUS   shift, and go to state 100
    MINUS  shift, and go to state 101
    DIV    shift, and go to state 102
    TIMES  shift, and go to state 103

    $default  reduce using rule 77 (exp3)


State 191

   52 addition: expression • PLUS expression
   53 multiplication: expression • TIMES expression
   54 division: expression • DIV expression
   55 subtraction: expression • MINUS expression
   78 exp3: IDENT DIV expression •

    PLUS   shift, and go to state 100
    MINUS  shift, and go to state 101
    DIV    shift, and go to state 102
    TIMES  shift, and go to state 103

    $default  reduce using rule 78 (exp3)


State 192

   52 addition: expression • PLUS expression
   53 multiplication: expression • TIMES expression
   54 division: expression • DIV expression
   55 subtraction: expression • MINUS expression
   79 exp3: IDENT TIMES expression •

    PLUS   shift, and go to state 100
    MINUS  shift, and go to state 101
    DIV    shift, and go to state 102
    TIMES  shift, and go to state 103

    $default  reduce using rule 79 (exp3)


State 193

   72 for: FOR LPAR exp1 SEMICOLON exp2 SEMICOLON exp3 RPAR LCURLY • variable_declaration_list commands RCURLY

    PRIVATE  shift, and go to state 8
    PUBLIC   shift, and go to state 9

    variable_declaration_list  go to state 199
    variable_declaration       go to state 12
    modifier                   go to state 13


State 194

   89 case: case CASE literal COLON • LCURLY variable_declaration_list commands RCURLY

    LCURLY  shift, and go to state 200


State 195

   91 default_opt: DEFAULT COLON LCURLY • variable_declaration_list commands RCURLY

    PRIVATE  shift, and go to state 8
    PUBLIC   shift, and go to state 9

    variable_declaration_list  go to state 201
    variable_declaration       go to state 12
    modifier                   go to state 13


State 196

   84 elseif: elseif ELSE • IF LPAR condition RPAR LCURLY variable_declaration_list commands RCURLY
   86 else: ELSE • LCURLY variable_declaration_list commands RCURLY

    IF      shift, and go to state 202
    LCURLY  shift, and go to state 203


State 197

   82 if: IF LPAR condition RPAR LCURLY variable_declaration_list commands RCURLY elseif else •

    $default  reduce using rule 82 (if)


State 198

   64 while: DO LCURLY variable_declaration_list commands RCURLY WHILE LPAR condition RPAR SEMICOLON •

    $default  reduce using rule 64 (while)


State 199

    7 variable_declaration_list: variable_declaration_list • variable_declaration
   72 for: FOR LPAR exp1 SEMICOLON exp2 SEMICOLON exp3 RPAR LCURLY variable_declaration_list • commands RCURLY

    PRIVATE  shift, and go to state 8
    PUBLIC   shift, and go to state 9

    $default  reduce using rule 27 (commands)

    variable_declaration  go to state 15
    modifier              go to state 13
    commands              go to state 204


State 200

   89 case: case CASE literal COLON LCURLY • variable_declaration_list commands RCURLY

    PRIVATE  shift, and go to state 8
    PUBLIC   shift, and go to state 9

    variable_declaration_list  go to state 205
    variable_declaration       go to state 12
    modifier                   go to state 13


State 201

    7 variable_declaration_list: variable_declaration_list • variable_declaration
   91 default_opt: DEFAULT COLON LCURLY variable_declaration_list • commands RCURLY

    PRIVATE  shift, and go to state 8
    PUBLIC   shift, and go to state 9

    $default  reduce using rule 27 (commands)

    variable_declaration  go to state 15
    modifier              go to state 13
    commands              go to state 206


State 202

   84 elseif: elseif ELSE IF • LPAR condition RPAR LCURLY variable_declaration_list commands RCURLY

    LPAR  shift, and go to state 207


State 203

   86 else: ELSE LCURLY • variable_declaration_list commands RCURLY

    PRIVATE  shift, and go to state 8
    PUBLIC   shift, and go to state 9

    variable_declaration_list  go to state 208
    variable_declaration       go to state 12
    modifier                   go to state 13


State 204

   28 commands: commands • assignment
   29         | commands • loop
   30         | commands • control
   31         | commands • print
   32         | commands • return
   33         | commands • break
   72 for: FOR LPAR exp1 SEMICOLON exp2 SEMICOLON exp3 RPAR LCURLY variable_declaration_list commands • RCURLY

    RETURN    shift, and go to state 53
    IF        shift, and go to state 54
    DO        shift, and go to state 55
    FOR       shift, and go to state 56
    SWITCH    shift, and go to state 57
    BREAK     shift, and go to state 58
    OUTPRINT  shift, and go to state 59
    IDENT     shift, and go to state 60
    RCURLY    shift, and go to state 209

    assignment        go to state 61
    loop              go to state 62
    while             go to state 63
    for               go to state 64
    control           go to state 65
    if                go to state 66
    switch_statement  go to state 67
    print             go to state 68
    return            go to state 69
    break             go to state 70


State 205

    7 variable_declaration_list: variable_declaration_list • variable_declaration
   89 case: case CASE literal COLON LCURLY variable_declaration_list • commands RCURLY

    PRIVATE  shift, and go to state 8
    PUBLIC   shift, and go to state 9

    $default  reduce using rule 27 (commands)

    variable_declaration  go to state 15
    modifier              go to state 13
    commands              go to state 210


State 206

   28 commands: commands • assignment
   29         | commands • loop
   30         | commands • control
   31         | commands • print
   32         | commands • return
   33         | commands • break
   91 default_opt: DEFAULT COLON LCURLY variable_declaration_list commands • RCURLY

    RETURN    shift, and go to state 53
    IF        shift, and go to state 54
    DO        shift, and go to state 55
    FOR       shift, and go to state 56
    SWITCH    shift, and go to state 57
    BREAK     shift, and go to state 58
    OUTPRINT  shift, and go to state 59
    IDENT     shift, and go to state 60
    RCURLY    shift, and go to state 211

    assignment        go to state 61
    loop              go to state 62
    while             go to state 63
    for               go to state 64
    control           go to state 65
    if                go to state 66
    switch_statement  go to state 67
    print             go to state 68
    return            go to state 69
    break             go to state 70


State 207

   84 elseif: elseif ELSE IF LPAR • condition RPAR LCURLY variable_declaration_list commands RCURLY

    INT     shift, and go to state 72
    CHAR    shift, and go to state 73
    BOOL    shift, and go to state 74
    STRING  shift, and go to state 75
    DOUBLE  shift, and go to state 76
    IDENT   shift, and go to state 77
    LPAR    shift, and go to state 78

    method_access       go to state 79
    literal             go to state 80
    expression          go to state 104
    suntheti_parastash  go to state 82
    addition            go to state 83
    multiplication      go to state 84
    division            go to state 85
    subtraction         go to state 86
    call_method         go to state 87
    condition           go to state 212


State 208

    7 variable_declaration_list: variable_declaration_list • variable_declaration
   86 else: ELSE LCURLY variable_declaration_list • commands RCURLY

    PRIVATE  shift, and go to state 8
    PUBLIC   shift, and go to state 9

    $default  reduce using rule 27 (commands)

    variable_declaration  go to state 15
    modifier              go to state 13
    commands              go to state 213


State 209

   72 for: FOR LPAR exp1 SEMICOLON exp2 SEMICOLON exp3 RPAR LCURLY variable_declaration_list commands RCURLY •

    $default  reduce using rule 72 (for)


State 210

   28 commands: commands • assignment
   29         | commands • loop
   30         | commands • control
   31         | commands • print
   32         | commands • return
   33         | commands • break
   89 case: case CASE literal COLON LCURLY variable_declaration_list commands • RCURLY

    RETURN    shift, and go to state 53
    IF        shift, and go to state 54
    DO        shift, and go to state 55
    FOR       shift, and go to state 56
    SWITCH    shift, and go to state 57
    BREAK     shift, and go to state 58
    OUTPRINT  shift, and go to state 59
    IDENT     shift, and go to state 60
    RCURLY    shift, and go to state 214

    assignment        go to state 61
    loop              go to state 62
    while             go to state 63
    for               go to state 64
    control           go to state 65
    if                go to state 66
    switch_statement  go to state 67
    print             go to state 68
    return            go to state 69
    break             go to state 70


State 211

   91 default_opt: DEFAULT COLON LCURLY variable_declaration_list commands RCURLY •

    $default  reduce using rule 91 (default_opt)


State 212

   84 elseif: elseif ELSE IF LPAR condition • RPAR LCURLY variable_declaration_list commands RCURLY

    RPAR  shift, and go to state 215


State 213

   28 commands: commands • assignment
   29         | commands • loop
   30         | commands • control
   31         | commands • print
   32         | commands • return
   33         | commands • break
   86 else: ELSE LCURLY variable_declaration_list commands • RCURLY

    RETURN    shift, and go to state 53
    IF        shift, and go to state 54
    DO        shift, and go to state 55
    FOR       shift, and go to state 56
    SWITCH    shift, and go to state 57
    BREAK     shift, and go to state 58
    OUTPRINT  shift, and go to state 59
    IDENT     shift, and go to state 60
    RCURLY    shift, and go to state 216

    assignment        go to state 61
    loop              go to state 62
    while             go to state 63
    for               go to state 64
    control           go to state 65
    if                go to state 66
    switch_statement  go to state 67
    print             go to state 68
    return            go to state 69
    break             go to state 70


State 214

   89 case: case CASE literal COLON LCURLY variable_declaration_list commands RCURLY •

    $default  reduce using rule 89 (case)


State 215

   84 elseif: elseif ELSE IF LPAR condition RPAR • LCURLY variable_declaration_list commands RCURLY

    LCURLY  shift, and go to state 217


State 216

   86 else: ELSE LCURLY variable_declaration_list commands RCURLY •

    $default  reduce using rule 86 (else)


State 217

   84 elseif: elseif ELSE IF LPAR condition RPAR LCURLY • variable_declaration_list commands RCURLY

    PRIVATE  shift, and go to state 8
    PUBLIC   shift, and go to state 9

    variable_declaration_list  go to state 218
    variable_declaration       go to state 12
    modifier                   go to state 13


State 218

    7 variable_declaration_list: variable_declaration_list • variable_declaration
   84 elseif: elseif ELSE IF LPAR condition RPAR LCURLY variable_declaration_list • commands RCURLY

    PRIVATE  shift, and go to state 8
    PUBLIC   shift, and go to state 9

    $default  reduce using rule 27 (commands)

    variable_declaration  go to state 15
    modifier              go to state 13
    commands              go to state 219


State 219

   28 commands: commands • assignment
   29         | commands • loop
   30         | commands • control
   31         | commands • print
   32         | commands • return
   33         | commands • break
   84 elseif: elseif ELSE IF LPAR condition RPAR LCURLY variable_declaration_list commands • RCURLY

    RETURN    shift, and go to state 53
    IF        shift, and go to state 54
    DO        shift, and go to state 55
    FOR       shift, and go to state 56
    SWITCH    shift, and go to state 57
    BREAK     shift, and go to state 58
    OUTPRINT  shift, and go to state 59
    IDENT     shift, and go to state 60
    RCURLY    shift, and go to state 220

    assignment        go to state 61
    loop              go to state 62
    while             go to state 63
    for               go to state 64
    control           go to state 65
    if                go to state 66
    switch_statement  go to state 67
    print             go to state 68
    return            go to state 69
    break             go to state 70


State 220

   84 elseif: elseif ELSE IF LPAR condition RPAR LCURLY variable_declaration_list commands RCURLY •

    $default  reduce using rule 84 (elseif)

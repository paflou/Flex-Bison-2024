Terminals unused in grammar

    TRUE
    FALSE


State 26 conflicts: 1 shift/reduce
State 33 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: ε
    2        | program class

    3 class: PUBLIC CLASS CLASS_NAME LCURLY variable_declaration_list method_declaration RCURLY
    4      | PUBLIC CLASS CLASS_NAME LCURLY RCURLY
    5      | PUBLIC CLASS CLASS_NAME LCURLY variable_declaration_list RCURLY

    6 variable_declaration_list: variable_declaration
    7                          | variable_declaration_list variable_declaration

    8 variable_declaration: DATATYPE IDENT SEMICOLON
    9                     | modifier DATATYPE IDENT SEMICOLON
   10                     | CLASS_NAME IDENT SEMICOLON
   11                     | modifier CLASS_NAME IDENT SEMICOLON

   12 modifier: PUBLIC
   13         | PRIVATE

   14 method_access: IDENT DOT IDENT

   15 method_declaration: modifier secondary_modifier return_type IDENT LPAR parameter_list RPAR LCURLY method_body RCURLY
   16                   | modifier return_type IDENT LPAR parameter_list RPAR LCURLY method_body RCURLY

   17 return_type: ε
   18            | DATATYPE
   19            | CLASS_NAME
   20            | VOID

   21 secondary_modifier: STATIC
   22                   | ABSTRACT
   23                   | FINAL
   24                   | NATIVE
   25                   | SYNCHRONIZED

   26 parameter_list: ε
   27               | DATATYPE IDENT
   28               | parameter_list COMMA DATATYPE IDENT

   29 method_body: variable_declaration_list commands
   30            | commands

   31 commands: ε
   32         | commands assignment
   33         | commands loop
   34         | commands control
   35         | commands print
   36         | commands return
   37         | commands break

   38 assignment: IDENT EQUALS expression SEMICOLON
   39           | IDENT EQUALS object_creation SEMICOLON

   40 object_creation: NEW CLASS_NAME LPAR RPAR

   41 literal: INT
   42        | CHAR
   43        | STRING
   44        | BOOL
   45        | DOUBLE

   46 expression: literal
   47           | suntheti_parastash

   48 suntheti_parastash: addition
   49                   | IDENT
   50                   | multiplication
   51                   | division
   52                   | subtraction
   53                   | LPAR expression RPAR
   54                   | call_method
   55                   | method_access

   56 addition: expression PLUS expression

   57 multiplication: expression TIMES expression

   58 division: expression DIV expression

   59 subtraction: expression MINUS expression

   60 call_method: IDENT LPAR arguement_list RPAR
   61            | IDENT LPAR RPAR

   62 arguement_list: IDENT
   63               | arguement_list COMMA literal
   64               | arguement_list COMMA IDENT
   65               | literal

   66 loop: while
   67     | for

   68 while: DO LCURLY variable_declaration_list commands RCURLY WHILE LPAR condition RPAR SEMICOLON

   69 condition: expression conop expression
   70          | expression

   71 conop: RELOP
   72      | EQUOP
   73      | NOTOP
   74      | ANDOP
   75      | OROP

   76 for: FOR LPAR exp1 SEMICOLON exp2 SEMICOLON exp3 RPAR LCURLY variable_declaration_list commands RCURLY

   77 exp1: DATATYPE IDENT EQUALS literal
   78     | IDENT EQUALS literal

   79 exp2: IDENT conop literal

   80 exp3: IDENT PLUS expression
   81     | IDENT MINUS expression
   82     | IDENT DIV expression
   83     | IDENT TIMES expression

   84 control: if
   85        | switch_statement

   86 if: IF LPAR condition RPAR LCURLY variable_declaration_list commands RCURLY elseif else

   87 elseif: ε
   88       | elseif ELSE IF LPAR condition RPAR LCURLY variable_declaration_list commands RCURLY

   89 else: ε
   90     | ELSE LCURLY variable_declaration_list commands RCURLY

   91 switch_statement: SWITCH LPAR IDENT RPAR LCURLY case default_opt RCURLY

   92 case: ε
   93     | case CASE literal COLON LCURLY variable_declaration_list commands RCURLY

   94 default_opt: ε
   95            | DEFAULT COLON LCURLY variable_declaration_list commands RCURLY

   96 print: OUTPRINT LPAR STRING RPAR SEMICOLON
   97      | OUTPRINT LPAR STRING ident_list RPAR SEMICOLON

   98 ident_list: COMMA IDENT
   99           | ident_list COMMA IDENT

  100 return: RETURN expression SEMICOLON

  101 break: BREAK SEMICOLON


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    DATATYPE (258) 8 9 18 27 28 77
    NEW (259) 40
    RETURN (260) 100
    VOID (261) 20
    IF (262) 86 88
    ELSE (263) 88 90
    WHILE (264) 68
    DO (265) 68
    FOR (266) 76
    SWITCH (267) 91
    CASE (268) 93
    DEFAULT (269) 95
    BREAK (270) 101
    TRUE (271)
    FALSE (272)
    INT (273) 41
    CHAR (274) 42
    BOOL (275) 44
    STRING (276) 43 96 97
    DOUBLE (277) 45
    PRIVATE (278) 13
    PUBLIC (279) 3 4 5 12
    STATIC (280) 21
    ABSTRACT (281) 22
    FINAL (282) 23
    NATIVE (283) 24
    SYNCHRONIZED (284) 25
    OUTPRINT (285) 96 97
    OROP (286) 75
    ANDOP (287) 74
    EQUOP (288) 72
    NOTOP (289) 73
    RELOP (290) 71
    IDENT (291) 8 9 10 11 14 15 16 27 28 38 39 49 60 61 62 64 77 78 79 80 81 82 83 91 98 99
    LCURLY (292) 3 4 5 15 16 68 76 86 88 90 91 93 95
    RCURLY (293) 3 4 5 15 16 68 76 86 88 90 91 93 95
    CLASS (294) 3 4 5
    CLASS_NAME (295) 3 4 5 10 11 19 40
    LPAR (296) 15 16 40 53 60 61 68 76 86 88 91 96 97
    RPAR (297) 15 16 40 53 60 61 68 76 86 88 91 96 97
    COLON (298) 93 95
    DOT (299) 14
    SEMICOLON (300) 8 9 10 11 38 39 68 76 96 97 100 101
    EQUALS (301) 38 39 77 78
    PLUS (302) 56 80
    MINUS (303) 59 81
    DIV (304) 58 82
    TIMES (305) 57 83
    COMMA (306) 28 63 64 98 99


Nonterminals, with rules where they appear

    $accept (52)
        on left: 0
    program (53)
        on left: 1 2
        on right: 0 2
    class (54)
        on left: 3 4 5
        on right: 2
    variable_declaration_list (55)
        on left: 6 7
        on right: 3 5 7 29 68 76 86 88 90 93 95
    variable_declaration (56)
        on left: 8 9 10 11
        on right: 6 7
    modifier (57)
        on left: 12 13
        on right: 9 11 15 16
    method_access (58)
        on left: 14
        on right: 55
    method_declaration (59)
        on left: 15 16
        on right: 3
    return_type (60)
        on left: 17 18 19 20
        on right: 15 16
    secondary_modifier (61)
        on left: 21 22 23 24 25
        on right: 15
    parameter_list (62)
        on left: 26 27 28
        on right: 15 16 28
    method_body (63)
        on left: 29 30
        on right: 15 16
    commands (64)
        on left: 31 32 33 34 35 36 37
        on right: 29 30 32 33 34 35 36 37 68 76 86 88 90 93 95
    assignment (65)
        on left: 38 39
        on right: 32
    object_creation (66)
        on left: 40
        on right: 39
    literal (67)
        on left: 41 42 43 44 45
        on right: 46 63 65 77 78 79 93
    expression (68)
        on left: 46 47
        on right: 38 53 56 57 58 59 69 70 80 81 82 83 100
    suntheti_parastash (69)
        on left: 48 49 50 51 52 53 54 55
        on right: 47
    addition (70)
        on left: 56
        on right: 48
    multiplication (71)
        on left: 57
        on right: 50
    division (72)
        on left: 58
        on right: 51
    subtraction (73)
        on left: 59
        on right: 52
    call_method (74)
        on left: 60 61
        on right: 54
    arguement_list (75)
        on left: 62 63 64 65
        on right: 60 63 64
    loop (76)
        on left: 66 67
        on right: 33
    while (77)
        on left: 68
        on right: 66
    condition (78)
        on left: 69 70
        on right: 68 86 88
    conop (79)
        on left: 71 72 73 74 75
        on right: 69 79
    for (80)
        on left: 76
        on right: 67
    exp1 (81)
        on left: 77 78
        on right: 76
    exp2 (82)
        on left: 79
        on right: 76
    exp3 (83)
        on left: 80 81 82 83
        on right: 76
    control (84)
        on left: 84 85
        on right: 34
    if (85)
        on left: 86
        on right: 84
    elseif (86)
        on left: 87 88
        on right: 86 88
    else (87)
        on left: 89 90
        on right: 86
    switch_statement (88)
        on left: 91
        on right: 85
    case (89)
        on left: 92 93
        on right: 91 93
    default_opt (90)
        on left: 94 95
        on right: 91
    print (91)
        on left: 96 97
        on right: 35
    ident_list (92)
        on left: 98 99
        on right: 97 99
    return (93)
        on left: 100
        on right: 36
    break (94)
        on left: 101
        on right: 37


State 0

    0 $accept: • program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


State 1

    0 $accept: program • $end
    2 program: program • class

    $end    shift, and go to state 2
    PUBLIC  shift, and go to state 3

    class  go to state 4


State 2

    0 $accept: program $end •

    $default  accept


State 3

    3 class: PUBLIC • CLASS CLASS_NAME LCURLY variable_declaration_list method_declaration RCURLY
    4      | PUBLIC • CLASS CLASS_NAME LCURLY RCURLY
    5      | PUBLIC • CLASS CLASS_NAME LCURLY variable_declaration_list RCURLY

    CLASS  shift, and go to state 5


State 4

    2 program: program class •

    $default  reduce using rule 2 (program)


State 5

    3 class: PUBLIC CLASS • CLASS_NAME LCURLY variable_declaration_list method_declaration RCURLY
    4      | PUBLIC CLASS • CLASS_NAME LCURLY RCURLY
    5      | PUBLIC CLASS • CLASS_NAME LCURLY variable_declaration_list RCURLY

    CLASS_NAME  shift, and go to state 6


State 6

    3 class: PUBLIC CLASS CLASS_NAME • LCURLY variable_declaration_list method_declaration RCURLY
    4      | PUBLIC CLASS CLASS_NAME • LCURLY RCURLY
    5      | PUBLIC CLASS CLASS_NAME • LCURLY variable_declaration_list RCURLY

    LCURLY  shift, and go to state 7


State 7

    3 class: PUBLIC CLASS CLASS_NAME LCURLY • variable_declaration_list method_declaration RCURLY
    4      | PUBLIC CLASS CLASS_NAME LCURLY • RCURLY
    5      | PUBLIC CLASS CLASS_NAME LCURLY • variable_declaration_list RCURLY

    DATATYPE    shift, and go to state 8
    PRIVATE     shift, and go to state 9
    PUBLIC      shift, and go to state 10
    RCURLY      shift, and go to state 11
    CLASS_NAME  shift, and go to state 12

    variable_declaration_list  go to state 13
    variable_declaration       go to state 14
    modifier                   go to state 15


State 8

    8 variable_declaration: DATATYPE • IDENT SEMICOLON

    IDENT  shift, and go to state 16


State 9

   13 modifier: PRIVATE •

    $default  reduce using rule 13 (modifier)


State 10

   12 modifier: PUBLIC •

    $default  reduce using rule 12 (modifier)


State 11

    4 class: PUBLIC CLASS CLASS_NAME LCURLY RCURLY •

    $default  reduce using rule 4 (class)


State 12

   10 variable_declaration: CLASS_NAME • IDENT SEMICOLON

    IDENT  shift, and go to state 17


State 13

    3 class: PUBLIC CLASS CLASS_NAME LCURLY variable_declaration_list • method_declaration RCURLY
    5      | PUBLIC CLASS CLASS_NAME LCURLY variable_declaration_list • RCURLY
    7 variable_declaration_list: variable_declaration_list • variable_declaration

    DATATYPE    shift, and go to state 8
    PRIVATE     shift, and go to state 9
    PUBLIC      shift, and go to state 10
    RCURLY      shift, and go to state 18
    CLASS_NAME  shift, and go to state 12

    variable_declaration  go to state 19
    modifier              go to state 20
    method_declaration    go to state 21


State 14

    6 variable_declaration_list: variable_declaration •

    $default  reduce using rule 6 (variable_declaration_list)


State 15

    9 variable_declaration: modifier • DATATYPE IDENT SEMICOLON
   11                     | modifier • CLASS_NAME IDENT SEMICOLON

    DATATYPE    shift, and go to state 22
    CLASS_NAME  shift, and go to state 23


State 16

    8 variable_declaration: DATATYPE IDENT • SEMICOLON

    SEMICOLON  shift, and go to state 24


State 17

   10 variable_declaration: CLASS_NAME IDENT • SEMICOLON

    SEMICOLON  shift, and go to state 25


State 18

    5 class: PUBLIC CLASS CLASS_NAME LCURLY variable_declaration_list RCURLY •

    $default  reduce using rule 5 (class)


State 19

    7 variable_declaration_list: variable_declaration_list variable_declaration •

    $default  reduce using rule 7 (variable_declaration_list)


State 20

    9 variable_declaration: modifier • DATATYPE IDENT SEMICOLON
   11                     | modifier • CLASS_NAME IDENT SEMICOLON
   15 method_declaration: modifier • secondary_modifier return_type IDENT LPAR parameter_list RPAR LCURLY method_body RCURLY
   16                   | modifier • return_type IDENT LPAR parameter_list RPAR LCURLY method_body RCURLY

    DATATYPE      shift, and go to state 26
    VOID          shift, and go to state 27
    STATIC        shift, and go to state 28
    ABSTRACT      shift, and go to state 29
    FINAL         shift, and go to state 30
    NATIVE        shift, and go to state 31
    SYNCHRONIZED  shift, and go to state 32
    CLASS_NAME    shift, and go to state 33

    $default  reduce using rule 17 (return_type)

    return_type         go to state 34
    secondary_modifier  go to state 35


State 21

    3 class: PUBLIC CLASS CLASS_NAME LCURLY variable_declaration_list method_declaration • RCURLY

    RCURLY  shift, and go to state 36


State 22

    9 variable_declaration: modifier DATATYPE • IDENT SEMICOLON

    IDENT  shift, and go to state 37


State 23

   11 variable_declaration: modifier CLASS_NAME • IDENT SEMICOLON

    IDENT  shift, and go to state 38


State 24

    8 variable_declaration: DATATYPE IDENT SEMICOLON •

    $default  reduce using rule 8 (variable_declaration)


State 25

   10 variable_declaration: CLASS_NAME IDENT SEMICOLON •

    $default  reduce using rule 10 (variable_declaration)


State 26

    9 variable_declaration: modifier DATATYPE • IDENT SEMICOLON
   18 return_type: DATATYPE •

    IDENT  shift, and go to state 37

    IDENT  [reduce using rule 18 (return_type)]


State 27

   20 return_type: VOID •

    $default  reduce using rule 20 (return_type)


State 28

   21 secondary_modifier: STATIC •

    $default  reduce using rule 21 (secondary_modifier)


State 29

   22 secondary_modifier: ABSTRACT •

    $default  reduce using rule 22 (secondary_modifier)


State 30

   23 secondary_modifier: FINAL •

    $default  reduce using rule 23 (secondary_modifier)


State 31

   24 secondary_modifier: NATIVE •

    $default  reduce using rule 24 (secondary_modifier)


State 32

   25 secondary_modifier: SYNCHRONIZED •

    $default  reduce using rule 25 (secondary_modifier)


State 33

   11 variable_declaration: modifier CLASS_NAME • IDENT SEMICOLON
   19 return_type: CLASS_NAME •

    IDENT  shift, and go to state 38

    IDENT  [reduce using rule 19 (return_type)]


State 34

   16 method_declaration: modifier return_type • IDENT LPAR parameter_list RPAR LCURLY method_body RCURLY

    IDENT  shift, and go to state 39


State 35

   15 method_declaration: modifier secondary_modifier • return_type IDENT LPAR parameter_list RPAR LCURLY method_body RCURLY

    DATATYPE    shift, and go to state 40
    VOID        shift, and go to state 27
    CLASS_NAME  shift, and go to state 41

    $default  reduce using rule 17 (return_type)

    return_type  go to state 42


State 36

    3 class: PUBLIC CLASS CLASS_NAME LCURLY variable_declaration_list method_declaration RCURLY •

    $default  reduce using rule 3 (class)


State 37

    9 variable_declaration: modifier DATATYPE IDENT • SEMICOLON

    SEMICOLON  shift, and go to state 43


State 38

   11 variable_declaration: modifier CLASS_NAME IDENT • SEMICOLON

    SEMICOLON  shift, and go to state 44


State 39

   16 method_declaration: modifier return_type IDENT • LPAR parameter_list RPAR LCURLY method_body RCURLY

    LPAR  shift, and go to state 45


State 40

   18 return_type: DATATYPE •

    $default  reduce using rule 18 (return_type)


State 41

   19 return_type: CLASS_NAME •

    $default  reduce using rule 19 (return_type)


State 42

   15 method_declaration: modifier secondary_modifier return_type • IDENT LPAR parameter_list RPAR LCURLY method_body RCURLY

    IDENT  shift, and go to state 46


State 43

    9 variable_declaration: modifier DATATYPE IDENT SEMICOLON •

    $default  reduce using rule 9 (variable_declaration)


State 44

   11 variable_declaration: modifier CLASS_NAME IDENT SEMICOLON •

    $default  reduce using rule 11 (variable_declaration)


State 45

   16 method_declaration: modifier return_type IDENT LPAR • parameter_list RPAR LCURLY method_body RCURLY

    DATATYPE  shift, and go to state 47

    $default  reduce using rule 26 (parameter_list)

    parameter_list  go to state 48


State 46

   15 method_declaration: modifier secondary_modifier return_type IDENT • LPAR parameter_list RPAR LCURLY method_body RCURLY

    LPAR  shift, and go to state 49


State 47

   27 parameter_list: DATATYPE • IDENT

    IDENT  shift, and go to state 50


State 48

   16 method_declaration: modifier return_type IDENT LPAR parameter_list • RPAR LCURLY method_body RCURLY
   28 parameter_list: parameter_list • COMMA DATATYPE IDENT

    RPAR   shift, and go to state 51
    COMMA  shift, and go to state 52


State 49

   15 method_declaration: modifier secondary_modifier return_type IDENT LPAR • parameter_list RPAR LCURLY method_body RCURLY

    DATATYPE  shift, and go to state 47

    $default  reduce using rule 26 (parameter_list)

    parameter_list  go to state 53


State 50

   27 parameter_list: DATATYPE IDENT •

    $default  reduce using rule 27 (parameter_list)


State 51

   16 method_declaration: modifier return_type IDENT LPAR parameter_list RPAR • LCURLY method_body RCURLY

    LCURLY  shift, and go to state 54


State 52

   28 parameter_list: parameter_list COMMA • DATATYPE IDENT

    DATATYPE  shift, and go to state 55


State 53

   15 method_declaration: modifier secondary_modifier return_type IDENT LPAR parameter_list • RPAR LCURLY method_body RCURLY
   28 parameter_list: parameter_list • COMMA DATATYPE IDENT

    RPAR   shift, and go to state 56
    COMMA  shift, and go to state 52


State 54

   16 method_declaration: modifier return_type IDENT LPAR parameter_list RPAR LCURLY • method_body RCURLY

    DATATYPE    shift, and go to state 8
    PRIVATE     shift, and go to state 9
    PUBLIC      shift, and go to state 10
    CLASS_NAME  shift, and go to state 12

    $default  reduce using rule 31 (commands)

    variable_declaration_list  go to state 57
    variable_declaration       go to state 14
    modifier                   go to state 15
    method_body                go to state 58
    commands                   go to state 59


State 55

   28 parameter_list: parameter_list COMMA DATATYPE • IDENT

    IDENT  shift, and go to state 60


State 56

   15 method_declaration: modifier secondary_modifier return_type IDENT LPAR parameter_list RPAR • LCURLY method_body RCURLY

    LCURLY  shift, and go to state 61


State 57

    7 variable_declaration_list: variable_declaration_list • variable_declaration
   29 method_body: variable_declaration_list • commands

    DATATYPE    shift, and go to state 8
    PRIVATE     shift, and go to state 9
    PUBLIC      shift, and go to state 10
    CLASS_NAME  shift, and go to state 12

    $default  reduce using rule 31 (commands)

    variable_declaration  go to state 19
    modifier              go to state 15
    commands              go to state 62


State 58

   16 method_declaration: modifier return_type IDENT LPAR parameter_list RPAR LCURLY method_body • RCURLY

    RCURLY  shift, and go to state 63


State 59

   30 method_body: commands •
   32 commands: commands • assignment
   33         | commands • loop
   34         | commands • control
   35         | commands • print
   36         | commands • return
   37         | commands • break

    RETURN    shift, and go to state 64
    IF        shift, and go to state 65
    DO        shift, and go to state 66
    FOR       shift, and go to state 67
    SWITCH    shift, and go to state 68
    BREAK     shift, and go to state 69
    OUTPRINT  shift, and go to state 70
    IDENT     shift, and go to state 71

    $default  reduce using rule 30 (method_body)

    assignment        go to state 72
    loop              go to state 73
    while             go to state 74
    for               go to state 75
    control           go to state 76
    if                go to state 77
    switch_statement  go to state 78
    print             go to state 79
    return            go to state 80
    break             go to state 81


State 60

   28 parameter_list: parameter_list COMMA DATATYPE IDENT •

    $default  reduce using rule 28 (parameter_list)


State 61

   15 method_declaration: modifier secondary_modifier return_type IDENT LPAR parameter_list RPAR LCURLY • method_body RCURLY

    DATATYPE    shift, and go to state 8
    PRIVATE     shift, and go to state 9
    PUBLIC      shift, and go to state 10
    CLASS_NAME  shift, and go to state 12

    $default  reduce using rule 31 (commands)

    variable_declaration_list  go to state 57
    variable_declaration       go to state 14
    modifier                   go to state 15
    method_body                go to state 82
    commands                   go to state 59


State 62

   29 method_body: variable_declaration_list commands •
   32 commands: commands • assignment
   33         | commands • loop
   34         | commands • control
   35         | commands • print
   36         | commands • return
   37         | commands • break

    RETURN    shift, and go to state 64
    IF        shift, and go to state 65
    DO        shift, and go to state 66
    FOR       shift, and go to state 67
    SWITCH    shift, and go to state 68
    BREAK     shift, and go to state 69
    OUTPRINT  shift, and go to state 70
    IDENT     shift, and go to state 71

    $default  reduce using rule 29 (method_body)

    assignment        go to state 72
    loop              go to state 73
    while             go to state 74
    for               go to state 75
    control           go to state 76
    if                go to state 77
    switch_statement  go to state 78
    print             go to state 79
    return            go to state 80
    break             go to state 81


State 63

   16 method_declaration: modifier return_type IDENT LPAR parameter_list RPAR LCURLY method_body RCURLY •

    $default  reduce using rule 16 (method_declaration)


State 64

  100 return: RETURN • expression SEMICOLON

    INT     shift, and go to state 83
    CHAR    shift, and go to state 84
    BOOL    shift, and go to state 85
    STRING  shift, and go to state 86
    DOUBLE  shift, and go to state 87
    IDENT   shift, and go to state 88
    LPAR    shift, and go to state 89

    method_access       go to state 90
    literal             go to state 91
    expression          go to state 92
    suntheti_parastash  go to state 93
    addition            go to state 94
    multiplication      go to state 95
    division            go to state 96
    subtraction         go to state 97
    call_method         go to state 98


State 65

   86 if: IF • LPAR condition RPAR LCURLY variable_declaration_list commands RCURLY elseif else

    LPAR  shift, and go to state 99


State 66

   68 while: DO • LCURLY variable_declaration_list commands RCURLY WHILE LPAR condition RPAR SEMICOLON

    LCURLY  shift, and go to state 100


State 67

   76 for: FOR • LPAR exp1 SEMICOLON exp2 SEMICOLON exp3 RPAR LCURLY variable_declaration_list commands RCURLY

    LPAR  shift, and go to state 101


State 68

   91 switch_statement: SWITCH • LPAR IDENT RPAR LCURLY case default_opt RCURLY

    LPAR  shift, and go to state 102


State 69

  101 break: BREAK • SEMICOLON

    SEMICOLON  shift, and go to state 103


State 70

   96 print: OUTPRINT • LPAR STRING RPAR SEMICOLON
   97      | OUTPRINT • LPAR STRING ident_list RPAR SEMICOLON

    LPAR  shift, and go to state 104


State 71

   38 assignment: IDENT • EQUALS expression SEMICOLON
   39           | IDENT • EQUALS object_creation SEMICOLON

    EQUALS  shift, and go to state 105


State 72

   32 commands: commands assignment •

    $default  reduce using rule 32 (commands)


State 73

   33 commands: commands loop •

    $default  reduce using rule 33 (commands)


State 74

   66 loop: while •

    $default  reduce using rule 66 (loop)


State 75

   67 loop: for •

    $default  reduce using rule 67 (loop)


State 76

   34 commands: commands control •

    $default  reduce using rule 34 (commands)


State 77

   84 control: if •

    $default  reduce using rule 84 (control)


State 78

   85 control: switch_statement •

    $default  reduce using rule 85 (control)


State 79

   35 commands: commands print •

    $default  reduce using rule 35 (commands)


State 80

   36 commands: commands return •

    $default  reduce using rule 36 (commands)


State 81

   37 commands: commands break •

    $default  reduce using rule 37 (commands)


State 82

   15 method_declaration: modifier secondary_modifier return_type IDENT LPAR parameter_list RPAR LCURLY method_body • RCURLY

    RCURLY  shift, and go to state 106


State 83

   41 literal: INT •

    $default  reduce using rule 41 (literal)


State 84

   42 literal: CHAR •

    $default  reduce using rule 42 (literal)


State 85

   44 literal: BOOL •

    $default  reduce using rule 44 (literal)


State 86

   43 literal: STRING •

    $default  reduce using rule 43 (literal)


State 87

   45 literal: DOUBLE •

    $default  reduce using rule 45 (literal)


State 88

   14 method_access: IDENT • DOT IDENT
   49 suntheti_parastash: IDENT •
   60 call_method: IDENT • LPAR arguement_list RPAR
   61            | IDENT • LPAR RPAR

    LPAR  shift, and go to state 107
    DOT   shift, and go to state 108

    $default  reduce using rule 49 (suntheti_parastash)


State 89

   53 suntheti_parastash: LPAR • expression RPAR

    INT     shift, and go to state 83
    CHAR    shift, and go to state 84
    BOOL    shift, and go to state 85
    STRING  shift, and go to state 86
    DOUBLE  shift, and go to state 87
    IDENT   shift, and go to state 88
    LPAR    shift, and go to state 89

    method_access       go to state 90
    literal             go to state 91
    expression          go to state 109
    suntheti_parastash  go to state 93
    addition            go to state 94
    multiplication      go to state 95
    division            go to state 96
    subtraction         go to state 97
    call_method         go to state 98


State 90

   55 suntheti_parastash: method_access •

    $default  reduce using rule 55 (suntheti_parastash)


State 91

   46 expression: literal •

    $default  reduce using rule 46 (expression)


State 92

   56 addition: expression • PLUS expression
   57 multiplication: expression • TIMES expression
   58 division: expression • DIV expression
   59 subtraction: expression • MINUS expression
  100 return: RETURN expression • SEMICOLON

    SEMICOLON  shift, and go to state 110
    PLUS       shift, and go to state 111
    MINUS      shift, and go to state 112
    DIV        shift, and go to state 113
    TIMES      shift, and go to state 114


State 93

   47 expression: suntheti_parastash •

    $default  reduce using rule 47 (expression)


State 94

   48 suntheti_parastash: addition •

    $default  reduce using rule 48 (suntheti_parastash)


State 95

   50 suntheti_parastash: multiplication •

    $default  reduce using rule 50 (suntheti_parastash)


State 96

   51 suntheti_parastash: division •

    $default  reduce using rule 51 (suntheti_parastash)


State 97

   52 suntheti_parastash: subtraction •

    $default  reduce using rule 52 (suntheti_parastash)


State 98

   54 suntheti_parastash: call_method •

    $default  reduce using rule 54 (suntheti_parastash)


State 99

   86 if: IF LPAR • condition RPAR LCURLY variable_declaration_list commands RCURLY elseif else

    INT     shift, and go to state 83
    CHAR    shift, and go to state 84
    BOOL    shift, and go to state 85
    STRING  shift, and go to state 86
    DOUBLE  shift, and go to state 87
    IDENT   shift, and go to state 88
    LPAR    shift, and go to state 89

    method_access       go to state 90
    literal             go to state 91
    expression          go to state 115
    suntheti_parastash  go to state 93
    addition            go to state 94
    multiplication      go to state 95
    division            go to state 96
    subtraction         go to state 97
    call_method         go to state 98
    condition           go to state 116


State 100

   68 while: DO LCURLY • variable_declaration_list commands RCURLY WHILE LPAR condition RPAR SEMICOLON

    DATATYPE    shift, and go to state 8
    PRIVATE     shift, and go to state 9
    PUBLIC      shift, and go to state 10
    CLASS_NAME  shift, and go to state 12

    variable_declaration_list  go to state 117
    variable_declaration       go to state 14
    modifier                   go to state 15


State 101

   76 for: FOR LPAR • exp1 SEMICOLON exp2 SEMICOLON exp3 RPAR LCURLY variable_declaration_list commands RCURLY

    DATATYPE  shift, and go to state 118
    IDENT     shift, and go to state 119

    exp1  go to state 120


State 102

   91 switch_statement: SWITCH LPAR • IDENT RPAR LCURLY case default_opt RCURLY

    IDENT  shift, and go to state 121


State 103

  101 break: BREAK SEMICOLON •

    $default  reduce using rule 101 (break)


State 104

   96 print: OUTPRINT LPAR • STRING RPAR SEMICOLON
   97      | OUTPRINT LPAR • STRING ident_list RPAR SEMICOLON

    STRING  shift, and go to state 122


State 105

   38 assignment: IDENT EQUALS • expression SEMICOLON
   39           | IDENT EQUALS • object_creation SEMICOLON

    NEW     shift, and go to state 123
    INT     shift, and go to state 83
    CHAR    shift, and go to state 84
    BOOL    shift, and go to state 85
    STRING  shift, and go to state 86
    DOUBLE  shift, and go to state 87
    IDENT   shift, and go to state 88
    LPAR    shift, and go to state 89

    method_access       go to state 90
    object_creation     go to state 124
    literal             go to state 91
    expression          go to state 125
    suntheti_parastash  go to state 93
    addition            go to state 94
    multiplication      go to state 95
    division            go to state 96
    subtraction         go to state 97
    call_method         go to state 98


State 106

   15 method_declaration: modifier secondary_modifier return_type IDENT LPAR parameter_list RPAR LCURLY method_body RCURLY •

    $default  reduce using rule 15 (method_declaration)


State 107

   60 call_method: IDENT LPAR • arguement_list RPAR
   61            | IDENT LPAR • RPAR

    INT     shift, and go to state 83
    CHAR    shift, and go to state 84
    BOOL    shift, and go to state 85
    STRING  shift, and go to state 86
    DOUBLE  shift, and go to state 87
    IDENT   shift, and go to state 126
    RPAR    shift, and go to state 127

    literal         go to state 128
    arguement_list  go to state 129


State 108

   14 method_access: IDENT DOT • IDENT

    IDENT  shift, and go to state 130


State 109

   53 suntheti_parastash: LPAR expression • RPAR
   56 addition: expression • PLUS expression
   57 multiplication: expression • TIMES expression
   58 division: expression • DIV expression
   59 subtraction: expression • MINUS expression

    RPAR   shift, and go to state 131
    PLUS   shift, and go to state 111
    MINUS  shift, and go to state 112
    DIV    shift, and go to state 113
    TIMES  shift, and go to state 114


State 110

  100 return: RETURN expression SEMICOLON •

    $default  reduce using rule 100 (return)


State 111

   56 addition: expression PLUS • expression

    INT     shift, and go to state 83
    CHAR    shift, and go to state 84
    BOOL    shift, and go to state 85
    STRING  shift, and go to state 86
    DOUBLE  shift, and go to state 87
    IDENT   shift, and go to state 88
    LPAR    shift, and go to state 89

    method_access       go to state 90
    literal             go to state 91
    expression          go to state 132
    suntheti_parastash  go to state 93
    addition            go to state 94
    multiplication      go to state 95
    division            go to state 96
    subtraction         go to state 97
    call_method         go to state 98


State 112

   59 subtraction: expression MINUS • expression

    INT     shift, and go to state 83
    CHAR    shift, and go to state 84
    BOOL    shift, and go to state 85
    STRING  shift, and go to state 86
    DOUBLE  shift, and go to state 87
    IDENT   shift, and go to state 88
    LPAR    shift, and go to state 89

    method_access       go to state 90
    literal             go to state 91
    expression          go to state 133
    suntheti_parastash  go to state 93
    addition            go to state 94
    multiplication      go to state 95
    division            go to state 96
    subtraction         go to state 97
    call_method         go to state 98


State 113

   58 division: expression DIV • expression

    INT     shift, and go to state 83
    CHAR    shift, and go to state 84
    BOOL    shift, and go to state 85
    STRING  shift, and go to state 86
    DOUBLE  shift, and go to state 87
    IDENT   shift, and go to state 88
    LPAR    shift, and go to state 89

    method_access       go to state 90
    literal             go to state 91
    expression          go to state 134
    suntheti_parastash  go to state 93
    addition            go to state 94
    multiplication      go to state 95
    division            go to state 96
    subtraction         go to state 97
    call_method         go to state 98


State 114

   57 multiplication: expression TIMES • expression

    INT     shift, and go to state 83
    CHAR    shift, and go to state 84
    BOOL    shift, and go to state 85
    STRING  shift, and go to state 86
    DOUBLE  shift, and go to state 87
    IDENT   shift, and go to state 88
    LPAR    shift, and go to state 89

    method_access       go to state 90
    literal             go to state 91
    expression          go to state 135
    suntheti_parastash  go to state 93
    addition            go to state 94
    multiplication      go to state 95
    division            go to state 96
    subtraction         go to state 97
    call_method         go to state 98


State 115

   56 addition: expression • PLUS expression
   57 multiplication: expression • TIMES expression
   58 division: expression • DIV expression
   59 subtraction: expression • MINUS expression
   69 condition: expression • conop expression
   70          | expression •

    OROP   shift, and go to state 136
    ANDOP  shift, and go to state 137
    EQUOP  shift, and go to state 138
    NOTOP  shift, and go to state 139
    RELOP  shift, and go to state 140
    PLUS   shift, and go to state 111
    MINUS  shift, and go to state 112
    DIV    shift, and go to state 113
    TIMES  shift, and go to state 114

    $default  reduce using rule 70 (condition)

    conop  go to state 141


State 116

   86 if: IF LPAR condition • RPAR LCURLY variable_declaration_list commands RCURLY elseif else

    RPAR  shift, and go to state 142


State 117

    7 variable_declaration_list: variable_declaration_list • variable_declaration
   68 while: DO LCURLY variable_declaration_list • commands RCURLY WHILE LPAR condition RPAR SEMICOLON

    DATATYPE    shift, and go to state 8
    PRIVATE     shift, and go to state 9
    PUBLIC      shift, and go to state 10
    CLASS_NAME  shift, and go to state 12

    $default  reduce using rule 31 (commands)

    variable_declaration  go to state 19
    modifier              go to state 15
    commands              go to state 143


State 118

   77 exp1: DATATYPE • IDENT EQUALS literal

    IDENT  shift, and go to state 144


State 119

   78 exp1: IDENT • EQUALS literal

    EQUALS  shift, and go to state 145


State 120

   76 for: FOR LPAR exp1 • SEMICOLON exp2 SEMICOLON exp3 RPAR LCURLY variable_declaration_list commands RCURLY

    SEMICOLON  shift, and go to state 146


State 121

   91 switch_statement: SWITCH LPAR IDENT • RPAR LCURLY case default_opt RCURLY

    RPAR  shift, and go to state 147


State 122

   96 print: OUTPRINT LPAR STRING • RPAR SEMICOLON
   97      | OUTPRINT LPAR STRING • ident_list RPAR SEMICOLON

    RPAR   shift, and go to state 148
    COMMA  shift, and go to state 149

    ident_list  go to state 150


State 123

   40 object_creation: NEW • CLASS_NAME LPAR RPAR

    CLASS_NAME  shift, and go to state 151


State 124

   39 assignment: IDENT EQUALS object_creation • SEMICOLON

    SEMICOLON  shift, and go to state 152


State 125

   38 assignment: IDENT EQUALS expression • SEMICOLON
   56 addition: expression • PLUS expression
   57 multiplication: expression • TIMES expression
   58 division: expression • DIV expression
   59 subtraction: expression • MINUS expression

    SEMICOLON  shift, and go to state 153
    PLUS       shift, and go to state 111
    MINUS      shift, and go to state 112
    DIV        shift, and go to state 113
    TIMES      shift, and go to state 114


State 126

   62 arguement_list: IDENT •

    $default  reduce using rule 62 (arguement_list)


State 127

   61 call_method: IDENT LPAR RPAR •

    $default  reduce using rule 61 (call_method)


State 128

   65 arguement_list: literal •

    $default  reduce using rule 65 (arguement_list)


State 129

   60 call_method: IDENT LPAR arguement_list • RPAR
   63 arguement_list: arguement_list • COMMA literal
   64               | arguement_list • COMMA IDENT

    RPAR   shift, and go to state 154
    COMMA  shift, and go to state 155


State 130

   14 method_access: IDENT DOT IDENT •

    $default  reduce using rule 14 (method_access)


State 131

   53 suntheti_parastash: LPAR expression RPAR •

    $default  reduce using rule 53 (suntheti_parastash)


State 132

   56 addition: expression • PLUS expression
   56         | expression PLUS expression •
   57 multiplication: expression • TIMES expression
   58 division: expression • DIV expression
   59 subtraction: expression • MINUS expression

    $default  reduce using rule 56 (addition)


State 133

   56 addition: expression • PLUS expression
   57 multiplication: expression • TIMES expression
   58 division: expression • DIV expression
   59 subtraction: expression • MINUS expression
   59            | expression MINUS expression •

    $default  reduce using rule 59 (subtraction)


State 134

   56 addition: expression • PLUS expression
   57 multiplication: expression • TIMES expression
   58 division: expression • DIV expression
   58         | expression DIV expression •
   59 subtraction: expression • MINUS expression

    $default  reduce using rule 58 (division)


State 135

   56 addition: expression • PLUS expression
   57 multiplication: expression • TIMES expression
   57               | expression TIMES expression •
   58 division: expression • DIV expression
   59 subtraction: expression • MINUS expression

    $default  reduce using rule 57 (multiplication)


State 136

   75 conop: OROP •

    $default  reduce using rule 75 (conop)


State 137

   74 conop: ANDOP •

    $default  reduce using rule 74 (conop)


State 138

   72 conop: EQUOP •

    $default  reduce using rule 72 (conop)


State 139

   73 conop: NOTOP •

    $default  reduce using rule 73 (conop)


State 140

   71 conop: RELOP •

    $default  reduce using rule 71 (conop)


State 141

   69 condition: expression conop • expression

    INT     shift, and go to state 83
    CHAR    shift, and go to state 84
    BOOL    shift, and go to state 85
    STRING  shift, and go to state 86
    DOUBLE  shift, and go to state 87
    IDENT   shift, and go to state 88
    LPAR    shift, and go to state 89

    method_access       go to state 90
    literal             go to state 91
    expression          go to state 156
    suntheti_parastash  go to state 93
    addition            go to state 94
    multiplication      go to state 95
    division            go to state 96
    subtraction         go to state 97
    call_method         go to state 98


State 142

   86 if: IF LPAR condition RPAR • LCURLY variable_declaration_list commands RCURLY elseif else

    LCURLY  shift, and go to state 157


State 143

   32 commands: commands • assignment
   33         | commands • loop
   34         | commands • control
   35         | commands • print
   36         | commands • return
   37         | commands • break
   68 while: DO LCURLY variable_declaration_list commands • RCURLY WHILE LPAR condition RPAR SEMICOLON

    RETURN    shift, and go to state 64
    IF        shift, and go to state 65
    DO        shift, and go to state 66
    FOR       shift, and go to state 67
    SWITCH    shift, and go to state 68
    BREAK     shift, and go to state 69
    OUTPRINT  shift, and go to state 70
    IDENT     shift, and go to state 71
    RCURLY    shift, and go to state 158

    assignment        go to state 72
    loop              go to state 73
    while             go to state 74
    for               go to state 75
    control           go to state 76
    if                go to state 77
    switch_statement  go to state 78
    print             go to state 79
    return            go to state 80
    break             go to state 81


State 144

   77 exp1: DATATYPE IDENT • EQUALS literal

    EQUALS  shift, and go to state 159


State 145

   78 exp1: IDENT EQUALS • literal

    INT     shift, and go to state 83
    CHAR    shift, and go to state 84
    BOOL    shift, and go to state 85
    STRING  shift, and go to state 86
    DOUBLE  shift, and go to state 87

    literal  go to state 160


State 146

   76 for: FOR LPAR exp1 SEMICOLON • exp2 SEMICOLON exp3 RPAR LCURLY variable_declaration_list commands RCURLY

    IDENT  shift, and go to state 161

    exp2  go to state 162


State 147

   91 switch_statement: SWITCH LPAR IDENT RPAR • LCURLY case default_opt RCURLY

    LCURLY  shift, and go to state 163


State 148

   96 print: OUTPRINT LPAR STRING RPAR • SEMICOLON

    SEMICOLON  shift, and go to state 164


State 149

   98 ident_list: COMMA • IDENT

    IDENT  shift, and go to state 165


State 150

   97 print: OUTPRINT LPAR STRING ident_list • RPAR SEMICOLON
   99 ident_list: ident_list • COMMA IDENT

    RPAR   shift, and go to state 166
    COMMA  shift, and go to state 167


State 151

   40 object_creation: NEW CLASS_NAME • LPAR RPAR

    LPAR  shift, and go to state 168


State 152

   39 assignment: IDENT EQUALS object_creation SEMICOLON •

    $default  reduce using rule 39 (assignment)


State 153

   38 assignment: IDENT EQUALS expression SEMICOLON •

    $default  reduce using rule 38 (assignment)


State 154

   60 call_method: IDENT LPAR arguement_list RPAR •

    $default  reduce using rule 60 (call_method)


State 155

   63 arguement_list: arguement_list COMMA • literal
   64               | arguement_list COMMA • IDENT

    INT     shift, and go to state 83
    CHAR    shift, and go to state 84
    BOOL    shift, and go to state 85
    STRING  shift, and go to state 86
    DOUBLE  shift, and go to state 87
    IDENT   shift, and go to state 169

    literal  go to state 170


State 156

   56 addition: expression • PLUS expression
   57 multiplication: expression • TIMES expression
   58 division: expression • DIV expression
   59 subtraction: expression • MINUS expression
   69 condition: expression conop expression •

    PLUS   shift, and go to state 111
    MINUS  shift, and go to state 112
    DIV    shift, and go to state 113
    TIMES  shift, and go to state 114

    $default  reduce using rule 69 (condition)


State 157

   86 if: IF LPAR condition RPAR LCURLY • variable_declaration_list commands RCURLY elseif else

    DATATYPE    shift, and go to state 8
    PRIVATE     shift, and go to state 9
    PUBLIC      shift, and go to state 10
    CLASS_NAME  shift, and go to state 12

    variable_declaration_list  go to state 171
    variable_declaration       go to state 14
    modifier                   go to state 15


State 158

   68 while: DO LCURLY variable_declaration_list commands RCURLY • WHILE LPAR condition RPAR SEMICOLON

    WHILE  shift, and go to state 172


State 159

   77 exp1: DATATYPE IDENT EQUALS • literal

    INT     shift, and go to state 83
    CHAR    shift, and go to state 84
    BOOL    shift, and go to state 85
    STRING  shift, and go to state 86
    DOUBLE  shift, and go to state 87

    literal  go to state 173


State 160

   78 exp1: IDENT EQUALS literal •

    $default  reduce using rule 78 (exp1)


State 161

   79 exp2: IDENT • conop literal

    OROP   shift, and go to state 136
    ANDOP  shift, and go to state 137
    EQUOP  shift, and go to state 138
    NOTOP  shift, and go to state 139
    RELOP  shift, and go to state 140

    conop  go to state 174


State 162

   76 for: FOR LPAR exp1 SEMICOLON exp2 • SEMICOLON exp3 RPAR LCURLY variable_declaration_list commands RCURLY

    SEMICOLON  shift, and go to state 175


State 163

   91 switch_statement: SWITCH LPAR IDENT RPAR LCURLY • case default_opt RCURLY

    $default  reduce using rule 92 (case)

    case  go to state 176


State 164

   96 print: OUTPRINT LPAR STRING RPAR SEMICOLON •

    $default  reduce using rule 96 (print)


State 165

   98 ident_list: COMMA IDENT •

    $default  reduce using rule 98 (ident_list)


State 166

   97 print: OUTPRINT LPAR STRING ident_list RPAR • SEMICOLON

    SEMICOLON  shift, and go to state 177


State 167

   99 ident_list: ident_list COMMA • IDENT

    IDENT  shift, and go to state 178


State 168

   40 object_creation: NEW CLASS_NAME LPAR • RPAR

    RPAR  shift, and go to state 179


State 169

   64 arguement_list: arguement_list COMMA IDENT •

    $default  reduce using rule 64 (arguement_list)


State 170

   63 arguement_list: arguement_list COMMA literal •

    $default  reduce using rule 63 (arguement_list)


State 171

    7 variable_declaration_list: variable_declaration_list • variable_declaration
   86 if: IF LPAR condition RPAR LCURLY variable_declaration_list • commands RCURLY elseif else

    DATATYPE    shift, and go to state 8
    PRIVATE     shift, and go to state 9
    PUBLIC      shift, and go to state 10
    CLASS_NAME  shift, and go to state 12

    $default  reduce using rule 31 (commands)

    variable_declaration  go to state 19
    modifier              go to state 15
    commands              go to state 180


State 172

   68 while: DO LCURLY variable_declaration_list commands RCURLY WHILE • LPAR condition RPAR SEMICOLON

    LPAR  shift, and go to state 181


State 173

   77 exp1: DATATYPE IDENT EQUALS literal •

    $default  reduce using rule 77 (exp1)


State 174

   79 exp2: IDENT conop • literal

    INT     shift, and go to state 83
    CHAR    shift, and go to state 84
    BOOL    shift, and go to state 85
    STRING  shift, and go to state 86
    DOUBLE  shift, and go to state 87

    literal  go to state 182


State 175

   76 for: FOR LPAR exp1 SEMICOLON exp2 SEMICOLON • exp3 RPAR LCURLY variable_declaration_list commands RCURLY

    IDENT  shift, and go to state 183

    exp3  go to state 184


State 176

   91 switch_statement: SWITCH LPAR IDENT RPAR LCURLY case • default_opt RCURLY
   93 case: case • CASE literal COLON LCURLY variable_declaration_list commands RCURLY

    CASE     shift, and go to state 185
    DEFAULT  shift, and go to state 186

    $default  reduce using rule 94 (default_opt)

    default_opt  go to state 187


State 177

   97 print: OUTPRINT LPAR STRING ident_list RPAR SEMICOLON •

    $default  reduce using rule 97 (print)


State 178

   99 ident_list: ident_list COMMA IDENT •

    $default  reduce using rule 99 (ident_list)


State 179

   40 object_creation: NEW CLASS_NAME LPAR RPAR •

    $default  reduce using rule 40 (object_creation)


State 180

   32 commands: commands • assignment
   33         | commands • loop
   34         | commands • control
   35         | commands • print
   36         | commands • return
   37         | commands • break
   86 if: IF LPAR condition RPAR LCURLY variable_declaration_list commands • RCURLY elseif else

    RETURN    shift, and go to state 64
    IF        shift, and go to state 65
    DO        shift, and go to state 66
    FOR       shift, and go to state 67
    SWITCH    shift, and go to state 68
    BREAK     shift, and go to state 69
    OUTPRINT  shift, and go to state 70
    IDENT     shift, and go to state 71
    RCURLY    shift, and go to state 188

    assignment        go to state 72
    loop              go to state 73
    while             go to state 74
    for               go to state 75
    control           go to state 76
    if                go to state 77
    switch_statement  go to state 78
    print             go to state 79
    return            go to state 80
    break             go to state 81


State 181

   68 while: DO LCURLY variable_declaration_list commands RCURLY WHILE LPAR • condition RPAR SEMICOLON

    INT     shift, and go to state 83
    CHAR    shift, and go to state 84
    BOOL    shift, and go to state 85
    STRING  shift, and go to state 86
    DOUBLE  shift, and go to state 87
    IDENT   shift, and go to state 88
    LPAR    shift, and go to state 89

    method_access       go to state 90
    literal             go to state 91
    expression          go to state 115
    suntheti_parastash  go to state 93
    addition            go to state 94
    multiplication      go to state 95
    division            go to state 96
    subtraction         go to state 97
    call_method         go to state 98
    condition           go to state 189


State 182

   79 exp2: IDENT conop literal •

    $default  reduce using rule 79 (exp2)


State 183

   80 exp3: IDENT • PLUS expression
   81     | IDENT • MINUS expression
   82     | IDENT • DIV expression
   83     | IDENT • TIMES expression

    PLUS   shift, and go to state 190
    MINUS  shift, and go to state 191
    DIV    shift, and go to state 192
    TIMES  shift, and go to state 193


State 184

   76 for: FOR LPAR exp1 SEMICOLON exp2 SEMICOLON exp3 • RPAR LCURLY variable_declaration_list commands RCURLY

    RPAR  shift, and go to state 194


State 185

   93 case: case CASE • literal COLON LCURLY variable_declaration_list commands RCURLY

    INT     shift, and go to state 83
    CHAR    shift, and go to state 84
    BOOL    shift, and go to state 85
    STRING  shift, and go to state 86
    DOUBLE  shift, and go to state 87

    literal  go to state 195


State 186

   95 default_opt: DEFAULT • COLON LCURLY variable_declaration_list commands RCURLY

    COLON  shift, and go to state 196


State 187

   91 switch_statement: SWITCH LPAR IDENT RPAR LCURLY case default_opt • RCURLY

    RCURLY  shift, and go to state 197


State 188

   86 if: IF LPAR condition RPAR LCURLY variable_declaration_list commands RCURLY • elseif else

    $default  reduce using rule 87 (elseif)

    elseif  go to state 198


State 189

   68 while: DO LCURLY variable_declaration_list commands RCURLY WHILE LPAR condition • RPAR SEMICOLON

    RPAR  shift, and go to state 199


State 190

   80 exp3: IDENT PLUS • expression

    INT     shift, and go to state 83
    CHAR    shift, and go to state 84
    BOOL    shift, and go to state 85
    STRING  shift, and go to state 86
    DOUBLE  shift, and go to state 87
    IDENT   shift, and go to state 88
    LPAR    shift, and go to state 89

    method_access       go to state 90
    literal             go to state 91
    expression          go to state 200
    suntheti_parastash  go to state 93
    addition            go to state 94
    multiplication      go to state 95
    division            go to state 96
    subtraction         go to state 97
    call_method         go to state 98


State 191

   81 exp3: IDENT MINUS • expression

    INT     shift, and go to state 83
    CHAR    shift, and go to state 84
    BOOL    shift, and go to state 85
    STRING  shift, and go to state 86
    DOUBLE  shift, and go to state 87
    IDENT   shift, and go to state 88
    LPAR    shift, and go to state 89

    method_access       go to state 90
    literal             go to state 91
    expression          go to state 201
    suntheti_parastash  go to state 93
    addition            go to state 94
    multiplication      go to state 95
    division            go to state 96
    subtraction         go to state 97
    call_method         go to state 98


State 192

   82 exp3: IDENT DIV • expression

    INT     shift, and go to state 83
    CHAR    shift, and go to state 84
    BOOL    shift, and go to state 85
    STRING  shift, and go to state 86
    DOUBLE  shift, and go to state 87
    IDENT   shift, and go to state 88
    LPAR    shift, and go to state 89

    method_access       go to state 90
    literal             go to state 91
    expression          go to state 202
    suntheti_parastash  go to state 93
    addition            go to state 94
    multiplication      go to state 95
    division            go to state 96
    subtraction         go to state 97
    call_method         go to state 98


State 193

   83 exp3: IDENT TIMES • expression

    INT     shift, and go to state 83
    CHAR    shift, and go to state 84
    BOOL    shift, and go to state 85
    STRING  shift, and go to state 86
    DOUBLE  shift, and go to state 87
    IDENT   shift, and go to state 88
    LPAR    shift, and go to state 89

    method_access       go to state 90
    literal             go to state 91
    expression          go to state 203
    suntheti_parastash  go to state 93
    addition            go to state 94
    multiplication      go to state 95
    division            go to state 96
    subtraction         go to state 97
    call_method         go to state 98


State 194

   76 for: FOR LPAR exp1 SEMICOLON exp2 SEMICOLON exp3 RPAR • LCURLY variable_declaration_list commands RCURLY

    LCURLY  shift, and go to state 204


State 195

   93 case: case CASE literal • COLON LCURLY variable_declaration_list commands RCURLY

    COLON  shift, and go to state 205


State 196

   95 default_opt: DEFAULT COLON • LCURLY variable_declaration_list commands RCURLY

    LCURLY  shift, and go to state 206


State 197

   91 switch_statement: SWITCH LPAR IDENT RPAR LCURLY case default_opt RCURLY •

    $default  reduce using rule 91 (switch_statement)


State 198

   86 if: IF LPAR condition RPAR LCURLY variable_declaration_list commands RCURLY elseif • else
   88 elseif: elseif • ELSE IF LPAR condition RPAR LCURLY variable_declaration_list commands RCURLY

    ELSE  shift, and go to state 207

    $default  reduce using rule 89 (else)

    else  go to state 208


State 199

   68 while: DO LCURLY variable_declaration_list commands RCURLY WHILE LPAR condition RPAR • SEMICOLON

    SEMICOLON  shift, and go to state 209


State 200

   56 addition: expression • PLUS expression
   57 multiplication: expression • TIMES expression
   58 division: expression • DIV expression
   59 subtraction: expression • MINUS expression
   80 exp3: IDENT PLUS expression •

    PLUS   shift, and go to state 111
    MINUS  shift, and go to state 112
    DIV    shift, and go to state 113
    TIMES  shift, and go to state 114

    $default  reduce using rule 80 (exp3)


State 201

   56 addition: expression • PLUS expression
   57 multiplication: expression • TIMES expression
   58 division: expression • DIV expression
   59 subtraction: expression • MINUS expression
   81 exp3: IDENT MINUS expression •

    PLUS   shift, and go to state 111
    MINUS  shift, and go to state 112
    DIV    shift, and go to state 113
    TIMES  shift, and go to state 114

    $default  reduce using rule 81 (exp3)


State 202

   56 addition: expression • PLUS expression
   57 multiplication: expression • TIMES expression
   58 division: expression • DIV expression
   59 subtraction: expression • MINUS expression
   82 exp3: IDENT DIV expression •

    PLUS   shift, and go to state 111
    MINUS  shift, and go to state 112
    DIV    shift, and go to state 113
    TIMES  shift, and go to state 114

    $default  reduce using rule 82 (exp3)


State 203

   56 addition: expression • PLUS expression
   57 multiplication: expression • TIMES expression
   58 division: expression • DIV expression
   59 subtraction: expression • MINUS expression
   83 exp3: IDENT TIMES expression •

    PLUS   shift, and go to state 111
    MINUS  shift, and go to state 112
    DIV    shift, and go to state 113
    TIMES  shift, and go to state 114

    $default  reduce using rule 83 (exp3)


State 204

   76 for: FOR LPAR exp1 SEMICOLON exp2 SEMICOLON exp3 RPAR LCURLY • variable_declaration_list commands RCURLY

    DATATYPE    shift, and go to state 8
    PRIVATE     shift, and go to state 9
    PUBLIC      shift, and go to state 10
    CLASS_NAME  shift, and go to state 12

    variable_declaration_list  go to state 210
    variable_declaration       go to state 14
    modifier                   go to state 15


State 205

   93 case: case CASE literal COLON • LCURLY variable_declaration_list commands RCURLY

    LCURLY  shift, and go to state 211


State 206

   95 default_opt: DEFAULT COLON LCURLY • variable_declaration_list commands RCURLY

    DATATYPE    shift, and go to state 8
    PRIVATE     shift, and go to state 9
    PUBLIC      shift, and go to state 10
    CLASS_NAME  shift, and go to state 12

    variable_declaration_list  go to state 212
    variable_declaration       go to state 14
    modifier                   go to state 15


State 207

   88 elseif: elseif ELSE • IF LPAR condition RPAR LCURLY variable_declaration_list commands RCURLY
   90 else: ELSE • LCURLY variable_declaration_list commands RCURLY

    IF      shift, and go to state 213
    LCURLY  shift, and go to state 214


State 208

   86 if: IF LPAR condition RPAR LCURLY variable_declaration_list commands RCURLY elseif else •

    $default  reduce using rule 86 (if)


State 209

   68 while: DO LCURLY variable_declaration_list commands RCURLY WHILE LPAR condition RPAR SEMICOLON •

    $default  reduce using rule 68 (while)


State 210

    7 variable_declaration_list: variable_declaration_list • variable_declaration
   76 for: FOR LPAR exp1 SEMICOLON exp2 SEMICOLON exp3 RPAR LCURLY variable_declaration_list • commands RCURLY

    DATATYPE    shift, and go to state 8
    PRIVATE     shift, and go to state 9
    PUBLIC      shift, and go to state 10
    CLASS_NAME  shift, and go to state 12

    $default  reduce using rule 31 (commands)

    variable_declaration  go to state 19
    modifier              go to state 15
    commands              go to state 215


State 211

   93 case: case CASE literal COLON LCURLY • variable_declaration_list commands RCURLY

    DATATYPE    shift, and go to state 8
    PRIVATE     shift, and go to state 9
    PUBLIC      shift, and go to state 10
    CLASS_NAME  shift, and go to state 12

    variable_declaration_list  go to state 216
    variable_declaration       go to state 14
    modifier                   go to state 15


State 212

    7 variable_declaration_list: variable_declaration_list • variable_declaration
   95 default_opt: DEFAULT COLON LCURLY variable_declaration_list • commands RCURLY

    DATATYPE    shift, and go to state 8
    PRIVATE     shift, and go to state 9
    PUBLIC      shift, and go to state 10
    CLASS_NAME  shift, and go to state 12

    $default  reduce using rule 31 (commands)

    variable_declaration  go to state 19
    modifier              go to state 15
    commands              go to state 217


State 213

   88 elseif: elseif ELSE IF • LPAR condition RPAR LCURLY variable_declaration_list commands RCURLY

    LPAR  shift, and go to state 218


State 214

   90 else: ELSE LCURLY • variable_declaration_list commands RCURLY

    DATATYPE    shift, and go to state 8
    PRIVATE     shift, and go to state 9
    PUBLIC      shift, and go to state 10
    CLASS_NAME  shift, and go to state 12

    variable_declaration_list  go to state 219
    variable_declaration       go to state 14
    modifier                   go to state 15


State 215

   32 commands: commands • assignment
   33         | commands • loop
   34         | commands • control
   35         | commands • print
   36         | commands • return
   37         | commands • break
   76 for: FOR LPAR exp1 SEMICOLON exp2 SEMICOLON exp3 RPAR LCURLY variable_declaration_list commands • RCURLY

    RETURN    shift, and go to state 64
    IF        shift, and go to state 65
    DO        shift, and go to state 66
    FOR       shift, and go to state 67
    SWITCH    shift, and go to state 68
    BREAK     shift, and go to state 69
    OUTPRINT  shift, and go to state 70
    IDENT     shift, and go to state 71
    RCURLY    shift, and go to state 220

    assignment        go to state 72
    loop              go to state 73
    while             go to state 74
    for               go to state 75
    control           go to state 76
    if                go to state 77
    switch_statement  go to state 78
    print             go to state 79
    return            go to state 80
    break             go to state 81


State 216

    7 variable_declaration_list: variable_declaration_list • variable_declaration
   93 case: case CASE literal COLON LCURLY variable_declaration_list • commands RCURLY

    DATATYPE    shift, and go to state 8
    PRIVATE     shift, and go to state 9
    PUBLIC      shift, and go to state 10
    CLASS_NAME  shift, and go to state 12

    $default  reduce using rule 31 (commands)

    variable_declaration  go to state 19
    modifier              go to state 15
    commands              go to state 221


State 217

   32 commands: commands • assignment
   33         | commands • loop
   34         | commands • control
   35         | commands • print
   36         | commands • return
   37         | commands • break
   95 default_opt: DEFAULT COLON LCURLY variable_declaration_list commands • RCURLY

    RETURN    shift, and go to state 64
    IF        shift, and go to state 65
    DO        shift, and go to state 66
    FOR       shift, and go to state 67
    SWITCH    shift, and go to state 68
    BREAK     shift, and go to state 69
    OUTPRINT  shift, and go to state 70
    IDENT     shift, and go to state 71
    RCURLY    shift, and go to state 222

    assignment        go to state 72
    loop              go to state 73
    while             go to state 74
    for               go to state 75
    control           go to state 76
    if                go to state 77
    switch_statement  go to state 78
    print             go to state 79
    return            go to state 80
    break             go to state 81


State 218

   88 elseif: elseif ELSE IF LPAR • condition RPAR LCURLY variable_declaration_list commands RCURLY

    INT     shift, and go to state 83
    CHAR    shift, and go to state 84
    BOOL    shift, and go to state 85
    STRING  shift, and go to state 86
    DOUBLE  shift, and go to state 87
    IDENT   shift, and go to state 88
    LPAR    shift, and go to state 89

    method_access       go to state 90
    literal             go to state 91
    expression          go to state 115
    suntheti_parastash  go to state 93
    addition            go to state 94
    multiplication      go to state 95
    division            go to state 96
    subtraction         go to state 97
    call_method         go to state 98
    condition           go to state 223


State 219

    7 variable_declaration_list: variable_declaration_list • variable_declaration
   90 else: ELSE LCURLY variable_declaration_list • commands RCURLY

    DATATYPE    shift, and go to state 8
    PRIVATE     shift, and go to state 9
    PUBLIC      shift, and go to state 10
    CLASS_NAME  shift, and go to state 12

    $default  reduce using rule 31 (commands)

    variable_declaration  go to state 19
    modifier              go to state 15
    commands              go to state 224


State 220

   76 for: FOR LPAR exp1 SEMICOLON exp2 SEMICOLON exp3 RPAR LCURLY variable_declaration_list commands RCURLY •

    $default  reduce using rule 76 (for)


State 221

   32 commands: commands • assignment
   33         | commands • loop
   34         | commands • control
   35         | commands • print
   36         | commands • return
   37         | commands • break
   93 case: case CASE literal COLON LCURLY variable_declaration_list commands • RCURLY

    RETURN    shift, and go to state 64
    IF        shift, and go to state 65
    DO        shift, and go to state 66
    FOR       shift, and go to state 67
    SWITCH    shift, and go to state 68
    BREAK     shift, and go to state 69
    OUTPRINT  shift, and go to state 70
    IDENT     shift, and go to state 71
    RCURLY    shift, and go to state 225

    assignment        go to state 72
    loop              go to state 73
    while             go to state 74
    for               go to state 75
    control           go to state 76
    if                go to state 77
    switch_statement  go to state 78
    print             go to state 79
    return            go to state 80
    break             go to state 81


State 222

   95 default_opt: DEFAULT COLON LCURLY variable_declaration_list commands RCURLY •

    $default  reduce using rule 95 (default_opt)


State 223

   88 elseif: elseif ELSE IF LPAR condition • RPAR LCURLY variable_declaration_list commands RCURLY

    RPAR  shift, and go to state 226


State 224

   32 commands: commands • assignment
   33         | commands • loop
   34         | commands • control
   35         | commands • print
   36         | commands • return
   37         | commands • break
   90 else: ELSE LCURLY variable_declaration_list commands • RCURLY

    RETURN    shift, and go to state 64
    IF        shift, and go to state 65
    DO        shift, and go to state 66
    FOR       shift, and go to state 67
    SWITCH    shift, and go to state 68
    BREAK     shift, and go to state 69
    OUTPRINT  shift, and go to state 70
    IDENT     shift, and go to state 71
    RCURLY    shift, and go to state 227

    assignment        go to state 72
    loop              go to state 73
    while             go to state 74
    for               go to state 75
    control           go to state 76
    if                go to state 77
    switch_statement  go to state 78
    print             go to state 79
    return            go to state 80
    break             go to state 81


State 225

   93 case: case CASE literal COLON LCURLY variable_declaration_list commands RCURLY •

    $default  reduce using rule 93 (case)


State 226

   88 elseif: elseif ELSE IF LPAR condition RPAR • LCURLY variable_declaration_list commands RCURLY

    LCURLY  shift, and go to state 228


State 227

   90 else: ELSE LCURLY variable_declaration_list commands RCURLY •

    $default  reduce using rule 90 (else)


State 228

   88 elseif: elseif ELSE IF LPAR condition RPAR LCURLY • variable_declaration_list commands RCURLY

    DATATYPE    shift, and go to state 8
    PRIVATE     shift, and go to state 9
    PUBLIC      shift, and go to state 10
    CLASS_NAME  shift, and go to state 12

    variable_declaration_list  go to state 229
    variable_declaration       go to state 14
    modifier                   go to state 15


State 229

    7 variable_declaration_list: variable_declaration_list • variable_declaration
   88 elseif: elseif ELSE IF LPAR condition RPAR LCURLY variable_declaration_list • commands RCURLY

    DATATYPE    shift, and go to state 8
    PRIVATE     shift, and go to state 9
    PUBLIC      shift, and go to state 10
    CLASS_NAME  shift, and go to state 12

    $default  reduce using rule 31 (commands)

    variable_declaration  go to state 19
    modifier              go to state 15
    commands              go to state 230


State 230

   32 commands: commands • assignment
   33         | commands • loop
   34         | commands • control
   35         | commands • print
   36         | commands • return
   37         | commands • break
   88 elseif: elseif ELSE IF LPAR condition RPAR LCURLY variable_declaration_list commands • RCURLY

    RETURN    shift, and go to state 64
    IF        shift, and go to state 65
    DO        shift, and go to state 66
    FOR       shift, and go to state 67
    SWITCH    shift, and go to state 68
    BREAK     shift, and go to state 69
    OUTPRINT  shift, and go to state 70
    IDENT     shift, and go to state 71
    RCURLY    shift, and go to state 231

    assignment        go to state 72
    loop              go to state 73
    while             go to state 74
    for               go to state 75
    control           go to state 76
    if                go to state 77
    switch_statement  go to state 78
    print             go to state 79
    return            go to state 80
    break             go to state 81


State 231

   88 elseif: elseif ELSE IF LPAR condition RPAR LCURLY variable_declaration_list commands RCURLY •

    $default  reduce using rule 88 (elseif)

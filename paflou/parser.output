Nonterminals useless in grammar

    con1


Terminals unused in grammar

    TRUE
    FALSE


Rules useless in grammar

  101 con1: IDENT
  102     | literal


Grammar

    0 $accept: program $end

    1 program: ε
    2        | program class

    3 class: PUBLIC CLASS CLASS_NAME LCURLY variable_declaration_list method_declaration RCURLY
    4      | PUBLIC CLASS CLASS_NAME LCURLY RCURLY
    5      | PUBLIC CLASS CLASS_NAME LCURLY variable_declaration_list RCURLY

    6 variable_declaration_list: variable_declaration
    7                          | variable_declaration_list variable_declaration

    8 variable_declaration: DATATYPE IDENT SEMICOLON
    9                     | modifier DATATYPE IDENT SEMICOLON
   10                     | CLASS_NAME IDENT SEMICOLON
   11                     | modifier CLASS_NAME IDENT SEMICOLON

   12 modifier: PUBLIC
   13         | PRIVATE

   14 object_access: IDENT DOT IDENT

   15 method_declaration: modifier secondary_modifier return_type IDENT LPAR parameter_list RPAR LCURLY method_body RCURLY

   16 return_type: ε
   17            | DATATYPE
   18            | CLASS_NAME
   19            | VOID

   20 secondary_modifier: STATIC
   21                   | ABSTRACT
   22                   | FINAL
   23                   | NATIVE
   24                   | SYNCHRONIZED

   25 parameter_list: ε
   26               | DATATYPE IDENT
   27               | parameter_list COMMA DATATYPE IDENT

   28 method_body: variable_declaration_list commands
   29            | commands

   30 commands: ε
   31         | commands assignment
   32         | commands loop
   33         | commands control
   34         | commands print
   35         | commands return
   36         | commands break

   37 assignment: IDENT EQUALS expression SEMICOLON
   38           | IDENT EQUALS object_creation SEMICOLON

   39 object_creation: NEW CLASS_NAME LPAR RPAR

   40 literal: INT
   41        | CHAR
   42        | STRING
   43        | BOOL
   44        | DOUBLE

   45 expression: literal
   46           | suntheti_parastash

   47 suntheti_parastash: addition
   48                   | IDENT
   49                   | multiplication
   50                   | division
   51                   | subtraction
   52                   | LPAR expression RPAR
   53                   | call_method
   54                   | object_access

   55 addition: expression PLUS expression

   56 multiplication: expression TIMES expression

   57 division: expression DIV expression

   58 subtraction: expression MINUS expression

   59 call_method: IDENT LPAR arguement_list RPAR
   60            | IDENT LPAR RPAR

   61 arguement_list: IDENT
   62               | arguement_list COMMA literal
   63               | arguement_list COMMA IDENT
   64               | literal

   65 loop: while
   66     | for

   67 while: DO LCURLY variable_declaration_list commands RCURLY WHILE LPAR condition RPAR SEMICOLON

   68 condition: expression conop expression
   69          | expression

   70 conop: RELOP
   71      | EQUOP
   72      | NOTOP
   73      | ANDOP
   74      | OROP

   75 for: FOR LPAR exp1 SEMICOLON exp2 SEMICOLON exp3 RPAR LCURLY variable_declaration_list commands RCURLY

   76 exp1: DATATYPE IDENT EQUALS literal
   77     | IDENT EQUALS literal

   78 exp2: IDENT conop literal

   79 exp3: IDENT PLUS expression
   80     | IDENT MINUS expression
   81     | IDENT DIV expression
   82     | IDENT TIMES expression

   83 control: if
   84        | switch_statement

   85 if: IF LPAR condition RPAR LCURLY variable_declaration_list commands RCURLY elseif else

   86 elseif: ε
   87       | elseif ELSE IF LPAR condition RPAR LCURLY variable_declaration_list commands RCURLY

   88 else: ε
   89     | ELSE LCURLY variable_declaration_list commands RCURLY

   90 switch_statement: SWITCH LPAR IDENT RPAR LCURLY case default_opt RCURLY

   91 case: ε
   92     | case CASE literal COLON LCURLY variable_declaration_list commands RCURLY

   93 default_opt: ε
   94            | DEFAULT COLON LCURLY variable_declaration_list commands RCURLY

   95 print: OUTPRINT LPAR STRING RPAR SEMICOLON
   96      | OUTPRINT LPAR STRING ident_list RPAR SEMICOLON

   97 ident_list: COMMA IDENT
   98           | ident_list COMMA IDENT

   99 return: RETURN expression SEMICOLON

  100 break: BREAK SEMICOLON


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    DATATYPE (258) 8 9 17 26 27 76
    NEW (259) 39
    RETURN (260) 99
    VOID (261) 19
    IF (262) 85 87
    ELSE (263) 87 89
    WHILE (264) 67
    DO (265) 67
    FOR (266) 75
    SWITCH (267) 90
    CASE (268) 92
    DEFAULT (269) 94
    BREAK (270) 100
    TRUE (271)
    FALSE (272)
    INT (273) 40
    CHAR (274) 41
    BOOL (275) 43
    STRING (276) 42 95 96
    DOUBLE (277) 44
    PRIVATE (278) 13
    PUBLIC (279) 3 4 5 12
    STATIC (280) 20
    ABSTRACT (281) 21
    FINAL (282) 22
    NATIVE (283) 23
    SYNCHRONIZED (284) 24
    OUTPRINT (285) 95 96
    OROP (286) 74
    ANDOP (287) 73
    EQUOP (288) 71
    NOTOP (289) 72
    RELOP (290) 70
    IDENT (291) 8 9 10 11 14 15 26 27 37 38 48 59 60 61 63 76 77 78 79 80 81 82 90 97 98
    LCURLY (292) 3 4 5 15 67 75 85 87 89 90 92 94
    RCURLY (293) 3 4 5 15 67 75 85 87 89 90 92 94
    CLASS (294) 3 4 5
    CLASS_NAME (295) 3 4 5 10 11 18 39
    LPAR (296) 15 39 52 59 60 67 75 85 87 90 95 96
    RPAR (297) 15 39 52 59 60 67 75 85 87 90 95 96
    COLON (298) 92 94
    DOT (299) 14
    SEMICOLON (300) 8 9 10 11 37 38 67 75 95 96 99 100
    EQUALS (301) 37 38 76 77
    PLUS (302) 55 79
    MINUS (303) 58 80
    DIV (304) 57 81
    TIMES (305) 56 82
    COMMA (306) 27 62 63 97 98


Nonterminals, with rules where they appear

    $accept (52)
        on left: 0
    program (53)
        on left: 1 2
        on right: 0 2
    class (54)
        on left: 3 4 5
        on right: 2
    variable_declaration_list (55)
        on left: 6 7
        on right: 3 5 7 28 67 75 85 87 89 92 94
    variable_declaration (56)
        on left: 8 9 10 11
        on right: 6 7
    modifier (57)
        on left: 12 13
        on right: 9 11 15
    object_access (58)
        on left: 14
        on right: 54
    method_declaration (59)
        on left: 15
        on right: 3
    return_type (60)
        on left: 16 17 18 19
        on right: 15
    secondary_modifier (61)
        on left: 20 21 22 23 24
        on right: 15
    parameter_list (62)
        on left: 25 26 27
        on right: 15 27
    method_body (63)
        on left: 28 29
        on right: 15
    commands (64)
        on left: 30 31 32 33 34 35 36
        on right: 28 29 31 32 33 34 35 36 67 75 85 87 89 92 94
    assignment (65)
        on left: 37 38
        on right: 31
    object_creation (66)
        on left: 39
        on right: 38
    literal (67)
        on left: 40 41 42 43 44
        on right: 45 62 64 76 77 78 92
    expression (68)
        on left: 45 46
        on right: 37 52 55 56 57 58 68 69 79 80 81 82 99
    suntheti_parastash (69)
        on left: 47 48 49 50 51 52 53 54
        on right: 46
    addition (70)
        on left: 55
        on right: 47
    multiplication (71)
        on left: 56
        on right: 49
    division (72)
        on left: 57
        on right: 50
    subtraction (73)
        on left: 58
        on right: 51
    call_method (74)
        on left: 59 60
        on right: 53
    arguement_list (75)
        on left: 61 62 63 64
        on right: 59 62 63
    loop (76)
        on left: 65 66
        on right: 32
    while (77)
        on left: 67
        on right: 65
    condition (78)
        on left: 68 69
        on right: 67 85 87
    conop (79)
        on left: 70 71 72 73 74
        on right: 68 78
    for (80)
        on left: 75
        on right: 66
    exp1 (81)
        on left: 76 77
        on right: 75
    exp2 (82)
        on left: 78
        on right: 75
    exp3 (83)
        on left: 79 80 81 82
        on right: 75
    control (84)
        on left: 83 84
        on right: 33
    if (85)
        on left: 85
        on right: 83
    elseif (86)
        on left: 86 87
        on right: 85 87
    else (87)
        on left: 88 89
        on right: 85
    switch_statement (88)
        on left: 90
        on right: 84
    case (89)
        on left: 91 92
        on right: 90 92
    default_opt (90)
        on left: 93 94
        on right: 90
    print (91)
        on left: 95 96
        on right: 34
    ident_list (92)
        on left: 97 98
        on right: 96 98
    return (93)
        on left: 99
        on right: 35
    break (94)
        on left: 100
        on right: 36


State 0

    0 $accept: • program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


State 1

    0 $accept: program • $end
    2 program: program • class

    $end    shift, and go to state 2
    PUBLIC  shift, and go to state 3

    class  go to state 4


State 2

    0 $accept: program $end •

    $default  accept


State 3

    3 class: PUBLIC • CLASS CLASS_NAME LCURLY variable_declaration_list method_declaration RCURLY
    4      | PUBLIC • CLASS CLASS_NAME LCURLY RCURLY
    5      | PUBLIC • CLASS CLASS_NAME LCURLY variable_declaration_list RCURLY

    CLASS  shift, and go to state 5


State 4

    2 program: program class •

    $default  reduce using rule 2 (program)


State 5

    3 class: PUBLIC CLASS • CLASS_NAME LCURLY variable_declaration_list method_declaration RCURLY
    4      | PUBLIC CLASS • CLASS_NAME LCURLY RCURLY
    5      | PUBLIC CLASS • CLASS_NAME LCURLY variable_declaration_list RCURLY

    CLASS_NAME  shift, and go to state 6


State 6

    3 class: PUBLIC CLASS CLASS_NAME • LCURLY variable_declaration_list method_declaration RCURLY
    4      | PUBLIC CLASS CLASS_NAME • LCURLY RCURLY
    5      | PUBLIC CLASS CLASS_NAME • LCURLY variable_declaration_list RCURLY

    LCURLY  shift, and go to state 7


State 7

    3 class: PUBLIC CLASS CLASS_NAME LCURLY • variable_declaration_list method_declaration RCURLY
    4      | PUBLIC CLASS CLASS_NAME LCURLY • RCURLY
    5      | PUBLIC CLASS CLASS_NAME LCURLY • variable_declaration_list RCURLY

    DATATYPE    shift, and go to state 8
    PRIVATE     shift, and go to state 9
    PUBLIC      shift, and go to state 10
    RCURLY      shift, and go to state 11
    CLASS_NAME  shift, and go to state 12

    variable_declaration_list  go to state 13
    variable_declaration       go to state 14
    modifier                   go to state 15


State 8

    8 variable_declaration: DATATYPE • IDENT SEMICOLON

    IDENT  shift, and go to state 16


State 9

   13 modifier: PRIVATE •

    $default  reduce using rule 13 (modifier)


State 10

   12 modifier: PUBLIC •

    $default  reduce using rule 12 (modifier)


State 11

    4 class: PUBLIC CLASS CLASS_NAME LCURLY RCURLY •

    $default  reduce using rule 4 (class)


State 12

   10 variable_declaration: CLASS_NAME • IDENT SEMICOLON

    IDENT  shift, and go to state 17


State 13

    3 class: PUBLIC CLASS CLASS_NAME LCURLY variable_declaration_list • method_declaration RCURLY
    5      | PUBLIC CLASS CLASS_NAME LCURLY variable_declaration_list • RCURLY
    7 variable_declaration_list: variable_declaration_list • variable_declaration

    DATATYPE    shift, and go to state 8
    PRIVATE     shift, and go to state 9
    PUBLIC      shift, and go to state 10
    RCURLY      shift, and go to state 18
    CLASS_NAME  shift, and go to state 12

    variable_declaration  go to state 19
    modifier              go to state 20
    method_declaration    go to state 21


State 14

    6 variable_declaration_list: variable_declaration •

    $default  reduce using rule 6 (variable_declaration_list)


State 15

    9 variable_declaration: modifier • DATATYPE IDENT SEMICOLON
   11                     | modifier • CLASS_NAME IDENT SEMICOLON

    DATATYPE    shift, and go to state 22
    CLASS_NAME  shift, and go to state 23


State 16

    8 variable_declaration: DATATYPE IDENT • SEMICOLON

    SEMICOLON  shift, and go to state 24


State 17

   10 variable_declaration: CLASS_NAME IDENT • SEMICOLON

    SEMICOLON  shift, and go to state 25


State 18

    5 class: PUBLIC CLASS CLASS_NAME LCURLY variable_declaration_list RCURLY •

    $default  reduce using rule 5 (class)


State 19

    7 variable_declaration_list: variable_declaration_list variable_declaration •

    $default  reduce using rule 7 (variable_declaration_list)


State 20

    9 variable_declaration: modifier • DATATYPE IDENT SEMICOLON
   11                     | modifier • CLASS_NAME IDENT SEMICOLON
   15 method_declaration: modifier • secondary_modifier return_type IDENT LPAR parameter_list RPAR LCURLY method_body RCURLY

    DATATYPE      shift, and go to state 22
    STATIC        shift, and go to state 26
    ABSTRACT      shift, and go to state 27
    FINAL         shift, and go to state 28
    NATIVE        shift, and go to state 29
    SYNCHRONIZED  shift, and go to state 30
    CLASS_NAME    shift, and go to state 23

    secondary_modifier  go to state 31


State 21

    3 class: PUBLIC CLASS CLASS_NAME LCURLY variable_declaration_list method_declaration • RCURLY

    RCURLY  shift, and go to state 32


State 22

    9 variable_declaration: modifier DATATYPE • IDENT SEMICOLON

    IDENT  shift, and go to state 33


State 23

   11 variable_declaration: modifier CLASS_NAME • IDENT SEMICOLON

    IDENT  shift, and go to state 34


State 24

    8 variable_declaration: DATATYPE IDENT SEMICOLON •

    $default  reduce using rule 8 (variable_declaration)


State 25

   10 variable_declaration: CLASS_NAME IDENT SEMICOLON •

    $default  reduce using rule 10 (variable_declaration)


State 26

   20 secondary_modifier: STATIC •

    $default  reduce using rule 20 (secondary_modifier)


State 27

   21 secondary_modifier: ABSTRACT •

    $default  reduce using rule 21 (secondary_modifier)


State 28

   22 secondary_modifier: FINAL •

    $default  reduce using rule 22 (secondary_modifier)


State 29

   23 secondary_modifier: NATIVE •

    $default  reduce using rule 23 (secondary_modifier)


State 30

   24 secondary_modifier: SYNCHRONIZED •

    $default  reduce using rule 24 (secondary_modifier)


State 31

   15 method_declaration: modifier secondary_modifier • return_type IDENT LPAR parameter_list RPAR LCURLY method_body RCURLY

    DATATYPE    shift, and go to state 35
    VOID        shift, and go to state 36
    CLASS_NAME  shift, and go to state 37

    $default  reduce using rule 16 (return_type)

    return_type  go to state 38


State 32

    3 class: PUBLIC CLASS CLASS_NAME LCURLY variable_declaration_list method_declaration RCURLY •

    $default  reduce using rule 3 (class)


State 33

    9 variable_declaration: modifier DATATYPE IDENT • SEMICOLON

    SEMICOLON  shift, and go to state 39


State 34

   11 variable_declaration: modifier CLASS_NAME IDENT • SEMICOLON

    SEMICOLON  shift, and go to state 40


State 35

   17 return_type: DATATYPE •

    $default  reduce using rule 17 (return_type)


State 36

   19 return_type: VOID •

    $default  reduce using rule 19 (return_type)


State 37

   18 return_type: CLASS_NAME •

    $default  reduce using rule 18 (return_type)


State 38

   15 method_declaration: modifier secondary_modifier return_type • IDENT LPAR parameter_list RPAR LCURLY method_body RCURLY

    IDENT  shift, and go to state 41


State 39

    9 variable_declaration: modifier DATATYPE IDENT SEMICOLON •

    $default  reduce using rule 9 (variable_declaration)


State 40

   11 variable_declaration: modifier CLASS_NAME IDENT SEMICOLON •

    $default  reduce using rule 11 (variable_declaration)


State 41

   15 method_declaration: modifier secondary_modifier return_type IDENT • LPAR parameter_list RPAR LCURLY method_body RCURLY

    LPAR  shift, and go to state 42


State 42

   15 method_declaration: modifier secondary_modifier return_type IDENT LPAR • parameter_list RPAR LCURLY method_body RCURLY

    DATATYPE  shift, and go to state 43

    $default  reduce using rule 25 (parameter_list)

    parameter_list  go to state 44


State 43

   26 parameter_list: DATATYPE • IDENT

    IDENT  shift, and go to state 45


State 44

   15 method_declaration: modifier secondary_modifier return_type IDENT LPAR parameter_list • RPAR LCURLY method_body RCURLY
   27 parameter_list: parameter_list • COMMA DATATYPE IDENT

    RPAR   shift, and go to state 46
    COMMA  shift, and go to state 47


State 45

   26 parameter_list: DATATYPE IDENT •

    $default  reduce using rule 26 (parameter_list)


State 46

   15 method_declaration: modifier secondary_modifier return_type IDENT LPAR parameter_list RPAR • LCURLY method_body RCURLY

    LCURLY  shift, and go to state 48


State 47

   27 parameter_list: parameter_list COMMA • DATATYPE IDENT

    DATATYPE  shift, and go to state 49


State 48

   15 method_declaration: modifier secondary_modifier return_type IDENT LPAR parameter_list RPAR LCURLY • method_body RCURLY

    DATATYPE    shift, and go to state 8
    PRIVATE     shift, and go to state 9
    PUBLIC      shift, and go to state 10
    CLASS_NAME  shift, and go to state 12

    $default  reduce using rule 30 (commands)

    variable_declaration_list  go to state 50
    variable_declaration       go to state 14
    modifier                   go to state 15
    method_body                go to state 51
    commands                   go to state 52


State 49

   27 parameter_list: parameter_list COMMA DATATYPE • IDENT

    IDENT  shift, and go to state 53


State 50

    7 variable_declaration_list: variable_declaration_list • variable_declaration
   28 method_body: variable_declaration_list • commands

    DATATYPE    shift, and go to state 8
    PRIVATE     shift, and go to state 9
    PUBLIC      shift, and go to state 10
    CLASS_NAME  shift, and go to state 12

    $default  reduce using rule 30 (commands)

    variable_declaration  go to state 19
    modifier              go to state 15
    commands              go to state 54


State 51

   15 method_declaration: modifier secondary_modifier return_type IDENT LPAR parameter_list RPAR LCURLY method_body • RCURLY

    RCURLY  shift, and go to state 55


State 52

   29 method_body: commands •
   31 commands: commands • assignment
   32         | commands • loop
   33         | commands • control
   34         | commands • print
   35         | commands • return
   36         | commands • break

    RETURN    shift, and go to state 56
    IF        shift, and go to state 57
    DO        shift, and go to state 58
    FOR       shift, and go to state 59
    SWITCH    shift, and go to state 60
    BREAK     shift, and go to state 61
    OUTPRINT  shift, and go to state 62
    IDENT     shift, and go to state 63

    $default  reduce using rule 29 (method_body)

    assignment        go to state 64
    loop              go to state 65
    while             go to state 66
    for               go to state 67
    control           go to state 68
    if                go to state 69
    switch_statement  go to state 70
    print             go to state 71
    return            go to state 72
    break             go to state 73


State 53

   27 parameter_list: parameter_list COMMA DATATYPE IDENT •

    $default  reduce using rule 27 (parameter_list)


State 54

   28 method_body: variable_declaration_list commands •
   31 commands: commands • assignment
   32         | commands • loop
   33         | commands • control
   34         | commands • print
   35         | commands • return
   36         | commands • break

    RETURN    shift, and go to state 56
    IF        shift, and go to state 57
    DO        shift, and go to state 58
    FOR       shift, and go to state 59
    SWITCH    shift, and go to state 60
    BREAK     shift, and go to state 61
    OUTPRINT  shift, and go to state 62
    IDENT     shift, and go to state 63

    $default  reduce using rule 28 (method_body)

    assignment        go to state 64
    loop              go to state 65
    while             go to state 66
    for               go to state 67
    control           go to state 68
    if                go to state 69
    switch_statement  go to state 70
    print             go to state 71
    return            go to state 72
    break             go to state 73


State 55

   15 method_declaration: modifier secondary_modifier return_type IDENT LPAR parameter_list RPAR LCURLY method_body RCURLY •

    $default  reduce using rule 15 (method_declaration)


State 56

   99 return: RETURN • expression SEMICOLON

    INT     shift, and go to state 74
    CHAR    shift, and go to state 75
    BOOL    shift, and go to state 76
    STRING  shift, and go to state 77
    DOUBLE  shift, and go to state 78
    IDENT   shift, and go to state 79
    LPAR    shift, and go to state 80

    object_access       go to state 81
    literal             go to state 82
    expression          go to state 83
    suntheti_parastash  go to state 84
    addition            go to state 85
    multiplication      go to state 86
    division            go to state 87
    subtraction         go to state 88
    call_method         go to state 89


State 57

   85 if: IF • LPAR condition RPAR LCURLY variable_declaration_list commands RCURLY elseif else

    LPAR  shift, and go to state 90


State 58

   67 while: DO • LCURLY variable_declaration_list commands RCURLY WHILE LPAR condition RPAR SEMICOLON

    LCURLY  shift, and go to state 91


State 59

   75 for: FOR • LPAR exp1 SEMICOLON exp2 SEMICOLON exp3 RPAR LCURLY variable_declaration_list commands RCURLY

    LPAR  shift, and go to state 92


State 60

   90 switch_statement: SWITCH • LPAR IDENT RPAR LCURLY case default_opt RCURLY

    LPAR  shift, and go to state 93


State 61

  100 break: BREAK • SEMICOLON

    SEMICOLON  shift, and go to state 94


State 62

   95 print: OUTPRINT • LPAR STRING RPAR SEMICOLON
   96      | OUTPRINT • LPAR STRING ident_list RPAR SEMICOLON

    LPAR  shift, and go to state 95


State 63

   37 assignment: IDENT • EQUALS expression SEMICOLON
   38           | IDENT • EQUALS object_creation SEMICOLON

    EQUALS  shift, and go to state 96


State 64

   31 commands: commands assignment •

    $default  reduce using rule 31 (commands)


State 65

   32 commands: commands loop •

    $default  reduce using rule 32 (commands)


State 66

   65 loop: while •

    $default  reduce using rule 65 (loop)


State 67

   66 loop: for •

    $default  reduce using rule 66 (loop)


State 68

   33 commands: commands control •

    $default  reduce using rule 33 (commands)


State 69

   83 control: if •

    $default  reduce using rule 83 (control)


State 70

   84 control: switch_statement •

    $default  reduce using rule 84 (control)


State 71

   34 commands: commands print •

    $default  reduce using rule 34 (commands)


State 72

   35 commands: commands return •

    $default  reduce using rule 35 (commands)


State 73

   36 commands: commands break •

    $default  reduce using rule 36 (commands)


State 74

   40 literal: INT •

    $default  reduce using rule 40 (literal)


State 75

   41 literal: CHAR •

    $default  reduce using rule 41 (literal)


State 76

   43 literal: BOOL •

    $default  reduce using rule 43 (literal)


State 77

   42 literal: STRING •

    $default  reduce using rule 42 (literal)


State 78

   44 literal: DOUBLE •

    $default  reduce using rule 44 (literal)


State 79

   14 object_access: IDENT • DOT IDENT
   48 suntheti_parastash: IDENT •
   59 call_method: IDENT • LPAR arguement_list RPAR
   60            | IDENT • LPAR RPAR

    LPAR  shift, and go to state 97
    DOT   shift, and go to state 98

    $default  reduce using rule 48 (suntheti_parastash)


State 80

   52 suntheti_parastash: LPAR • expression RPAR

    INT     shift, and go to state 74
    CHAR    shift, and go to state 75
    BOOL    shift, and go to state 76
    STRING  shift, and go to state 77
    DOUBLE  shift, and go to state 78
    IDENT   shift, and go to state 79
    LPAR    shift, and go to state 80

    object_access       go to state 81
    literal             go to state 82
    expression          go to state 99
    suntheti_parastash  go to state 84
    addition            go to state 85
    multiplication      go to state 86
    division            go to state 87
    subtraction         go to state 88
    call_method         go to state 89


State 81

   54 suntheti_parastash: object_access •

    $default  reduce using rule 54 (suntheti_parastash)


State 82

   45 expression: literal •

    $default  reduce using rule 45 (expression)


State 83

   55 addition: expression • PLUS expression
   56 multiplication: expression • TIMES expression
   57 division: expression • DIV expression
   58 subtraction: expression • MINUS expression
   99 return: RETURN expression • SEMICOLON

    SEMICOLON  shift, and go to state 100
    PLUS       shift, and go to state 101
    MINUS      shift, and go to state 102
    DIV        shift, and go to state 103
    TIMES      shift, and go to state 104


State 84

   46 expression: suntheti_parastash •

    $default  reduce using rule 46 (expression)


State 85

   47 suntheti_parastash: addition •

    $default  reduce using rule 47 (suntheti_parastash)


State 86

   49 suntheti_parastash: multiplication •

    $default  reduce using rule 49 (suntheti_parastash)


State 87

   50 suntheti_parastash: division •

    $default  reduce using rule 50 (suntheti_parastash)


State 88

   51 suntheti_parastash: subtraction •

    $default  reduce using rule 51 (suntheti_parastash)


State 89

   53 suntheti_parastash: call_method •

    $default  reduce using rule 53 (suntheti_parastash)


State 90

   85 if: IF LPAR • condition RPAR LCURLY variable_declaration_list commands RCURLY elseif else

    INT     shift, and go to state 74
    CHAR    shift, and go to state 75
    BOOL    shift, and go to state 76
    STRING  shift, and go to state 77
    DOUBLE  shift, and go to state 78
    IDENT   shift, and go to state 79
    LPAR    shift, and go to state 80

    object_access       go to state 81
    literal             go to state 82
    expression          go to state 105
    suntheti_parastash  go to state 84
    addition            go to state 85
    multiplication      go to state 86
    division            go to state 87
    subtraction         go to state 88
    call_method         go to state 89
    condition           go to state 106


State 91

   67 while: DO LCURLY • variable_declaration_list commands RCURLY WHILE LPAR condition RPAR SEMICOLON

    DATATYPE    shift, and go to state 8
    PRIVATE     shift, and go to state 9
    PUBLIC      shift, and go to state 10
    CLASS_NAME  shift, and go to state 12

    variable_declaration_list  go to state 107
    variable_declaration       go to state 14
    modifier                   go to state 15


State 92

   75 for: FOR LPAR • exp1 SEMICOLON exp2 SEMICOLON exp3 RPAR LCURLY variable_declaration_list commands RCURLY

    DATATYPE  shift, and go to state 108
    IDENT     shift, and go to state 109

    exp1  go to state 110


State 93

   90 switch_statement: SWITCH LPAR • IDENT RPAR LCURLY case default_opt RCURLY

    IDENT  shift, and go to state 111


State 94

  100 break: BREAK SEMICOLON •

    $default  reduce using rule 100 (break)


State 95

   95 print: OUTPRINT LPAR • STRING RPAR SEMICOLON
   96      | OUTPRINT LPAR • STRING ident_list RPAR SEMICOLON

    STRING  shift, and go to state 112


State 96

   37 assignment: IDENT EQUALS • expression SEMICOLON
   38           | IDENT EQUALS • object_creation SEMICOLON

    NEW     shift, and go to state 113
    INT     shift, and go to state 74
    CHAR    shift, and go to state 75
    BOOL    shift, and go to state 76
    STRING  shift, and go to state 77
    DOUBLE  shift, and go to state 78
    IDENT   shift, and go to state 79
    LPAR    shift, and go to state 80

    object_access       go to state 81
    object_creation     go to state 114
    literal             go to state 82
    expression          go to state 115
    suntheti_parastash  go to state 84
    addition            go to state 85
    multiplication      go to state 86
    division            go to state 87
    subtraction         go to state 88
    call_method         go to state 89


State 97

   59 call_method: IDENT LPAR • arguement_list RPAR
   60            | IDENT LPAR • RPAR

    INT     shift, and go to state 74
    CHAR    shift, and go to state 75
    BOOL    shift, and go to state 76
    STRING  shift, and go to state 77
    DOUBLE  shift, and go to state 78
    IDENT   shift, and go to state 116
    RPAR    shift, and go to state 117

    literal         go to state 118
    arguement_list  go to state 119


State 98

   14 object_access: IDENT DOT • IDENT

    IDENT  shift, and go to state 120


State 99

   52 suntheti_parastash: LPAR expression • RPAR
   55 addition: expression • PLUS expression
   56 multiplication: expression • TIMES expression
   57 division: expression • DIV expression
   58 subtraction: expression • MINUS expression

    RPAR   shift, and go to state 121
    PLUS   shift, and go to state 101
    MINUS  shift, and go to state 102
    DIV    shift, and go to state 103
    TIMES  shift, and go to state 104


State 100

   99 return: RETURN expression SEMICOLON •

    $default  reduce using rule 99 (return)


State 101

   55 addition: expression PLUS • expression

    INT     shift, and go to state 74
    CHAR    shift, and go to state 75
    BOOL    shift, and go to state 76
    STRING  shift, and go to state 77
    DOUBLE  shift, and go to state 78
    IDENT   shift, and go to state 79
    LPAR    shift, and go to state 80

    object_access       go to state 81
    literal             go to state 82
    expression          go to state 122
    suntheti_parastash  go to state 84
    addition            go to state 85
    multiplication      go to state 86
    division            go to state 87
    subtraction         go to state 88
    call_method         go to state 89


State 102

   58 subtraction: expression MINUS • expression

    INT     shift, and go to state 74
    CHAR    shift, and go to state 75
    BOOL    shift, and go to state 76
    STRING  shift, and go to state 77
    DOUBLE  shift, and go to state 78
    IDENT   shift, and go to state 79
    LPAR    shift, and go to state 80

    object_access       go to state 81
    literal             go to state 82
    expression          go to state 123
    suntheti_parastash  go to state 84
    addition            go to state 85
    multiplication      go to state 86
    division            go to state 87
    subtraction         go to state 88
    call_method         go to state 89


State 103

   57 division: expression DIV • expression

    INT     shift, and go to state 74
    CHAR    shift, and go to state 75
    BOOL    shift, and go to state 76
    STRING  shift, and go to state 77
    DOUBLE  shift, and go to state 78
    IDENT   shift, and go to state 79
    LPAR    shift, and go to state 80

    object_access       go to state 81
    literal             go to state 82
    expression          go to state 124
    suntheti_parastash  go to state 84
    addition            go to state 85
    multiplication      go to state 86
    division            go to state 87
    subtraction         go to state 88
    call_method         go to state 89


State 104

   56 multiplication: expression TIMES • expression

    INT     shift, and go to state 74
    CHAR    shift, and go to state 75
    BOOL    shift, and go to state 76
    STRING  shift, and go to state 77
    DOUBLE  shift, and go to state 78
    IDENT   shift, and go to state 79
    LPAR    shift, and go to state 80

    object_access       go to state 81
    literal             go to state 82
    expression          go to state 125
    suntheti_parastash  go to state 84
    addition            go to state 85
    multiplication      go to state 86
    division            go to state 87
    subtraction         go to state 88
    call_method         go to state 89


State 105

   55 addition: expression • PLUS expression
   56 multiplication: expression • TIMES expression
   57 division: expression • DIV expression
   58 subtraction: expression • MINUS expression
   68 condition: expression • conop expression
   69          | expression •

    OROP   shift, and go to state 126
    ANDOP  shift, and go to state 127
    EQUOP  shift, and go to state 128
    NOTOP  shift, and go to state 129
    RELOP  shift, and go to state 130
    PLUS   shift, and go to state 101
    MINUS  shift, and go to state 102
    DIV    shift, and go to state 103
    TIMES  shift, and go to state 104

    $default  reduce using rule 69 (condition)

    conop  go to state 131


State 106

   85 if: IF LPAR condition • RPAR LCURLY variable_declaration_list commands RCURLY elseif else

    RPAR  shift, and go to state 132


State 107

    7 variable_declaration_list: variable_declaration_list • variable_declaration
   67 while: DO LCURLY variable_declaration_list • commands RCURLY WHILE LPAR condition RPAR SEMICOLON

    DATATYPE    shift, and go to state 8
    PRIVATE     shift, and go to state 9
    PUBLIC      shift, and go to state 10
    CLASS_NAME  shift, and go to state 12

    $default  reduce using rule 30 (commands)

    variable_declaration  go to state 19
    modifier              go to state 15
    commands              go to state 133


State 108

   76 exp1: DATATYPE • IDENT EQUALS literal

    IDENT  shift, and go to state 134


State 109

   77 exp1: IDENT • EQUALS literal

    EQUALS  shift, and go to state 135


State 110

   75 for: FOR LPAR exp1 • SEMICOLON exp2 SEMICOLON exp3 RPAR LCURLY variable_declaration_list commands RCURLY

    SEMICOLON  shift, and go to state 136


State 111

   90 switch_statement: SWITCH LPAR IDENT • RPAR LCURLY case default_opt RCURLY

    RPAR  shift, and go to state 137


State 112

   95 print: OUTPRINT LPAR STRING • RPAR SEMICOLON
   96      | OUTPRINT LPAR STRING • ident_list RPAR SEMICOLON

    RPAR   shift, and go to state 138
    COMMA  shift, and go to state 139

    ident_list  go to state 140


State 113

   39 object_creation: NEW • CLASS_NAME LPAR RPAR

    CLASS_NAME  shift, and go to state 141


State 114

   38 assignment: IDENT EQUALS object_creation • SEMICOLON

    SEMICOLON  shift, and go to state 142


State 115

   37 assignment: IDENT EQUALS expression • SEMICOLON
   55 addition: expression • PLUS expression
   56 multiplication: expression • TIMES expression
   57 division: expression • DIV expression
   58 subtraction: expression • MINUS expression

    SEMICOLON  shift, and go to state 143
    PLUS       shift, and go to state 101
    MINUS      shift, and go to state 102
    DIV        shift, and go to state 103
    TIMES      shift, and go to state 104


State 116

   61 arguement_list: IDENT •

    $default  reduce using rule 61 (arguement_list)


State 117

   60 call_method: IDENT LPAR RPAR •

    $default  reduce using rule 60 (call_method)


State 118

   64 arguement_list: literal •

    $default  reduce using rule 64 (arguement_list)


State 119

   59 call_method: IDENT LPAR arguement_list • RPAR
   62 arguement_list: arguement_list • COMMA literal
   63               | arguement_list • COMMA IDENT

    RPAR   shift, and go to state 144
    COMMA  shift, and go to state 145


State 120

   14 object_access: IDENT DOT IDENT •

    $default  reduce using rule 14 (object_access)


State 121

   52 suntheti_parastash: LPAR expression RPAR •

    $default  reduce using rule 52 (suntheti_parastash)


State 122

   55 addition: expression • PLUS expression
   55         | expression PLUS expression •
   56 multiplication: expression • TIMES expression
   57 division: expression • DIV expression
   58 subtraction: expression • MINUS expression

    MINUS  shift, and go to state 102
    DIV    shift, and go to state 103
    TIMES  shift, and go to state 104

    $default  reduce using rule 55 (addition)


State 123

   55 addition: expression • PLUS expression
   56 multiplication: expression • TIMES expression
   57 division: expression • DIV expression
   58 subtraction: expression • MINUS expression
   58            | expression MINUS expression •

    DIV    shift, and go to state 103
    TIMES  shift, and go to state 104

    $default  reduce using rule 58 (subtraction)


State 124

   55 addition: expression • PLUS expression
   56 multiplication: expression • TIMES expression
   57 division: expression • DIV expression
   57         | expression DIV expression •
   58 subtraction: expression • MINUS expression

    TIMES  shift, and go to state 104

    $default  reduce using rule 57 (division)


State 125

   55 addition: expression • PLUS expression
   56 multiplication: expression • TIMES expression
   56               | expression TIMES expression •
   57 division: expression • DIV expression
   58 subtraction: expression • MINUS expression

    $default  reduce using rule 56 (multiplication)


State 126

   74 conop: OROP •

    $default  reduce using rule 74 (conop)


State 127

   73 conop: ANDOP •

    $default  reduce using rule 73 (conop)


State 128

   71 conop: EQUOP •

    $default  reduce using rule 71 (conop)


State 129

   72 conop: NOTOP •

    $default  reduce using rule 72 (conop)


State 130

   70 conop: RELOP •

    $default  reduce using rule 70 (conop)


State 131

   68 condition: expression conop • expression

    INT     shift, and go to state 74
    CHAR    shift, and go to state 75
    BOOL    shift, and go to state 76
    STRING  shift, and go to state 77
    DOUBLE  shift, and go to state 78
    IDENT   shift, and go to state 79
    LPAR    shift, and go to state 80

    object_access       go to state 81
    literal             go to state 82
    expression          go to state 146
    suntheti_parastash  go to state 84
    addition            go to state 85
    multiplication      go to state 86
    division            go to state 87
    subtraction         go to state 88
    call_method         go to state 89


State 132

   85 if: IF LPAR condition RPAR • LCURLY variable_declaration_list commands RCURLY elseif else

    LCURLY  shift, and go to state 147


State 133

   31 commands: commands • assignment
   32         | commands • loop
   33         | commands • control
   34         | commands • print
   35         | commands • return
   36         | commands • break
   67 while: DO LCURLY variable_declaration_list commands • RCURLY WHILE LPAR condition RPAR SEMICOLON

    RETURN    shift, and go to state 56
    IF        shift, and go to state 57
    DO        shift, and go to state 58
    FOR       shift, and go to state 59
    SWITCH    shift, and go to state 60
    BREAK     shift, and go to state 61
    OUTPRINT  shift, and go to state 62
    IDENT     shift, and go to state 63
    RCURLY    shift, and go to state 148

    assignment        go to state 64
    loop              go to state 65
    while             go to state 66
    for               go to state 67
    control           go to state 68
    if                go to state 69
    switch_statement  go to state 70
    print             go to state 71
    return            go to state 72
    break             go to state 73


State 134

   76 exp1: DATATYPE IDENT • EQUALS literal

    EQUALS  shift, and go to state 149


State 135

   77 exp1: IDENT EQUALS • literal

    INT     shift, and go to state 74
    CHAR    shift, and go to state 75
    BOOL    shift, and go to state 76
    STRING  shift, and go to state 77
    DOUBLE  shift, and go to state 78

    literal  go to state 150


State 136

   75 for: FOR LPAR exp1 SEMICOLON • exp2 SEMICOLON exp3 RPAR LCURLY variable_declaration_list commands RCURLY

    IDENT  shift, and go to state 151

    exp2  go to state 152


State 137

   90 switch_statement: SWITCH LPAR IDENT RPAR • LCURLY case default_opt RCURLY

    LCURLY  shift, and go to state 153


State 138

   95 print: OUTPRINT LPAR STRING RPAR • SEMICOLON

    SEMICOLON  shift, and go to state 154


State 139

   97 ident_list: COMMA • IDENT

    IDENT  shift, and go to state 155


State 140

   96 print: OUTPRINT LPAR STRING ident_list • RPAR SEMICOLON
   98 ident_list: ident_list • COMMA IDENT

    RPAR   shift, and go to state 156
    COMMA  shift, and go to state 157


State 141

   39 object_creation: NEW CLASS_NAME • LPAR RPAR

    LPAR  shift, and go to state 158


State 142

   38 assignment: IDENT EQUALS object_creation SEMICOLON •

    $default  reduce using rule 38 (assignment)


State 143

   37 assignment: IDENT EQUALS expression SEMICOLON •

    $default  reduce using rule 37 (assignment)


State 144

   59 call_method: IDENT LPAR arguement_list RPAR •

    $default  reduce using rule 59 (call_method)


State 145

   62 arguement_list: arguement_list COMMA • literal
   63               | arguement_list COMMA • IDENT

    INT     shift, and go to state 74
    CHAR    shift, and go to state 75
    BOOL    shift, and go to state 76
    STRING  shift, and go to state 77
    DOUBLE  shift, and go to state 78
    IDENT   shift, and go to state 159

    literal  go to state 160


State 146

   55 addition: expression • PLUS expression
   56 multiplication: expression • TIMES expression
   57 division: expression • DIV expression
   58 subtraction: expression • MINUS expression
   68 condition: expression conop expression •

    PLUS   shift, and go to state 101
    MINUS  shift, and go to state 102
    DIV    shift, and go to state 103
    TIMES  shift, and go to state 104

    $default  reduce using rule 68 (condition)


State 147

   85 if: IF LPAR condition RPAR LCURLY • variable_declaration_list commands RCURLY elseif else

    DATATYPE    shift, and go to state 8
    PRIVATE     shift, and go to state 9
    PUBLIC      shift, and go to state 10
    CLASS_NAME  shift, and go to state 12

    variable_declaration_list  go to state 161
    variable_declaration       go to state 14
    modifier                   go to state 15


State 148

   67 while: DO LCURLY variable_declaration_list commands RCURLY • WHILE LPAR condition RPAR SEMICOLON

    WHILE  shift, and go to state 162


State 149

   76 exp1: DATATYPE IDENT EQUALS • literal

    INT     shift, and go to state 74
    CHAR    shift, and go to state 75
    BOOL    shift, and go to state 76
    STRING  shift, and go to state 77
    DOUBLE  shift, and go to state 78

    literal  go to state 163


State 150

   77 exp1: IDENT EQUALS literal •

    $default  reduce using rule 77 (exp1)


State 151

   78 exp2: IDENT • conop literal

    OROP   shift, and go to state 126
    ANDOP  shift, and go to state 127
    EQUOP  shift, and go to state 128
    NOTOP  shift, and go to state 129
    RELOP  shift, and go to state 130

    conop  go to state 164


State 152

   75 for: FOR LPAR exp1 SEMICOLON exp2 • SEMICOLON exp3 RPAR LCURLY variable_declaration_list commands RCURLY

    SEMICOLON  shift, and go to state 165


State 153

   90 switch_statement: SWITCH LPAR IDENT RPAR LCURLY • case default_opt RCURLY

    $default  reduce using rule 91 (case)

    case  go to state 166


State 154

   95 print: OUTPRINT LPAR STRING RPAR SEMICOLON •

    $default  reduce using rule 95 (print)


State 155

   97 ident_list: COMMA IDENT •

    $default  reduce using rule 97 (ident_list)


State 156

   96 print: OUTPRINT LPAR STRING ident_list RPAR • SEMICOLON

    SEMICOLON  shift, and go to state 167


State 157

   98 ident_list: ident_list COMMA • IDENT

    IDENT  shift, and go to state 168


State 158

   39 object_creation: NEW CLASS_NAME LPAR • RPAR

    RPAR  shift, and go to state 169


State 159

   63 arguement_list: arguement_list COMMA IDENT •

    $default  reduce using rule 63 (arguement_list)


State 160

   62 arguement_list: arguement_list COMMA literal •

    $default  reduce using rule 62 (arguement_list)


State 161

    7 variable_declaration_list: variable_declaration_list • variable_declaration
   85 if: IF LPAR condition RPAR LCURLY variable_declaration_list • commands RCURLY elseif else

    DATATYPE    shift, and go to state 8
    PRIVATE     shift, and go to state 9
    PUBLIC      shift, and go to state 10
    CLASS_NAME  shift, and go to state 12

    $default  reduce using rule 30 (commands)

    variable_declaration  go to state 19
    modifier              go to state 15
    commands              go to state 170


State 162

   67 while: DO LCURLY variable_declaration_list commands RCURLY WHILE • LPAR condition RPAR SEMICOLON

    LPAR  shift, and go to state 171


State 163

   76 exp1: DATATYPE IDENT EQUALS literal •

    $default  reduce using rule 76 (exp1)


State 164

   78 exp2: IDENT conop • literal

    INT     shift, and go to state 74
    CHAR    shift, and go to state 75
    BOOL    shift, and go to state 76
    STRING  shift, and go to state 77
    DOUBLE  shift, and go to state 78

    literal  go to state 172


State 165

   75 for: FOR LPAR exp1 SEMICOLON exp2 SEMICOLON • exp3 RPAR LCURLY variable_declaration_list commands RCURLY

    IDENT  shift, and go to state 173

    exp3  go to state 174


State 166

   90 switch_statement: SWITCH LPAR IDENT RPAR LCURLY case • default_opt RCURLY
   92 case: case • CASE literal COLON LCURLY variable_declaration_list commands RCURLY

    CASE     shift, and go to state 175
    DEFAULT  shift, and go to state 176

    $default  reduce using rule 93 (default_opt)

    default_opt  go to state 177


State 167

   96 print: OUTPRINT LPAR STRING ident_list RPAR SEMICOLON •

    $default  reduce using rule 96 (print)


State 168

   98 ident_list: ident_list COMMA IDENT •

    $default  reduce using rule 98 (ident_list)


State 169

   39 object_creation: NEW CLASS_NAME LPAR RPAR •

    $default  reduce using rule 39 (object_creation)


State 170

   31 commands: commands • assignment
   32         | commands • loop
   33         | commands • control
   34         | commands • print
   35         | commands • return
   36         | commands • break
   85 if: IF LPAR condition RPAR LCURLY variable_declaration_list commands • RCURLY elseif else

    RETURN    shift, and go to state 56
    IF        shift, and go to state 57
    DO        shift, and go to state 58
    FOR       shift, and go to state 59
    SWITCH    shift, and go to state 60
    BREAK     shift, and go to state 61
    OUTPRINT  shift, and go to state 62
    IDENT     shift, and go to state 63
    RCURLY    shift, and go to state 178

    assignment        go to state 64
    loop              go to state 65
    while             go to state 66
    for               go to state 67
    control           go to state 68
    if                go to state 69
    switch_statement  go to state 70
    print             go to state 71
    return            go to state 72
    break             go to state 73


State 171

   67 while: DO LCURLY variable_declaration_list commands RCURLY WHILE LPAR • condition RPAR SEMICOLON

    INT     shift, and go to state 74
    CHAR    shift, and go to state 75
    BOOL    shift, and go to state 76
    STRING  shift, and go to state 77
    DOUBLE  shift, and go to state 78
    IDENT   shift, and go to state 79
    LPAR    shift, and go to state 80

    object_access       go to state 81
    literal             go to state 82
    expression          go to state 105
    suntheti_parastash  go to state 84
    addition            go to state 85
    multiplication      go to state 86
    division            go to state 87
    subtraction         go to state 88
    call_method         go to state 89
    condition           go to state 179


State 172

   78 exp2: IDENT conop literal •

    $default  reduce using rule 78 (exp2)


State 173

   79 exp3: IDENT • PLUS expression
   80     | IDENT • MINUS expression
   81     | IDENT • DIV expression
   82     | IDENT • TIMES expression

    PLUS   shift, and go to state 180
    MINUS  shift, and go to state 181
    DIV    shift, and go to state 182
    TIMES  shift, and go to state 183


State 174

   75 for: FOR LPAR exp1 SEMICOLON exp2 SEMICOLON exp3 • RPAR LCURLY variable_declaration_list commands RCURLY

    RPAR  shift, and go to state 184


State 175

   92 case: case CASE • literal COLON LCURLY variable_declaration_list commands RCURLY

    INT     shift, and go to state 74
    CHAR    shift, and go to state 75
    BOOL    shift, and go to state 76
    STRING  shift, and go to state 77
    DOUBLE  shift, and go to state 78

    literal  go to state 185


State 176

   94 default_opt: DEFAULT • COLON LCURLY variable_declaration_list commands RCURLY

    COLON  shift, and go to state 186


State 177

   90 switch_statement: SWITCH LPAR IDENT RPAR LCURLY case default_opt • RCURLY

    RCURLY  shift, and go to state 187


State 178

   85 if: IF LPAR condition RPAR LCURLY variable_declaration_list commands RCURLY • elseif else

    $default  reduce using rule 86 (elseif)

    elseif  go to state 188


State 179

   67 while: DO LCURLY variable_declaration_list commands RCURLY WHILE LPAR condition • RPAR SEMICOLON

    RPAR  shift, and go to state 189


State 180

   79 exp3: IDENT PLUS • expression

    INT     shift, and go to state 74
    CHAR    shift, and go to state 75
    BOOL    shift, and go to state 76
    STRING  shift, and go to state 77
    DOUBLE  shift, and go to state 78
    IDENT   shift, and go to state 79
    LPAR    shift, and go to state 80

    object_access       go to state 81
    literal             go to state 82
    expression          go to state 190
    suntheti_parastash  go to state 84
    addition            go to state 85
    multiplication      go to state 86
    division            go to state 87
    subtraction         go to state 88
    call_method         go to state 89


State 181

   80 exp3: IDENT MINUS • expression

    INT     shift, and go to state 74
    CHAR    shift, and go to state 75
    BOOL    shift, and go to state 76
    STRING  shift, and go to state 77
    DOUBLE  shift, and go to state 78
    IDENT   shift, and go to state 79
    LPAR    shift, and go to state 80

    object_access       go to state 81
    literal             go to state 82
    expression          go to state 191
    suntheti_parastash  go to state 84
    addition            go to state 85
    multiplication      go to state 86
    division            go to state 87
    subtraction         go to state 88
    call_method         go to state 89


State 182

   81 exp3: IDENT DIV • expression

    INT     shift, and go to state 74
    CHAR    shift, and go to state 75
    BOOL    shift, and go to state 76
    STRING  shift, and go to state 77
    DOUBLE  shift, and go to state 78
    IDENT   shift, and go to state 79
    LPAR    shift, and go to state 80

    object_access       go to state 81
    literal             go to state 82
    expression          go to state 192
    suntheti_parastash  go to state 84
    addition            go to state 85
    multiplication      go to state 86
    division            go to state 87
    subtraction         go to state 88
    call_method         go to state 89


State 183

   82 exp3: IDENT TIMES • expression

    INT     shift, and go to state 74
    CHAR    shift, and go to state 75
    BOOL    shift, and go to state 76
    STRING  shift, and go to state 77
    DOUBLE  shift, and go to state 78
    IDENT   shift, and go to state 79
    LPAR    shift, and go to state 80

    object_access       go to state 81
    literal             go to state 82
    expression          go to state 193
    suntheti_parastash  go to state 84
    addition            go to state 85
    multiplication      go to state 86
    division            go to state 87
    subtraction         go to state 88
    call_method         go to state 89


State 184

   75 for: FOR LPAR exp1 SEMICOLON exp2 SEMICOLON exp3 RPAR • LCURLY variable_declaration_list commands RCURLY

    LCURLY  shift, and go to state 194


State 185

   92 case: case CASE literal • COLON LCURLY variable_declaration_list commands RCURLY

    COLON  shift, and go to state 195


State 186

   94 default_opt: DEFAULT COLON • LCURLY variable_declaration_list commands RCURLY

    LCURLY  shift, and go to state 196


State 187

   90 switch_statement: SWITCH LPAR IDENT RPAR LCURLY case default_opt RCURLY •

    $default  reduce using rule 90 (switch_statement)


State 188

   85 if: IF LPAR condition RPAR LCURLY variable_declaration_list commands RCURLY elseif • else
   87 elseif: elseif • ELSE IF LPAR condition RPAR LCURLY variable_declaration_list commands RCURLY

    ELSE  shift, and go to state 197

    $default  reduce using rule 88 (else)

    else  go to state 198


State 189

   67 while: DO LCURLY variable_declaration_list commands RCURLY WHILE LPAR condition RPAR • SEMICOLON

    SEMICOLON  shift, and go to state 199


State 190

   55 addition: expression • PLUS expression
   56 multiplication: expression • TIMES expression
   57 division: expression • DIV expression
   58 subtraction: expression • MINUS expression
   79 exp3: IDENT PLUS expression •

    PLUS   shift, and go to state 101
    MINUS  shift, and go to state 102
    DIV    shift, and go to state 103
    TIMES  shift, and go to state 104

    $default  reduce using rule 79 (exp3)


State 191

   55 addition: expression • PLUS expression
   56 multiplication: expression • TIMES expression
   57 division: expression • DIV expression
   58 subtraction: expression • MINUS expression
   80 exp3: IDENT MINUS expression •

    PLUS   shift, and go to state 101
    MINUS  shift, and go to state 102
    DIV    shift, and go to state 103
    TIMES  shift, and go to state 104

    $default  reduce using rule 80 (exp3)


State 192

   55 addition: expression • PLUS expression
   56 multiplication: expression • TIMES expression
   57 division: expression • DIV expression
   58 subtraction: expression • MINUS expression
   81 exp3: IDENT DIV expression •

    PLUS   shift, and go to state 101
    MINUS  shift, and go to state 102
    DIV    shift, and go to state 103
    TIMES  shift, and go to state 104

    $default  reduce using rule 81 (exp3)


State 193

   55 addition: expression • PLUS expression
   56 multiplication: expression • TIMES expression
   57 division: expression • DIV expression
   58 subtraction: expression • MINUS expression
   82 exp3: IDENT TIMES expression •

    PLUS   shift, and go to state 101
    MINUS  shift, and go to state 102
    DIV    shift, and go to state 103
    TIMES  shift, and go to state 104

    $default  reduce using rule 82 (exp3)


State 194

   75 for: FOR LPAR exp1 SEMICOLON exp2 SEMICOLON exp3 RPAR LCURLY • variable_declaration_list commands RCURLY

    DATATYPE    shift, and go to state 8
    PRIVATE     shift, and go to state 9
    PUBLIC      shift, and go to state 10
    CLASS_NAME  shift, and go to state 12

    variable_declaration_list  go to state 200
    variable_declaration       go to state 14
    modifier                   go to state 15


State 195

   92 case: case CASE literal COLON • LCURLY variable_declaration_list commands RCURLY

    LCURLY  shift, and go to state 201


State 196

   94 default_opt: DEFAULT COLON LCURLY • variable_declaration_list commands RCURLY

    DATATYPE    shift, and go to state 8
    PRIVATE     shift, and go to state 9
    PUBLIC      shift, and go to state 10
    CLASS_NAME  shift, and go to state 12

    variable_declaration_list  go to state 202
    variable_declaration       go to state 14
    modifier                   go to state 15


State 197

   87 elseif: elseif ELSE • IF LPAR condition RPAR LCURLY variable_declaration_list commands RCURLY
   89 else: ELSE • LCURLY variable_declaration_list commands RCURLY

    IF      shift, and go to state 203
    LCURLY  shift, and go to state 204


State 198

   85 if: IF LPAR condition RPAR LCURLY variable_declaration_list commands RCURLY elseif else •

    $default  reduce using rule 85 (if)


State 199

   67 while: DO LCURLY variable_declaration_list commands RCURLY WHILE LPAR condition RPAR SEMICOLON •

    $default  reduce using rule 67 (while)


State 200

    7 variable_declaration_list: variable_declaration_list • variable_declaration
   75 for: FOR LPAR exp1 SEMICOLON exp2 SEMICOLON exp3 RPAR LCURLY variable_declaration_list • commands RCURLY

    DATATYPE    shift, and go to state 8
    PRIVATE     shift, and go to state 9
    PUBLIC      shift, and go to state 10
    CLASS_NAME  shift, and go to state 12

    $default  reduce using rule 30 (commands)

    variable_declaration  go to state 19
    modifier              go to state 15
    commands              go to state 205


State 201

   92 case: case CASE literal COLON LCURLY • variable_declaration_list commands RCURLY

    DATATYPE    shift, and go to state 8
    PRIVATE     shift, and go to state 9
    PUBLIC      shift, and go to state 10
    CLASS_NAME  shift, and go to state 12

    variable_declaration_list  go to state 206
    variable_declaration       go to state 14
    modifier                   go to state 15


State 202

    7 variable_declaration_list: variable_declaration_list • variable_declaration
   94 default_opt: DEFAULT COLON LCURLY variable_declaration_list • commands RCURLY

    DATATYPE    shift, and go to state 8
    PRIVATE     shift, and go to state 9
    PUBLIC      shift, and go to state 10
    CLASS_NAME  shift, and go to state 12

    $default  reduce using rule 30 (commands)

    variable_declaration  go to state 19
    modifier              go to state 15
    commands              go to state 207


State 203

   87 elseif: elseif ELSE IF • LPAR condition RPAR LCURLY variable_declaration_list commands RCURLY

    LPAR  shift, and go to state 208


State 204

   89 else: ELSE LCURLY • variable_declaration_list commands RCURLY

    DATATYPE    shift, and go to state 8
    PRIVATE     shift, and go to state 9
    PUBLIC      shift, and go to state 10
    CLASS_NAME  shift, and go to state 12

    variable_declaration_list  go to state 209
    variable_declaration       go to state 14
    modifier                   go to state 15


State 205

   31 commands: commands • assignment
   32         | commands • loop
   33         | commands • control
   34         | commands • print
   35         | commands • return
   36         | commands • break
   75 for: FOR LPAR exp1 SEMICOLON exp2 SEMICOLON exp3 RPAR LCURLY variable_declaration_list commands • RCURLY

    RETURN    shift, and go to state 56
    IF        shift, and go to state 57
    DO        shift, and go to state 58
    FOR       shift, and go to state 59
    SWITCH    shift, and go to state 60
    BREAK     shift, and go to state 61
    OUTPRINT  shift, and go to state 62
    IDENT     shift, and go to state 63
    RCURLY    shift, and go to state 210

    assignment        go to state 64
    loop              go to state 65
    while             go to state 66
    for               go to state 67
    control           go to state 68
    if                go to state 69
    switch_statement  go to state 70
    print             go to state 71
    return            go to state 72
    break             go to state 73


State 206

    7 variable_declaration_list: variable_declaration_list • variable_declaration
   92 case: case CASE literal COLON LCURLY variable_declaration_list • commands RCURLY

    DATATYPE    shift, and go to state 8
    PRIVATE     shift, and go to state 9
    PUBLIC      shift, and go to state 10
    CLASS_NAME  shift, and go to state 12

    $default  reduce using rule 30 (commands)

    variable_declaration  go to state 19
    modifier              go to state 15
    commands              go to state 211


State 207

   31 commands: commands • assignment
   32         | commands • loop
   33         | commands • control
   34         | commands • print
   35         | commands • return
   36         | commands • break
   94 default_opt: DEFAULT COLON LCURLY variable_declaration_list commands • RCURLY

    RETURN    shift, and go to state 56
    IF        shift, and go to state 57
    DO        shift, and go to state 58
    FOR       shift, and go to state 59
    SWITCH    shift, and go to state 60
    BREAK     shift, and go to state 61
    OUTPRINT  shift, and go to state 62
    IDENT     shift, and go to state 63
    RCURLY    shift, and go to state 212

    assignment        go to state 64
    loop              go to state 65
    while             go to state 66
    for               go to state 67
    control           go to state 68
    if                go to state 69
    switch_statement  go to state 70
    print             go to state 71
    return            go to state 72
    break             go to state 73


State 208

   87 elseif: elseif ELSE IF LPAR • condition RPAR LCURLY variable_declaration_list commands RCURLY

    INT     shift, and go to state 74
    CHAR    shift, and go to state 75
    BOOL    shift, and go to state 76
    STRING  shift, and go to state 77
    DOUBLE  shift, and go to state 78
    IDENT   shift, and go to state 79
    LPAR    shift, and go to state 80

    object_access       go to state 81
    literal             go to state 82
    expression          go to state 105
    suntheti_parastash  go to state 84
    addition            go to state 85
    multiplication      go to state 86
    division            go to state 87
    subtraction         go to state 88
    call_method         go to state 89
    condition           go to state 213


State 209

    7 variable_declaration_list: variable_declaration_list • variable_declaration
   89 else: ELSE LCURLY variable_declaration_list • commands RCURLY

    DATATYPE    shift, and go to state 8
    PRIVATE     shift, and go to state 9
    PUBLIC      shift, and go to state 10
    CLASS_NAME  shift, and go to state 12

    $default  reduce using rule 30 (commands)

    variable_declaration  go to state 19
    modifier              go to state 15
    commands              go to state 214


State 210

   75 for: FOR LPAR exp1 SEMICOLON exp2 SEMICOLON exp3 RPAR LCURLY variable_declaration_list commands RCURLY •

    $default  reduce using rule 75 (for)


State 211

   31 commands: commands • assignment
   32         | commands • loop
   33         | commands • control
   34         | commands • print
   35         | commands • return
   36         | commands • break
   92 case: case CASE literal COLON LCURLY variable_declaration_list commands • RCURLY

    RETURN    shift, and go to state 56
    IF        shift, and go to state 57
    DO        shift, and go to state 58
    FOR       shift, and go to state 59
    SWITCH    shift, and go to state 60
    BREAK     shift, and go to state 61
    OUTPRINT  shift, and go to state 62
    IDENT     shift, and go to state 63
    RCURLY    shift, and go to state 215

    assignment        go to state 64
    loop              go to state 65
    while             go to state 66
    for               go to state 67
    control           go to state 68
    if                go to state 69
    switch_statement  go to state 70
    print             go to state 71
    return            go to state 72
    break             go to state 73


State 212

   94 default_opt: DEFAULT COLON LCURLY variable_declaration_list commands RCURLY •

    $default  reduce using rule 94 (default_opt)


State 213

   87 elseif: elseif ELSE IF LPAR condition • RPAR LCURLY variable_declaration_list commands RCURLY

    RPAR  shift, and go to state 216


State 214

   31 commands: commands • assignment
   32         | commands • loop
   33         | commands • control
   34         | commands • print
   35         | commands • return
   36         | commands • break
   89 else: ELSE LCURLY variable_declaration_list commands • RCURLY

    RETURN    shift, and go to state 56
    IF        shift, and go to state 57
    DO        shift, and go to state 58
    FOR       shift, and go to state 59
    SWITCH    shift, and go to state 60
    BREAK     shift, and go to state 61
    OUTPRINT  shift, and go to state 62
    IDENT     shift, and go to state 63
    RCURLY    shift, and go to state 217

    assignment        go to state 64
    loop              go to state 65
    while             go to state 66
    for               go to state 67
    control           go to state 68
    if                go to state 69
    switch_statement  go to state 70
    print             go to state 71
    return            go to state 72
    break             go to state 73


State 215

   92 case: case CASE literal COLON LCURLY variable_declaration_list commands RCURLY •

    $default  reduce using rule 92 (case)


State 216

   87 elseif: elseif ELSE IF LPAR condition RPAR • LCURLY variable_declaration_list commands RCURLY

    LCURLY  shift, and go to state 218


State 217

   89 else: ELSE LCURLY variable_declaration_list commands RCURLY •

    $default  reduce using rule 89 (else)


State 218

   87 elseif: elseif ELSE IF LPAR condition RPAR LCURLY • variable_declaration_list commands RCURLY

    DATATYPE    shift, and go to state 8
    PRIVATE     shift, and go to state 9
    PUBLIC      shift, and go to state 10
    CLASS_NAME  shift, and go to state 12

    variable_declaration_list  go to state 219
    variable_declaration       go to state 14
    modifier                   go to state 15


State 219

    7 variable_declaration_list: variable_declaration_list • variable_declaration
   87 elseif: elseif ELSE IF LPAR condition RPAR LCURLY variable_declaration_list • commands RCURLY

    DATATYPE    shift, and go to state 8
    PRIVATE     shift, and go to state 9
    PUBLIC      shift, and go to state 10
    CLASS_NAME  shift, and go to state 12

    $default  reduce using rule 30 (commands)

    variable_declaration  go to state 19
    modifier              go to state 15
    commands              go to state 220


State 220

   31 commands: commands • assignment
   32         | commands • loop
   33         | commands • control
   34         | commands • print
   35         | commands • return
   36         | commands • break
   87 elseif: elseif ELSE IF LPAR condition RPAR LCURLY variable_declaration_list commands • RCURLY

    RETURN    shift, and go to state 56
    IF        shift, and go to state 57
    DO        shift, and go to state 58
    FOR       shift, and go to state 59
    SWITCH    shift, and go to state 60
    BREAK     shift, and go to state 61
    OUTPRINT  shift, and go to state 62
    IDENT     shift, and go to state 63
    RCURLY    shift, and go to state 221

    assignment        go to state 64
    loop              go to state 65
    while             go to state 66
    for               go to state 67
    control           go to state 68
    if                go to state 69
    switch_statement  go to state 70
    print             go to state 71
    return            go to state 72
    break             go to state 73


State 221

   87 elseif: elseif ELSE IF LPAR condition RPAR LCURLY variable_declaration_list commands RCURLY •

    $default  reduce using rule 87 (elseif)
